//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Abide.Tag.Cache.Generated
{
    using System;
    using Abide.HaloLibrary;
    using Abide.Tag;
    
    /// <summary>
    /// Represents the generated lists_block tag block.
    /// </summary>
    public sealed class ListsBlock : Block
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ListsBlock"/> class.
        /// </summary>
        public ListsBlock()
        {
            this.Fields.Add(new SkipField("", 4));
            this.Fields.Add(new ShortIntegerField("size*"));
            this.Fields.Add(new ShortIntegerField("count*"));
            this.Fields.Add(new SkipField("", 4));
            this.Fields.Add(new SkipField("", 4));
            this.Fields.Add(new LongIntegerField("child shapes size*"));
            this.Fields.Add(new LongIntegerField("child shapes capacity*"));
            this.Fields.Add(new EnumField("shape type*", "sphere", "pill", "box", "triangle", "polyhedron", "multi sphere", "unused 0", "unused 1", "unused 2", "unused 3", "unused 4", "unused 5", "unused 6", "unused 7", "list", "mopp"));
            this.Fields.Add(new ShortBlockIndexField("shape*"));
            this.Fields.Add(new LongIntegerField("collision filter*"));
            this.Fields.Add(new EnumField("shape type*", "sphere", "pill", "box", "triangle", "polyhedron", "multi sphere", "unused 0", "unused 1", "unused 2", "unused 3", "unused 4", "unused 5", "unused 6", "unused 7", "list", "mopp"));
            this.Fields.Add(new ShortBlockIndexField("shape*"));
            this.Fields.Add(new LongIntegerField("collision filter*"));
            this.Fields.Add(new EnumField("shape type*", "sphere", "pill", "box", "triangle", "polyhedron", "multi sphere", "unused 0", "unused 1", "unused 2", "unused 3", "unused 4", "unused 5", "unused 6", "unused 7", "list", "mopp"));
            this.Fields.Add(new ShortBlockIndexField("shape*"));
            this.Fields.Add(new LongIntegerField("collision filter*"));
            this.Fields.Add(new EnumField("shape type*", "sphere", "pill", "box", "triangle", "polyhedron", "multi sphere", "unused 0", "unused 1", "unused 2", "unused 3", "unused 4", "unused 5", "unused 6", "unused 7", "list", "mopp"));
            this.Fields.Add(new ShortBlockIndexField("shape*"));
            this.Fields.Add(new LongIntegerField("collision filter*"));
        }
        /// <summary>
        /// Gets and returns the name of the lists_block tag block.
        /// </summary>
        public override string BlockName
        {
            get
            {
                return "lists_block";
            }
        }
        /// <summary>
        /// Gets and returns the display name of the lists_block tag block.
        /// </summary>
        public override string DisplayName
        {
            get
            {
                return "lists_block";
            }
        }
        /// <summary>
        /// Gets and returns the maximum number of elements allowed of the lists_block tag block.
        /// </summary>
        public override int MaximumElementCount
        {
            get
            {
                return 64;
            }
        }
        /// <summary>
        /// Gets and returns the alignment of the lists_block tag block.
        /// </summary>
        public override int Alignment
        {
            get
            {
                return 4;
            }
        }
    }
}
