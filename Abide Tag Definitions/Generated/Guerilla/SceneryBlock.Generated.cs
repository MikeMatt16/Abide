//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Abide.Tag.Guerilla.Generated
{
    using System;
    using Abide.HaloLibrary;
    using Abide.Tag;
    
    /// <summary>
    /// Represents the generated scenery_block tag block.
    /// </summary>
    public sealed class SceneryBlock : Block
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SceneryBlock"/> class.
        /// </summary>
        public SceneryBlock()
        {
            this.Fields.Add(new ExplanationField("Pathfinding", "Indicate whether, by default, we should create pathfinding data for this type of " +
                        "scenery"));
            this.Fields.Add(new EnumField("pathfinding policy", "Pathfinding CUT-OUT", "Pathfinding STATIC", "Pathfinding DYNAMIC", "Pathfinding NONE"));
            this.Fields.Add(new WordFlagsField("flags", "physically simulates#stimulates?"));
            this.Fields.Add(new ExplanationField("Lightmapping", "Indicate whether, by default, how we should lightmap this type of scenery"));
            this.Fields.Add(new EnumField("lightmapping policy", "Per-Vertex", "Per-Pixel (not implemented)", "Dynamic"));
            this.Fields.Add(new PadField("", 2));
        }
        /// <summary>
        /// Gets and returns the name of the scenery_block tag block.
        /// </summary>
        public override string BlockName
        {
            get
            {
                return "scenery_block";
            }
        }
        /// <summary>
        /// Gets and returns the display name of the scenery_block tag block.
        /// </summary>
        public override string DisplayName
        {
            get
            {
                return "scenery";
            }
        }
        /// <summary>
        /// Gets and returns the maximum number of elements allowed of the scenery_block tag block.
        /// </summary>
        public override int MaximumElementCount
        {
            get
            {
                return 1;
            }
        }
        /// <summary>
        /// Gets and returns the alignment of the scenery_block tag block.
        /// </summary>
        public override int Alignment
        {
            get
            {
                return 4;
            }
        }
    }
}
