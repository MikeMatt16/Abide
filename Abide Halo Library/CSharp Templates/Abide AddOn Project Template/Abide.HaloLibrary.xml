<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Abide.HaloLibrary</name>
    </assembly>
    <members>
        <member name="T:Abide.HaloLibrary.Halo2Map.IndexEntry">
            <summary>
            Represents a Halo 2 object index entry.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.IndexEntry.Root">
            <summary>
            Gets and returns the root of the tag. 
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.IndexEntry.Id">
            <summary>
            Gets and returns the ID of the object entry.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.IndexEntry.Offset">
            <summary>
            Gets and returns the offset of the object entry's tag data.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.IndexEntry.Size">
            <summary>
            Gets and returns the size of the object entry's tag data.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.IndexEntry.Filename">
            <summary>
            Gets or sets the filename of the index entry.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.IndexEntry.PostProcessedOffset">
            <summary>
            Gets or sets the post-processed offset of this entry's tag data.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.IndexEntry.PostProcessedSize">
            <summary>
            Gets or sets the post-processed size of this entry's tag data.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.IndexEntry.TagData">
            <summary>
            Gets or sets the stream that contains this tag's data.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.IndexEntry.Raws">
            <summary>
            Gets and returns a list of internal raw datas contained within this tag data. 
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.IndexEntry.Strings">
            <summary>
            Gets and returns a list of localized strings contained within this tag data.
            </summary>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.IndexEntry.#ctor(Abide.HaloLibrary.Halo2Map.ObjectEntry,System.String,Abide.HaloLibrary.Halo2Map.TagHierarchy)">
            <summary>
            Initializes a new <see cref="T:Abide.HaloLibrary.Halo2Map.IndexEntry"/> using the supplied object entry, file name, and tag hierarchy.
            </summary>
            <param name="objectEntry">The object entry for this index entry.</param>
            <param name="filename">The file path of this index entry.</param>
            <param name="tagHierarchy">The tag hierarchy for this index entry.</param>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.IndexEntry.GetObjectEntry">
            <summary>
            Returns this index entry's index object entry.
            </summary>
            <returns>This index entry's object entry.</returns>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.IndexEntry.GetTagHierarchy">
            <summary>
            Returns this index entry's tag hierarchy.
            </summary>
            <returns>This index entry's tag hierarchy.</returns>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.IndexEntry.ToString">
            <summary>
            Returns a string representation of this index entry.
            </summary>
            <returns>A string representation of the index entry.</returns>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.IndexEntry.Dispose">
            <summary>
            Releases any resources used by the index entry.
            </summary>
        </member>
        <member name="T:Abide.HaloLibrary.Halo2Map.MapFile">
            <summary>
            Represents a Halo 2 binary map file.
            </summary>
        </member>
        <member name="F:Abide.HaloLibrary.Halo2Map.MapFile.MinLength">
            <summary>
            Represents the minimum length of a Halo 2 map file.
            This value is the sum of the length of a <see cref="T:Abide.HaloLibrary.Halo2Map.Header"/> structure, and the minimum length of the index table.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.MapFile.Name">
            <summary>
            Gets or sets the Halo 2 map's name.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.MapFile.Build">
            <summary>
            Gets and returns the Halo 2 map's build string.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.MapFile.IndexEntries">
            <summary>
            Gets and returns the Halo 2 map's index entry list.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.MapFile.TagDataStream">
            <summary>
            Gets and returns the stream containing the tags' data.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.MapFile.Strings">
            <summary>
            Gets and returns a list of the Halo 2 map's string IDs.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.MapFile.Tags">
            <summary>
            Gets and returns a list of the Halo 2 map's tag hierarchies.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.MapFile.Scenario">
            <summary>
            Gets or sets the Halo 2 map's scenario.
            </summary>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.MapFile.#ctor">
            <summary>
            Initializes a new Halo 2 map file instance.
            </summary>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.MapFile.Load(System.String)">
            <summary>
            Loads a Halo 2 map file from a specified file path.
            </summary>
            <param name="filename">A relative or absolute path for the map file.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="filename"/> is null.</exception>
            <exception cref="T:System.IO.FileNotFoundException"><paramref name="filename"/> does not exist.</exception>
            <exception cref="T:Abide.HaloLibrary.Halo2Map.MapFileExcption">Exception occured while loading the map.</exception>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.MapFile.Load(System.IO.Stream)">
            <summary>
            Loads a Halo 2 map file from the specified stream.
            </summary>
            <param name="inStream">The stream containing the Halo 2 map.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="inStream"/> is null.</exception>
            <exception cref="T:System.ArgumentException">Exception occured while handling <paramref name="inStream"/>.</exception>
            <exception cref="T:Abide.HaloLibrary.Halo2Map.MapFileExcption">Exception occured while loading map.</exception>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.MapFile.ReadRaws(System.IO.Stream,System.IO.BinaryReader)">
            <summary>
            Attempts to read any internal raw data reference by the supplied tag group.
            </summary>
            <param name="inStream">The Halo 2 cached map file stream.</param>
            <param name="reader">The reader for the map stream.</param>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.MapFile.ReadStringTable(System.IO.Stream,System.IO.BinaryReader,Abide.HaloLibrary.Halo2Map.IndexEntry,System.UInt32,System.UInt32,Abide.HaloLibrary.Halo2Map.StringEntry[]@)">
            <summary>
            Reads a string table from the file into the string list using the string data at an offset provided.
            </summary>
            <param name="inStream">The Halo 2 cached map file stream.</param>
            <param name="reader">The reader for the map stream.</param>
            <param name="globals">The globals object index entry.</param>
            <param name="memoryFileAddress">The memory address of the tag data.</param>
            <param name="offset">The globals-based offset to a strings info data section.</param>
            <param name="table">The string entry list to read the strings into.</param>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.MapFile.Save(System.String)">
            <summary>
            Saves this Halo 2 map file to the specfied file or stream.
            </summary>
            <param name="filename">A string that contains the name of the file to which to save this Halo 2 map.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="filename"/> is null.</exception>
            <exception cref="T:System.IO.DirectoryNotFoundException">Directory containing <paramref name="filename"/> is not found.</exception>
            <exception cref="T:System.IO.IOException">A generic I/O exception occured.</exception>
            <exception cref="T:Abide.HaloLibrary.Halo2Map.MapFileExcption">Exception occured while saving the map file.</exception>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.MapFile.Save(System.IO.Stream)">
            <summary>
            Saves this Halo 2 map file to the specified stream.
            </summary>
            <param name="stream">The stream where the Halo 2 map will be saved.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="stream"/> is null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="stream"/> does not support seeking.</exception>
            <exception cref="T:Abide.HaloLibrary.Halo2Map.MapFileExcption">A write error occured.</exception>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.MapFile.SwapTagBuffer(System.Byte[])">
            <summary>
            Swaps the tag data stream buffer with the supplied buffer.
            </summary>
            <param name="dataBuffer">The data buffer to swap the tag data stream with.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="dataBuffer"/> is null.</exception>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.MapFile.ToString">
            <summary>
            Returns the map's name.
            </summary>
            <returns>The map's name.</returns>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.MapFile.Close">
            <summary>
            Closes the map file, clearing all used buffers.
            </summary>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.MapFile.Dispose">
            <summary>
            Clears all buffers and releases all resources used by this instance.
            </summary>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.MapFile.GetTagBlockInfo(Abide.HaloLibrary.TagBlock,System.Boolean@)">
            <summary>
            Retrieves information about a supplied tag block.
            </summary>
            <param name="tagBlock">The tag block to retrieve information about.</param>
            <param name="isValid">True if the supplied tag block is valid, false if it is not.</param>
            <returns>An instance of <see cref="T:Abide.HaloLibrary.Halo2Map.MapFile.TagBlockInformation"/> that, if valid, contains information about <paramref name="tagBlock"/>.</returns>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.MapFile.AddStringId(System.String)">
            <summary>
            Adds a new string identifier to the map.
            </summary>
            <param name="stringId">The string identifier.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="stringId"/> is null.</exception>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.MapFile.CreateIndex">
            <summary>
            Creates a padded index table for the current Halo 2 map.
            </summary>
            <returns>A Halo 2 index table containing the index, tags, and object entries present in this instance.</returns>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.MapFile.CreateStringTable(System.Collections.Generic.IList{Abide.HaloLibrary.Halo2Map.StringEntry})">
            <summary>
            Creates a strings table.
            </summary>
            <param name="stringList">The strings in the table.</param>
            <returns>A byte array containing a 512-byte padded string table.</returns>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.MapFile.CreateStringIndex(System.Collections.Generic.IList{Abide.HaloLibrary.Halo2Map.StringEntry})">
            <summary>
            Creates a string table index.
            </summary>
            <param name="stringTable">The strings in the table.</param>
            <returns>A byte array containing a 512-byte padded string index.</returns>
        </member>
        <member name="T:Abide.HaloLibrary.Halo2Map.MapFile.TagBlockInformation">
            <summary>
            Represents a Halo 2 Tag Block information container.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.MapFile.TagBlockInformation.Owner">
            <summary>
            Gets and returns the index entry that owns this tag block.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.MapFile.TagBlockInformation.TagBlock">
            <summary>
            Gets and returns the tag block.
            </summary>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.MapFile.TagBlockInformation.#ctor(Abide.HaloLibrary.Halo2Map.IndexEntry,Abide.HaloLibrary.TagBlock)">
            <summary>
            Initializes a new <see cref="T:Abide.HaloLibrary.Halo2Map.MapFile.TagBlockInformation"/> instance using the supplied index entry and tag block.
            </summary>
            <param name="owner">The <see cref="T:Abide.HaloLibrary.Halo2Map.IndexEntry"/> that owns <paramref name="tagBlock"/>.</param>
            <param name="tagBlock">The <see cref="T:Abide.HaloLibrary.TagBlock"/>.</param>
        </member>
        <member name="T:Abide.HaloLibrary.Halo2Map.MapFile.TagHierarchyList">
            <summary>
            Represents a Halo 2 tag heirarchy list.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.MapFile.TagHierarchyList.Count">
            <summary>
            Gets the number of tag hierarchy structures this list contains.
            </summary>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.MapFile.TagHierarchyList.#ctor(Abide.HaloLibrary.Halo2Map.TagHierarchy[])">
            <summary>
            Initializes the <see cref="T:Abide.HaloLibrary.Halo2Map.MapFile.TagHierarchyList"/> using the supplied <see cref="T:Abide.HaloLibrary.Halo2Map.TagHierarchy"/> array.
            </summary>
            <param name="tagHierarchies">The <see cref="T:Abide.HaloLibrary.Halo2Map.TagHierarchy"/> array to copy into the new list.</param>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.MapFile.TagHierarchyList.#ctor">
            <summary>
            Initializes a new <see cref="T:Abide.HaloLibrary.Halo2Map.MapFile.TagHierarchyList"/>.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.MapFile.TagHierarchyList.Item(Abide.HaloLibrary.Tag)">
            <summary>
            Gets and returns the <see cref="T:Abide.HaloLibrary.Halo2Map.TagHierarchy"/> whose root is the specified <see cref="T:Abide.HaloLibrary.Tag"/>.
            </summary>
            <param name="tag">The root of the <see cref="T:Abide.HaloLibrary.Halo2Map.TagHierarchy"/> to get.</param>
            <returns>A <see cref="T:Abide.HaloLibrary.Halo2Map.TagHierarchy"/> structure whose <see cref="P:Abide.HaloLibrary.Halo2Map.TagHierarchy.Root"/> value is the specified <see cref="T:Abide.HaloLibrary.Tag"/> value.</returns>
            <exception cref="T:System.ArgumentException">Occurs when the specified tag root is not found.</exception>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.MapFile.TagHierarchyList.ContainsTag(Abide.HaloLibrary.Tag)">
            <summary>
            Checks if the list contains an tag hierarchy whose root matches the supplied tag.
            </summary>
            <param name="tag">The ID to check.</param>
            <returns>True if the list contains an tag hierarchy whose root matches the supplied tag, false if not.</returns>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.MapFile.TagHierarchyList.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the <see cref="T:Abide.HaloLibrary.Halo2Map.MapFile.TagHierarchyList"/>.
            </summary>
            <returns>An enumerator.</returns>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.MapFile.TagHierarchyList.ToString">
            <summary>
            Gets a string representation of this list.
            </summary>
            <returns>A string representation of this list.</returns>
        </member>
        <member name="T:Abide.HaloLibrary.Halo2Map.MapFile.IndexEntryList">
            <summary>
            Represents a Halo 2 index entry list.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.MapFile.IndexEntryList.Count">
            <summary>
            Gets the number of index entries this list contains.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.MapFile.IndexEntryList.First">
            <summary>
            Gets and returns the first object entry in the list.
            </summary>
            <exception cref="T:System.IndexOutOfRangeException"></exception>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.MapFile.IndexEntryList.Last">
            <summary>
            Gets and returns the last object entry in the list.
            </summary>
            <exception cref="T:System.IndexOutOfRangeException"></exception>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.MapFile.IndexEntryList.Item(Abide.HaloLibrary.TagId)">
            <summary>
            Gets and returns the index entry object by its <see cref="T:Abide.HaloLibrary.TagId"/>.
            </summary>
            <param name="id">The <see cref="T:Abide.HaloLibrary.TagId"/> of the index entry object.</param>
            <returns>An <see cref="T:Abide.HaloLibrary.Halo2Map.IndexEntry"/> whose ID matches the supplied <see cref="T:Abide.HaloLibrary.TagId"/>.</returns>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.MapFile.IndexEntryList.Item(System.Int32)">
            <summary>
            Gets and returns the index entry object at a given index.
            </summary>
            <param name="index">The index of the index entry object.</param>
            <returns>An <see cref="T:Abide.HaloLibrary.Halo2Map.IndexEntry"/> at the given index.</returns>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.MapFile.IndexEntryList.#ctor(Abide.HaloLibrary.Halo2Map.IndexEntry[])">
            <summary>
            Intializes a new <see cref="T:Abide.HaloLibrary.Halo2Map.MapFile.IndexEntryList"/> copying the supplied <see cref="T:Abide.HaloLibrary.Halo2Map.IndexEntry"/> array into the list.
            </summary>
            <param name="indexEntries">The array to copy into the new list.</param>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.MapFile.IndexEntryList.#ctor">
            <summary>
            Initializes a new <see cref="T:Abide.HaloLibrary.Halo2Map.MapFile.IndexEntryList"/>.
            </summary>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.MapFile.IndexEntryList.ContainsID(Abide.HaloLibrary.TagId)">
            <summary>
            Checks if the list contains an index entry whose ID matches the supplied ID.
            </summary>
            <param name="id">The ID to check.</param>
            <returns>True if the list contains an index entry whose ID is the supplied ID, false if not.</returns>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.MapFile.IndexEntryList.ToString">
            <summary>
            Gets a string representation of this list.
            </summary>
            <returns>A string representation of this list.</returns>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.MapFile.IndexEntryList.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the <see cref="T:Abide.HaloLibrary.Halo2Map.MapFile.TagHierarchyList"/>.
            </summary>
            <returns>An enumerator.</returns>
        </member>
        <member name="T:Abide.HaloLibrary.Halo2Map.MapFile.StringList">
            <summary>
            Represents a Halo 2 string list.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.MapFile.StringList.Count">
            <summary>
            Gets and returns the number of strings in the list.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.MapFile.StringList.Item(System.String)">
            <summary>
            Gets and returns a a string's ID from the given string within the list.
            </summary>
            <param name="sid">The string whose ID is to be retrieved.</param>
            <returns><see cref="F:Abide.HaloLibrary.StringId.Zero"/> if the string does not exist, otherwise returns a valid <see cref="T:Abide.HaloLibrary.StringId"/> value.</returns>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.MapFile.StringList.Item(System.Int32)">
            <summary>
            Gets or sets a string's value at a given index within the list.
            </summary>
            <param name="index">The index of the string.</param>
            <returns>A string value.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is outside of the valid range.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="value"/> is null.</exception>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.MapFile.StringList.#ctor">
            <summary>
            Initializes a new <see cref="T:Abide.HaloLibrary.Halo2Map.MapFile.StringList"/> instance.
            </summary>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.MapFile.StringList.#ctor(System.String[])">
            <summary>
            Initializes a new <see cref="T:Abide.HaloLibrary.Halo2Map.MapFile.StringList"/> instance using the supplied string array.
            </summary>
            <param name="strings">The string array to populate the list with.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="strings"/> is null.</exception>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.MapFile.StringList.Add(System.String)">
            <summary>
            Attempts to add a string value to the list.
            </summary>
            <param name="value">The string to add.</param>
            <returns>true if the string does not exist, and the string is added successfully; othewise false and the string was not added.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="value"/> is null.</exception>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.MapFile.StringList.Add(System.String,Abide.HaloLibrary.StringId@)">
            <summary>
            Attempts to add a string value to the list, and retrieve its identifier.
            </summary>
            <param name="value">The string value.</param>
            <param name="id">The target string id.</param>
            <returns>true if the string does not exist, and the string is added successfully; othewise false and the string was not added.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="value"/> is null.</exception>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.MapFile.StringList.Contains(System.String)">
            <summary>
            Determines if a string value exists within the list.
            </summary>
            <param name="value">The string to check for.</param>
            <returns>true if the string exists in the list; otherwise false.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="value"/> is null.</exception>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.MapFile.StringList.Remove(System.String)">
            <summary>
            Attempts to remove a string value from the list.
            </summary>
            <param name="value">The string to remove.</param>
            <returns>true if the string is found and removed; otherwise false.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="value"/> is null.</exception>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.MapFile.StringList.Reset">
            <summary>
            Reset's the map's strings table, leaving the zero-string.
            </summary>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.MapFile.StringList.IndexOf(System.String)">
            <summary>
            Gets the zero-based index of the string within the list.
            </summary>
            <param name="value">The string to retrieve the index of.</param>
            <returns>-1 if the specified string was not found, otherwise returns a valid index.</returns>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.MapFile.StringList.GetEnumerator">
            <summary>
            Gets and returns an enumerator that iterates the instance.
            </summary>
            <returns>An enumerator.</returns>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.MapFile.StringList.ToString">
            <summary>
            Returns a string representation of this list.
            </summary>
            <returns>A string.</returns>
        </member>
        <member name="T:Abide.HaloLibrary.Halo2Map.MapFileExcption">
            <summary>
            Represents an error that occurs while handling a map file.
            </summary>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.MapFileExcption.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Abide.HaloLibrary.Halo2Map.MapFileExcption"/>.
            </summary>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.MapFileExcption.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Abide.HaloLibrary.Halo2Map.MapFileExcption"/> using the provided exception message.
            </summary>
            <param name="message">The exception's message.</param>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.MapFileExcption.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of <see cref="T:Abide.HaloLibrary.Halo2Map.MapFileExcption"/> using the provided inner exception.
            </summary>
            <param name="innerException">The inner exception that triggered the <see cref="T:Abide.HaloLibrary.Halo2Map.MapFileExcption"/>.</param>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.MapFileExcption.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of <see cref="T:Abide.HaloLibrary.Halo2Map.MapFileExcption"/> using the provided exception message and inner exception.
            </summary>
            <param name="message">The exception's message.</param>
            <param name="innerException">The inner exception that triggered the <see cref="T:Abide.HaloLibrary.Halo2Map.MapFileExcption"/>.</param>
        </member>
        <member name="T:Abide.HaloLibrary.Halo2Map.RawSection">
            <summary>
            Contains an enumeration of the Halo 2 raw data types.
            </summary>
        </member>
        <member name="F:Abide.HaloLibrary.Halo2Map.RawSection.Sound">
            <summary>
            Represents Halo 2 sound raw data.
            </summary>
        </member>
        <member name="F:Abide.HaloLibrary.Halo2Map.RawSection.Model">
            <summary>
            Represents Halo 2 geometry raw data.
            </summary>
        </member>
        <member name="F:Abide.HaloLibrary.Halo2Map.RawSection.BSP">
            <summary>
            Represents Halo 2 BSP raw data.
            </summary>
        </member>
        <member name="F:Abide.HaloLibrary.Halo2Map.RawSection.Weather">
            <summary>
            Represents Halo 2 weather raw data.
            </summary>
        </member>
        <member name="F:Abide.HaloLibrary.Halo2Map.RawSection.Decorator">
            <summary>
            Represents Halo 2 decorator raw data.
            </summary>
        </member>
        <member name="F:Abide.HaloLibrary.Halo2Map.RawSection.ParticleModel">
            <summary>
            Represents Halo 2 particle model raw data.
            </summary>
        </member>
        <member name="F:Abide.HaloLibrary.Halo2Map.RawSection.LipSync">
            <summary>
            Represents Halo 2 lip sync raw data.
            </summary>
        </member>
        <member name="F:Abide.HaloLibrary.Halo2Map.RawSection.Animation">
            <summary>
            Represents Halo 2 animation raw data.
            </summary>
        </member>
        <member name="F:Abide.HaloLibrary.Halo2Map.RawSection.Bitmap">
            <summary>
            Represents Halo 2 bitmap raw data.
            </summary>
        </member>
        <member name="T:Abide.HaloLibrary.Halo2Map.RawContainer">
            <summary>
            Represents a Halo 2 raw data container.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.RawContainer.Item(Abide.HaloLibrary.Halo2Map.RawSection)">
            <summary>
            Gets and returns the raw list for a supplied <see cref="T:Abide.HaloLibrary.Halo2Map.RawSection"/>.
            </summary>
            <param name="section">The <see cref="T:Abide.HaloLibrary.Halo2Map.RawSection"/> to get a list of raws for.</param>
            <returns>A <see cref="T:Abide.HaloLibrary.Halo2Map.RawList"/> containing raws of the given <see cref="T:Abide.HaloLibrary.Halo2Map.RawSection"/>.</returns>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.RawContainer.#ctor">
            <summary>
            Initializes a new <see cref="T:Abide.HaloLibrary.Halo2Map.RawContainer"/>.
            </summary>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.RawContainer.Clear">
            <summary>
            Clears all raws from the container.
            </summary>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.RawContainer.Clone">
            <summary>
            Creates a shallow copy of the container.
            </summary>
            <returns>A copy of this container.</returns>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.RawContainer.Dispose">
            <summary>
            Releases all resources used by this container.
            </summary>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.RawContainer.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the <see cref="T:Abide.HaloLibrary.Halo2Map.RawContainer"/>. 
            </summary>
            <returns>An enumerator.</returns>
        </member>
        <member name="T:Abide.HaloLibrary.Halo2Map.RawList">
            <summary>
            Represents a Halo 2 raw data list.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.RawList.Item(System.Int32)">
            <summary>
            Gets and returns the raw stream at the given offset.
            </summary>
            <param name="offset">The raw at a given offset to retrieve.</param>
            <returns>A <see cref="T:Abide.HaloLibrary.Halo2Map.RawStream"/> instance whose <see cref="P:Abide.HaloLibrary.Halo2Map.RawStream.RawOffset"/> value is the supplied <paramref name="offset"/>, or null if a raw could not be found.</returns>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.RawList.#ctor(Abide.HaloLibrary.Halo2Map.RawStream[])">
            <summary>
            Initializes a new <see cref="T:Abide.HaloLibrary.Halo2Map.RawList"/> instance copying the supplied <see cref="T:Abide.HaloLibrary.Halo2Map.RawStream"/> array into the list.
            </summary>
            <param name="raws">The raw streams to copy into the list.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="raws"/> is null.</exception>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.RawList.#ctor">
            <summary>
            Initializes a new <see cref="T:Abide.HaloLibrary.Halo2Map.RawList"/> instance.
            </summary>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.RawList.ContainsRawOffset(System.Int32)">
            <summary>
            Checks if a raw at a given offset exists within this container.
            </summary>
            <param name="offset">The offset of the raw data.</param>
            <returns>True if a raw at the given offset is found, otherwise false.</returns>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.RawList.Add(Abide.HaloLibrary.Halo2Map.RawStream)">
            <summary>
            Attempts to add a new raw stream to the raw container.
            </summary>
            <param name="raw">The raw to add.</param>
            <returns>True if the raw to add is not already within the container. Otherwise false.</returns>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.RawList.Delete(System.Int32)">
            <summary>
            Removes and disposes a raw data stream whose offset matches the supplied offset.
            </summary>
            <param name="offset">The offset of the raw data.</param>
            <returns>True if a raw data was found and removed, otherwise returns false.</returns>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.RawList.SwapBuffer(System.Int32,System.Byte[])">
            <summary>
            Swaps the raw data buffer of a raw data stream with the supplied buffer.
            </summary>
            <param name="offset">The offset of the raw data.</param>
            <param name="buffer">The raw data buffer.</param>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.RawList.Dispose">
            <summary>
            Releases all resources used by this list.
            </summary>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.RawList.ToString">
            <summary>
            Gets a string representation of this list.
            </summary>
            <returns>A string representation of this list.</returns>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.RawList.Clone">
            <summary>
            Creates a shallow copy of the list.
            </summary>
            <returns>A copy of this list.</returns>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.RawList.CopyFrom(Abide.HaloLibrary.Halo2Map.RawList)">
            <summary>
            Copies the contents of another raw list into this raw list.
            </summary>
            <param name="other">The other raw list to copy the elements from.</param>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.RawList.Clear">
            <summary>
            Clears all raw buffers and empties the raw container.
            </summary>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.RawList.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the <see cref="T:Abide.HaloLibrary.Halo2Map.RawList"/>. 
            </summary>
            <returns>An enumerator.</returns>
        </member>
        <member name="T:Abide.HaloLibrary.Halo2Map.RawStream">
            <summary>
            Represents a Halo 2 raw data stream.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.RawStream.RawOffset">
            <summary>
            Gets and returns the offset of the raw data.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.RawStream.OffsetAddresses">
            <summary>
            Gets and returns a list of addresses where this raw data's offset is referenced.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.RawStream.LengthAddresses">
            <summary>
            Gets and returns a list of addresses where this raw data's length is referenced.
            </summary>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.RawStream.#ctor(System.Byte[],System.Int32)">
            <summary>
            Initializes a new <see cref="T:Abide.HaloLibrary.Halo2Map.RawStream"/> using the supplied raw data buffer and raw data offset.
            </summary>
            <param name="rawBuffer">The byte array that contains the raw data.</param>
            <param name="rawOffset">The zero-based raw data offst.</param>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.RawStream.Clone">
            <summary>
            Creates a copy of this stream.
            </summary>
            <returns>A copy of this stream.</returns>
        </member>
        <member name="T:Abide.HaloLibrary.Halo2Map.StringLocale">
            <summary>
            Contains an enumeration of the Halo 2 string localizations.
            </summary>
        </member>
        <member name="F:Abide.HaloLibrary.Halo2Map.StringLocale.English">
            <summary>
            English Localization. 
            </summary>
        </member>
        <member name="F:Abide.HaloLibrary.Halo2Map.StringLocale.Japanese">
            <summary>
            Japanese Localization.
            </summary>
        </member>
        <member name="F:Abide.HaloLibrary.Halo2Map.StringLocale.German">
            <summary>
            German Localization.
            </summary>
        </member>
        <member name="F:Abide.HaloLibrary.Halo2Map.StringLocale.French">
            <summary>
            French Localization.
            </summary>
        </member>
        <member name="F:Abide.HaloLibrary.Halo2Map.StringLocale.Spanish">
            <summary>
            Spanish Localization.
            </summary>
        </member>
        <member name="F:Abide.HaloLibrary.Halo2Map.StringLocale.Italian">
            <summary>
            Italian Localization.
            </summary>
        </member>
        <member name="F:Abide.HaloLibrary.Halo2Map.StringLocale.Korean">
            <summary>
            Korean Localization.
            </summary>
        </member>
        <member name="F:Abide.HaloLibrary.Halo2Map.StringLocale.Chinese">
            <summary>
            Chinese Localization.
            </summary>
        </member>
        <member name="F:Abide.HaloLibrary.Halo2Map.StringLocale.Portuguese">
            <summary>
            Portuguese Localiaztion.
            </summary>
        </member>
        <member name="T:Abide.HaloLibrary.Halo2Map.StringEntry">
            <summary>
            Represents a Halo 2 unicode string entry.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.StringEntry.Value">
            <summary>
            The string entry's text.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.StringEntry.ID">
            <summary>
            The identifier of this string entry.
            </summary>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.StringEntry.#ctor(System.String,System.String)">
            <summary>
            Creates a new <see cref="T:Abide.HaloLibrary.Halo2Map.StringEntry"/> instance using the supplied text string, and string identifier.
            </summary>
            <param name="value">The text of the string entry</param>
            <param name="id">The string identifier of this string entry.</param>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.StringEntry.#ctor">
            <summary>
            Creates a blank <see cref="T:Abide.HaloLibrary.Halo2Map.StringEntry"/> instance.
            </summary>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.StringEntry.ToString">
            <summary>
            Gets a string representation of this <see cref="T:Abide.HaloLibrary.Halo2Map.StringEntry"/> instance.
            </summary>
            <returns>A string containing the string identifier and text.</returns>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.StringEntry.Equals(Abide.HaloLibrary.Halo2Map.StringEntry)">
            <summary>
            Compares this instance and another <see cref="T:Abide.HaloLibrary.Halo2Map.StringEntry"/> are equal. 
            </summary>
            <param name="other">The <see cref="T:Abide.HaloLibrary.Halo2Map.StringEntry"/> to compare this to.</param>
            <returns>True if they are equal, false if not.</returns>
        </member>
        <member name="T:Abide.HaloLibrary.Halo2Map.StringContainer">
            <summary>
            Represents a Halo 2 unicode string container.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.StringContainer.Item(Abide.HaloLibrary.Halo2Map.StringLocale)">
            <summary>
            Gets and returns the string entry list for a given localiztion.
            </summary>
            <param name="locale">The string localization.</param>
            <returns>A list of <see cref="T:Abide.HaloLibrary.Halo2Map.StringEntry"/> elements containing the strings of the given locale.</returns>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.StringContainer.English">
            <summary>
            Gets and returns the English localized string entry list.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.StringContainer.Japanese">
            <summary>
            Gets and returns the Japanese localized string entry list.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.StringContainer.German">
            <summary>
            Gets and returns the German localized string entry list.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.StringContainer.French">
            <summary>
            Gets and returns the French localized string entry list.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.StringContainer.Spanish">
            <summary>
            Gets and returns the Spanish localized string entry list.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.StringContainer.Italian">
            <summary>
            Gets and returns the Italian localized string entry list.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.StringContainer.Korean">
            <summary>
            Gets and returns the Korean localized string entry list.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.StringContainer.Chinese">
            <summary>
            Gets and returns the Chinese localized string entry list.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.StringContainer.Portuguese">
            <summary>
            Gets and returns the Portuguese localized string entry list.
            </summary>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.StringContainer.#ctor">
            <summary>
            Initializes a new <see cref="T:Abide.HaloLibrary.Halo2Map.StringContainer"/>.
            </summary>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.StringContainer.Dispose">
            <summary>
            Releases any resources used by this instance.
            </summary>
        </member>
        <member name="T:Abide.HaloLibrary.Halo2Map.Header">
            <summary>
            Represents a Halo 2 map file header.
            </summary>
        </member>
        <member name="F:Abide.HaloLibrary.Halo2Map.Header.Length">
            <summary>
            Gets and returns the length of a <see cref="T:Abide.HaloLibrary.Halo2Map.Header"/> structure in bytes.
            This value is constant.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.Header.Head">
            <summary>
            Gets or sets the head four-character code.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.Header.Version">
            <summary>
            Gets or sets the map's version number.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.Header.FileLength">
            <summary>
            Gets or sets the length of the map file.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.Header.IndexOffset">
            <summary>
            Gets or sets the offset of the map's index table.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.Header.IndexLength">
            <summary>
            Gets or sets the length map's index table.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.Header.TagDataLength">
            <summary>
            Gets or sets the length of the map's tag data.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.Header.MapDataLength">
            <summary>
            Gets or sets the length of the map's data.
            This value is the sum of map's index length, the map's bsp allocation length, and the map's tag data length. 
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.Header.Origin">
            <summary>
            Gets or sets the origin of the map file.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.Header.Build">
            <summary>
            Gets or sets the map's build.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.Header.CrazyOffset">
            <summary>
            Gets or sets the offset of the map's crazy data.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.Header.CrazyLength">
            <summary>
            Gets or sets the length of the map's crazy data.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.Header.Strings128Offset">
            <summary>
            Gets or sets the offset of the map's 128-byte length strings.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.Header.StringCount">
            <summary>
            Gets or sets the number of strings in the map.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.Header.StringsLength">
            <summary>
            Gets or sets the length of the map's strings table.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.Header.StringsIndexOffset">
            <summary>
            Gets or sets the offset of the map's strings index table.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.Header.StringsOffset">
            <summary>
            Gets or sets the offset of the map's strings table.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.Header.Name">
            <summary>
            Gets or sets the map's name.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.Header.ScenarioPath">
            <summary>
            Gets or sets the map's scenario path.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.Header.FileNameCount">
            <summary>
            Gets or sets the number of files in the map.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.Header.FileNamesOffset">
            <summary>
            Gets or sets the offset of the map's file names table.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.Header.FileNamesLength">
            <summary>
            Gets or sets the length of the map's file names table.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.Header.FileNamesIndexOffset">
            <summary>
            Gets or sets the offset of the map's file names index table.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.Header.Checksum">
            <summary>
            Gets or sets the map's checksum.
            This value is calculating by XORing every byte past offset 2048.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.Header.Foot">
            <summary>
            Gets or sets the foot four-character code.
            </summary>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.Header.CreateDefault">
            <summary>
            Creates a <see cref="T:Abide.HaloLibrary.Halo2Map.Header"/> structure instance with pre-defined values.
            </summary>
            <returns>A <see cref="T:Abide.HaloLibrary.Halo2Map.Header"/> instance.</returns>
        </member>
        <member name="T:Abide.HaloLibrary.Halo2Map.Index">
            <summary>
            Represents a Halo 2 index table header.
            </summary>
        </member>
        <member name="F:Abide.HaloLibrary.Halo2Map.Index.IndexMemoryAddress">
            <summary>
            Represents the address of the index table in Xbox memory.
            This value is constant.
            </summary>
        </member>
        <member name="F:Abide.HaloLibrary.Halo2Map.Index.Length">
            <summary>
            Represents the length of an <see cref="T:Abide.HaloLibrary.Halo2Map.Index"/> structure in bytes.
            This value is constant.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.Index.IndexAddress">
            <summary>
            Gets or sets the memory address of the index.
            This value should remain consistant across all maps.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.Index.TagCount">
            <summary>
            Gets or sets the number of tag hierarchy structures in the map's index table.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.Index.ObjectsOffset">
            <summary>
            Gets or sets the offset to the map's object entries.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.Index.ScenarioId">
            <summary>
            Gets or sets the map's scenario ID.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.Index.GlobalsId">
            <summary>
            Gets or sets the map's globals ID.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.Index.ObjectCount">
            <summary>
            Gets or sets the number of object entries in the map's index table.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.Index.Tags">
            <summary>
            Gets or sets the index table's tags four character-code.
            </summary>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.Index.CreateDefault">
            <summary>
            Creates an <see cref="T:Abide.HaloLibrary.Halo2Map.Index"/> structure instance with pre-defined values.
            </summary>
            <returns>An <see cref="T:Abide.HaloLibrary.Halo2Map.Index"/> instance.</returns>
        </member>
        <member name="T:Abide.HaloLibrary.Halo2Map.StringObject">
            <summary>
            Represents a 64-bit Halo Map string object.
            </summary>
        </member>
        <member name="F:Abide.HaloLibrary.Halo2Map.StringObject.Length">
            <summary>
            Represents the length of a <see cref="T:Abide.HaloLibrary.Halo2Map.StringObject"/> structure in bytes.
            This value is constant and readonly.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.StringObject.StringID">
            <summary>
            Gets or sets the string ID of this string object.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.StringObject.Offset">
            <summary>
            Gets or sets the length of this string object.
            </summary>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.StringObject.#ctor(Abide.HaloLibrary.StringId,System.Int32)">
            <summary>
            Initializes a new <see cref="T:Abide.HaloLibrary.Halo2Map.StringObject"/> structure using the supplied string ID and length values.
            </summary>
            <param name="sid">The string ID of the string object.</param>
            <param name="offset">The offset of the string.</param>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.StringObject.ToString">
            <summary>
            Returns a string representation of the structure.
            </summary>
            <returns>A string representation of this structure containing the string ID and offset.</returns>
        </member>
        <member name="T:Abide.HaloLibrary.Halo2Map.ObjectEntry">
            <summary>
            Represents an object entry.
            </summary>
        </member>
        <member name="F:Abide.HaloLibrary.Halo2Map.ObjectEntry.Length">
            <summary>
            Represents the length of an <see cref="T:Abide.HaloLibrary.Halo2Map.ObjectEntry"/> structure in bytes.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.ObjectEntry.Tag">
            <summary>
            The object entry's tag.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.ObjectEntry.Id">
            <summary>
            The object entry's tag identifier.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.ObjectEntry.Offset">
            <summary>
            The object entry's offset.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.ObjectEntry.Size">
            <summary>
            The object entry's size.
            </summary>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.ObjectEntry.ToString">
            <summary>
            Returns a string representation of this instance.
            </summary>
            <returns>A string.</returns>
        </member>
        <member name="T:Abide.HaloLibrary.Halo2Map.TagHierarchy">
            <summary>
            Represents a tag hierarchy structure.
            </summary>
        </member>
        <member name="F:Abide.HaloLibrary.Halo2Map.TagHierarchy.Length">
            <summary>
            Represents the length of a <see cref="T:Abide.HaloLibrary.Halo2Map.TagHierarchy"/> structure in bytes.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.TagHierarchy.Root">
            <summary>
            The root of the tag hierarchy.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.TagHierarchy.Parent">
            <summary>
            The parent of the tag hierarchy.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.TagHierarchy.Class">
            <summary>
            The class of the tag hierarchy.
            </summary>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.TagHierarchy.#ctor(Abide.HaloLibrary.Tag,Abide.HaloLibrary.Tag,Abide.HaloLibrary.Tag)">
            <summary>
            Initializes a new <see cref="T:Abide.HaloLibrary.Halo2Map.TagHierarchy"/> instance using the supplied root, parent, and class tags.
            </summary>
            <param name="root">The root tag.</param>
            <param name="parent">The parent tag.</param>
            <param name="class">The tag's class.</param>
        </member>
        <member name="M:Abide.HaloLibrary.Halo2Map.TagHierarchy.ToString">
            <summary>
            Gets a string representation of this <see cref="T:Abide.HaloLibrary.Halo2Map.TagHierarchy"/> instance.
            </summary>
            <returns>A string representation of this instance.</returns>
        </member>
        <member name="T:Abide.HaloLibrary.Halo2Map.SbspHeader">
            <summary>
            Represents a Halo 2 structure bsp tag data header.
            </summary>
        </member>
        <member name="F:Abide.HaloLibrary.Halo2Map.SbspHeader.Length">
            <summary>
            Represents the length of a <see cref="T:Abide.HaloLibrary.Halo2Map.SbspHeader"/> structure in bytes.
            This value is constant.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.SbspHeader.Tag">
            <summary>
            Gets or sets the header's tag.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.SbspHeader.DataLength">
            <summary>
            Gets or sets the header's data length.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Halo2Map.SbspHeader.LightmapOffset">
            <summary>
            Gets or sets the header's lightmap offset.
            </summary>
        </member>
        <member name="T:Abide.HaloLibrary.Halo2Map.HaloTags">
            <summary>
            Contains all Halo 2 tags.
            </summary>
        </member>
        <member name="T:Abide.HaloLibrary.IO.FixedMemoryMappedStream">
            <summary>
            Represents a fixed-length memory-mapped stream.
            This type of stream is used to translate memory-mapped data blocks into file-addressed blocks, or when a fixed length buffer is required.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.IO.FixedMemoryMappedStream.Empty">
            <summary>
            Represents an empty <see cref="T:Abide.HaloLibrary.IO.FixedMemoryMappedStream"/>.
            </summary>
        </member>
        <member name="M:Abide.HaloLibrary.IO.FixedMemoryMappedStream.#ctor(System.Byte[],System.Int64)">
            <summary>
            Initializes a new <see cref="T:Abide.HaloLibrary.IO.FixedMemoryMappedStream"/> with the supplied buffer and memory address.
            </summary>
            <param name="buffer">The buffer to use.</param>
            <param name="memoryAddress">The address at which this data begins.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="buffer"/> is null.</exception>
        </member>
        <member name="M:Abide.HaloLibrary.IO.FixedMemoryMappedStream.#ctor(System.Byte[])">
            <summary>
            Initializes a new <see cref="T:Abide.HaloLibrary.IO.FixedMemoryMappedStream"/> with the supplied buffer.
            </summary>
            <param name="buffer">The buffer to use.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="buffer"/> is null.</exception>
        </member>
        <member name="P:Abide.HaloLibrary.IO.FixedMemoryMappedStream.MemoryAddress">
            <summary>
            Gets the memory-address of the stream.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.IO.FixedMemoryMappedStream.CanRead">
            <summary>
            Determines if this stream supports reading.
            <see cref="P:Abide.HaloLibrary.IO.FixedMemoryMappedStream.CanRead"/> will always return true.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.IO.FixedMemoryMappedStream.CanSeek">
            <summary>
            Determines if this stream supports seeking.
            <see cref="P:Abide.HaloLibrary.IO.FixedMemoryMappedStream.CanSeek"/> will always return true.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.IO.FixedMemoryMappedStream.CanWrite">
            <summary>
            Determines if this stream supports writing.
            <see cref="P:Abide.HaloLibrary.IO.FixedMemoryMappedStream.CanWrite"/> will always return true.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.IO.FixedMemoryMappedStream.Length">
            <summary>
            Gets and returns the length of the buffer.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.IO.FixedMemoryMappedStream.IntLength">
            <summary>
            Gets and returns the length of the buffer as a 32-bit signed integer.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.IO.FixedMemoryMappedStream.Position">
            <summary>
            Gets or sets the position within the buffer.
            </summary>
        </member>
        <member name="M:Abide.HaloLibrary.IO.FixedMemoryMappedStream.Flush">
            <summary>
            Flushes any data to the underlying buffer.
            This method does nothing.
            </summary>
        </member>
        <member name="M:Abide.HaloLibrary.IO.FixedMemoryMappedStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a block of bytes from the stream and writes the data in a given buffer.
            </summary>
            <param name="array">When this method returns, contains the specified byte array with the values between <paramref name="offset"/> and (<paramref name="offset"/> + <paramref name="count"/> - 1) replaced by the bytes read from the current source.</param>
            <param name="offset">The byte offset in <paramref name="array"/> at which the read bytes will be placed. </param>
            <param name="count">The maximum number of bytes to read. </param>
            <returns>The total number of bytes read into the buffer. This might be less than the number of bytes requested if that number of bytes are not currently available, or zero if the end of the stream is reached.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="array"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="offset"/> or <paramref name="count"/> is negative, or the count exceeds the length of <paramref name="array"/>.</exception>
            <exception cref="T:System.IO.IOException">An I/O eror occured.</exception>
        </member>
        <member name="M:Abide.HaloLibrary.IO.FixedMemoryMappedStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets the current position of this stream to the given value.
            If origin specifies <see cref="F:System.IO.SeekOrigin.Begin"/> or <see cref="F:System.IO.SeekOrigin.End"/> then offset is expected to be memory-addressed.
            </summary>
            <param name="offset">The point relative to origin from which to begin seeking.</param>
            <param name="origin">Specifies the beginning, the end, or the current position as a reference point for offset, using a value of type SeekOrigin. </param>
            <returns>The new position in the stream.</returns>
        </member>
        <member name="M:Abide.HaloLibrary.IO.FixedMemoryMappedStream.Seek(System.Int64)">
            <summary>
            Sets the current position of this stream to the given memory-addressed offset value.
            </summary>
            <param name="offset">The offset to seek to from the beginning.</param>
            <returns>The new position in the stream.</returns>
        </member>
        <member name="M:Abide.HaloLibrary.IO.FixedMemoryMappedStream.SetLength(System.Int64)">
            <summary>
            Sets the length of this stream to the given value.
            This method will always throw a <see cref="T:System.NotSupportedException"/> as this stream does not support changing lengths.
            </summary>
            <param name="value">The new length of the stream.</param>
            <exception cref="T:System.NotSupportedException">Stream does not support changing lengths.</exception>
        </member>
        <member name="M:Abide.HaloLibrary.IO.FixedMemoryMappedStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a block of bytes to the file stream.
            </summary>
            <param name="array">The buffer containing data to write to the stream.</param>
            <param name="offset">The zero-based byte offset in <paramref name="array"/> from which to begin copying bytes to the stream. </param>
            <param name="count">The maximum number of bytes to write.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="array"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="offset"/> or <paramref name="count"/> is negative, or the count exceeds the length of <paramref name="array"/>.</exception>
            <exception cref="T:System.IO.IOException">An I/O eror occured.</exception>
        </member>
        <member name="M:Abide.HaloLibrary.IO.FixedMemoryMappedStream.GetBuffer">
            <summary>
            Returns a byte array containing the stream's buffered data.
            </summary>
            <returns>A byte array containing the stream's buffered data.</returns>
        </member>
        <member name="M:Abide.HaloLibrary.IO.FixedMemoryMappedStream.ToString">
            <summary>
            Returns a string representation of the current stream.
            </summary>
            <returns>A string containing the length and the position of the stream.</returns>
        </member>
        <member name="T:Abide.HaloLibrary.IO.MemoryIO">
            <summary>
            Represents a Memory Input Output handler.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.IO.MemoryIO.BaseStream">
            <summary>
            The base stream of the IO instance.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.IO.MemoryIO.In">
            <summary>
            The readeor of this IO instance.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.IO.MemoryIO.Out">
            <summary>
            The writer of this IO instance.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.IO.MemoryIO.Position">
            <summary>
            The position of the underlying stream.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.IO.MemoryIO.Open">
            <summary>
            Gets if the current instance is open for writing and reading.
            </summary>
        </member>
        <member name="M:Abide.HaloLibrary.IO.MemoryIO.#ctor(System.Byte[])">
            <summary>
            Initializes the instance using the supplied buffer.
            </summary>
            <param name="buffer">The buffer to use for the IO instance.</param>
        </member>
        <member name="M:Abide.HaloLibrary.IO.MemoryIO.Close">
            <summary>
            Closes the IO instance, stopping the ability to write and read.
            </summary>
        </member>
        <member name="M:Abide.HaloLibrary.IO.MemoryIO.Dispose">
            <summary>
            Releases any resources used by this instance.
            </summary>
        </member>
        <member name="T:Abide.HaloLibrary.StringId">
            <summary>
            Represents a 32-bit Halo Map string identifier.
            </summary>
        </member>
        <member name="F:Abide.HaloLibrary.StringId.Zero">
            <summary>
            Represents an zero (or empty) string identifier.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.StringId.ID">
            <summary>
            Gets and returns this instance as a 32-bit unsigned integer value.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.StringId.Length">
            <summary>
            Gets or sets the length of the string that is represented by this instance.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.StringId.Index">
            <summary>
            Gets or sets the index of the string that is represented by this instance.
            </summary>
        </member>
        <member name="M:Abide.HaloLibrary.StringId.#ctor(System.UInt32)">
            <summary>
            Initializes a <see cref="T:Abide.HaloLibrary.StringId"/> structure using the supplied value.
            </summary>
            <param name="sid">The 32-bit unsigned string ID value.</param>
        </member>
        <member name="M:Abide.HaloLibrary.StringId.#ctor(System.UInt16,System.Byte)">
            <summary>
            Initializes a <see cref="T:Abide.HaloLibrary.StringId"/> structure using the supplied string index and string length values.
            </summary>
            <param name="index">The index of the string in the string table.</param>
            <param name="length">The length of the string.</param>
        </member>
        <member name="M:Abide.HaloLibrary.StringId.FromString(System.String,System.Int32)">
            <summary>
            Creates a new <see cref="T:Abide.HaloLibrary.StringId"/> structure from a supplied string and index.
            </summary>
            <param name="value">The string to use as reference.</param>
            <param name="index">The index of the string identifier.</param>
            <returns>A new <see cref="T:Abide.HaloLibrary.StringId"/> structure containing the supplied string length and index.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="value"/> is null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="index"/> it outside of valid range.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="value"/> length is outside of valid range.</exception>
        </member>
        <member name="M:Abide.HaloLibrary.StringId.CompareTo(System.UInt32)">
            <summary>
            Compares this instance to a 32-bit unsigned integer and returns an indication of their relative values.
            </summary>
            <param name="other">A 32-bit unsigned integer to comapre to.</param>
            <returns></returns>
        </member>
        <member name="M:Abide.HaloLibrary.StringId.CompareTo(System.Int32)">
            <summary>
            Compares this instance to a 32-bit signed integer and returns an indication of their relative values.
            </summary>
            <param name="other">A 32-bit signed integer to comapre to.</param>
        </member>
        <member name="M:Abide.HaloLibrary.StringId.CompareTo(Abide.HaloLibrary.StringId)">
            <summary>
            Compares this instance to a 32-bit <see cref="T:Abide.HaloLibrary.StringId"/> structure and returns an indication of their relative values.
            </summary>
            <param name="other">A 32-bit <see cref="T:Abide.HaloLibrary.StringId"/> to comapre to.</param>
        </member>
        <member name="M:Abide.HaloLibrary.StringId.Equals(System.UInt32)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified <see cref="T:System.UInt32"/>.
            </summary>
            <param name="other">A 32-bit unsigned integer to compare to this instance.</param>
            <returns>True if the relative values are equal, otherwise returns false.</returns>
        </member>
        <member name="M:Abide.HaloLibrary.StringId.Equals(System.Int32)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified <see cref="T:System.Int32"/>.
            </summary>
            <param name="other">A 32-bit signed integer to compare to this instance.</param>
            <returns>True if the relative values are equal, otherwise returns false.</returns>
        </member>
        <member name="M:Abide.HaloLibrary.StringId.Equals(Abide.HaloLibrary.StringId)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified <see cref="T:Abide.HaloLibrary.StringId"/>.
            </summary>
            <param name="other">A 32-bit <see cref="T:Abide.HaloLibrary.StringId"/> to compare to this instance.</param>
            <returns>True if the relative values are equal, otherwise returns false.</returns>
        </member>
        <member name="M:Abide.HaloLibrary.StringId.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation.
            </summary>
        </member>
        <member name="T:Abide.HaloLibrary.Tag">
            <summary>
            Represents a Halo four-character code tag.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Tag.FourCc">
            <summary>
            Gets or sets the tag four-character code.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.Tag.Dword">
            <summary>
            Gets or sets the tag dword.
            </summary>
        </member>
        <member name="M:Abide.HaloLibrary.Tag.#ctor(System.String)">
            <summary>
            Initializes a new <see cref="T:Abide.HaloLibrary.Tag"/> instance using the supplied string.
            </summary>
            <param name="fourCc">The four-character code string.</param>
        </member>
        <member name="M:Abide.HaloLibrary.Tag.#ctor(System.UInt32)">
            <summary>
            Initializes a new <see cref="T:Abide.HaloLibrary.Tag"/> instance using the supplied 32-bit unsigned integer.
            </summary>
            <param name="dword"></param>
        </member>
        <member name="M:Abide.HaloLibrary.Tag.CompareTo(Abide.HaloLibrary.Tag)">
            <summary>
            Compares this instance with a specified <see cref="T:Abide.HaloLibrary.Tag"/> object and indicates whether this instance preceds, follows, or appears in the same position as in the sort order as the specified tag.
            </summary>
            <param name="tag">The tag to compare with this instance.</param>
            <returns>A 32-bit signed integer that indicates whether this instance precedes, follows, or appears in the same position in the sort order as the <paramref name="tag"/> parameter.</returns>
        </member>
        <member name="M:Abide.HaloLibrary.Tag.CompareTo(System.String)">
            <summary>
            Compares this instance with a specified <see cref="T:System.String"/> object and indicates whether this instance preceds, follows, or appears in the same position as in the sort order as the specified string.
            </summary>
            <param name="str">The string to compare with this instance.</param>
            <returns>A 32-bit signed integer that indicates whether this instance precedes, follows, or appears in the same position in the sort order as the <paramref name="str"/> parameter.</returns>
        </member>
        <member name="M:Abide.HaloLibrary.Tag.Equals(Abide.HaloLibrary.Tag)">
            <summary>
            Determines whether this instance and another specified <see cref="T:Abide.HaloLibrary.Tag"/> object have the same value.
            </summary>
            <param name="value">The tag to compare to this instance.</param>
            <returns>true if the value of the <paramref name="value"/> parameter is the same as the value of this instance; otherwise, false. If <paramref name="value"/> is null, the method returns false.</returns>
        </member>
        <member name="M:Abide.HaloLibrary.Tag.Equals(System.String)">
            <summary>
            Determines whether this instance and another specified <see cref="T:System.String"/> object have the same value.
            </summary>
            <param name="value">The string to compare to this instance.</param>
            <returns>true if the value of the <paramref name="value"/> parameter is the same as the value of this instance; otherwise, false. If <paramref name="value"/> is null, the method returns false.</returns>
        </member>
        <member name="M:Abide.HaloLibrary.Tag.ToString">
            <summary>
            Returns the instance of this tag four-character code.
            </summary>
            <returns>A string containing the tag fourcc.</returns>
        </member>
        <member name="M:Abide.HaloLibrary.Tag.op_Implicit(Abide.HaloLibrary.Tag)~System.String">
            <summary>
            Converts a <see cref="T:Abide.HaloLibrary.Tag"/> to a <see cref="T:System.String"/>.
            </summary>
            <param name="tag">The tag.</param>
        </member>
        <member name="M:Abide.HaloLibrary.Tag.op_Implicit(System.String)~Abide.HaloLibrary.Tag">
            <summary>
            Converts a <see cref="T:System.String"/> to a <see cref="T:Abide.HaloLibrary.Tag"/>.
            </summary>
            <param name="fourCc">The four-character code string.</param>
        </member>
        <member name="M:Abide.HaloLibrary.Tag.op_Explicit(Abide.HaloLibrary.Tag)~System.UInt32">
            <summary>
            Converts the <see cref="T:Abide.HaloLibrary.Tag"/> to an unsigned 32-bit integer.
            </summary>
            <param name="tag">The tag.</param>
        </member>
        <member name="M:Abide.HaloLibrary.Tag.op_Explicit(System.UInt32)~Abide.HaloLibrary.Tag">
            <summary>
            Converts a 32-bit unsigned integer to a <see cref="T:Abide.HaloLibrary.Tag"/>.
            </summary>
            <param name="dword">The tag dword.</param>
        </member>
        <member name="T:Abide.HaloLibrary.TagBlock">
            <summary>
            Represents a 64-bit tag_block reference.
            </summary>
        </member>
        <member name="F:Abide.HaloLibrary.TagBlock.Zero">
            <summary>
            Represents a zero-value <see cref="T:Abide.HaloLibrary.TagBlock"/> structure.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.TagBlock.Count">
            <summary>
            Gets or sets the array length.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.TagBlock.Offset">
            <summary>
            Gets or sets the offset to the array.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.TagBlock.Qword">
            <summary>
            Gets or sets a 64-bit unsigned integer containing this tag block's data.
            </summary>
        </member>
        <member name="M:Abide.HaloLibrary.TagBlock.#ctor(System.UInt32,System.UInt32)">
            <summary>
            Initializes a new <see cref="T:Abide.HaloLibrary.TagBlock"/> structure with the specified count and pointer values.
            </summary>
            <param name="count">The amount of blocks in the array.</param>
            <param name="offset">The offset to the array.</param>
        </member>
        <member name="M:Abide.HaloLibrary.TagBlock.Translate(System.Int32)">
            <summary>
            Translates the tag block's memory-addressed pointer using a supplied value.
            </summary>
            <param name="memoryAddress">The base memory-address.</param>
            <returns>A translated pointer address.</returns>
        </member>
        <member name="M:Abide.HaloLibrary.TagBlock.CompareTo(System.UInt64)">
            <summary>
            Compares this instance to a specified 64-bit unsigned integer and returns an indication of their relative values.
            </summary>
            <param name="other">An unsigned integer to compare.</param>
            <returns>A signed number indicating the relative values of this instance and <paramref name="other"/>.</returns>
        </member>
        <member name="M:Abide.HaloLibrary.TagBlock.CompareTo(System.Int64)">
            <summary>
            Compares this instance to a specified 64-bit signed integer and returns an indication of their relative values.
            </summary>
            <param name="other">A signed integer to compare.</param>
            <returns>A signed number indicating the relative values of this instance and <paramref name="other"/>.</returns>
        </member>
        <member name="M:Abide.HaloLibrary.TagBlock.CompareTo(Abide.HaloLibrary.TagBlock)">
            <summary>
            Compares this instance to a specified 64-bit tag block and returns an indication of their relative values.
            </summary>
            <param name="other">A <see cref="T:Abide.HaloLibrary.TagBlock"/> to compare.</param>
            <returns>A signed number indicating the relative values of this instance and <paramref name="other"/>.</returns>
        </member>
        <member name="M:Abide.HaloLibrary.TagBlock.Equals(System.UInt64)">
            <summary>
            Determines whether the specified unsigned 64-bit integer is equal to this instance.
            </summary>
            <param name="other">The integer to compare with the current instance.</param>
            <returns>true if the specified integer is equal to the current instance; otherwise false.</returns>
        </member>
        <member name="M:Abide.HaloLibrary.TagBlock.Equals(System.Int64)">
            <summary>
            Determines whether the specified signed 64-bit integer is equal to this instance.
            </summary>
            <param name="other">The integer to compare with the current instance.</param>
            <returns>true if the specified integer is equal to the current instance; otherwise false.</returns>
        </member>
        <member name="M:Abide.HaloLibrary.TagBlock.Equals(Abide.HaloLibrary.TagBlock)">
            <summary>
            Determines whether the specified <see cref="T:Abide.HaloLibrary.TagBlock"/> is equal to this instance.
            </summary>
            <param name="other">The <see cref="T:Abide.HaloLibrary.TagBlock"/> to compare with the current instance.</param>
            <returns>true if the specified <see cref="T:Abide.HaloLibrary.TagBlock"/> is equal to the current instance; otherwise false.</returns>
        </member>
        <member name="M:Abide.HaloLibrary.TagBlock.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation.
            </summary>
            <returns>The string representation of the value of this instance, consisting of a valid count integer and pointer integer.</returns>
        </member>
        <member name="T:Abide.HaloLibrary.TagId">
            <summary>
            Represents a 32-bit tag ID number.
            </summary>
        </member>
        <member name="F:Abide.HaloLibrary.TagId.Null">
            <summary>
            Represents a null tag id.
            This value is read-only.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.TagId.Id">
            <summary>
            Gets and returns the ID as a signed 32-bit integer.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.TagId.Dword">
            <summary>
            Gets and returns the ID as an unsigned 32-bit integer.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.TagId.LoWord">
            <summary>
            Gets or sets the low 16-bit unsigned integer.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.TagId.HiWord">
            <summary>
            Gets or sets the high 16-bit unsigned integer.
            </summary>
        </member>
        <member name="P:Abide.HaloLibrary.TagId.IsNull">
            <summary>
            Gets and returns true if the ID is null, otherwise, false.
            </summary>
        </member>
        <member name="M:Abide.HaloLibrary.TagId.#ctor(System.UInt32)">
            <summary>
            Initializes a new <see cref="T:Abide.HaloLibrary.TagId"/> instance using the supplied ID.
            </summary>
            <param name="id">The 32-bit unsigned integer ID.</param>
        </member>
        <member name="M:Abide.HaloLibrary.TagId.#ctor(System.Int32)">
            <summary>
            Initializes a new <see cref="T:Abide.HaloLibrary.TagId"/> instance using the supplied ID.
            </summary>
            <param name="id">The 32-bit signed integer ID.</param>
        </member>
        <member name="M:Abide.HaloLibrary.TagId.CompareTo(System.Int32)">
            <summary>
            Compares this instance with a specified <see cref="T:System.Int32"/> object and indicates whether this instance preceds, follows, or appears in the same position as in the sort order as the specified id.
            </summary>
            <param name="id">The id to compare with this instance.</param>
            <returns>A 32-bit signed integer that indicates whether this instance precedes, follows, or appears in the same position in the sort order as the <paramref name="id"/> parameter.</returns>
        </member>
        <member name="M:Abide.HaloLibrary.TagId.CompareTo(System.UInt32)">
            <summary>
            Compares this instance with a specified <see cref="T:System.UInt32"/> object and indicates whether this instance preceds, follows, or appears in the same position as in the sort order as the specified id.
            </summary>
            <param name="id">The id to compare with this instance.</param>
            <returns>A 32-bit signed integer that indicates whether this instance precedes, follows, or appears in the same position in the sort order as the <paramref name="id"/> parameter.</returns>
        </member>
        <member name="M:Abide.HaloLibrary.TagId.CompareTo(Abide.HaloLibrary.TagId)">
            <summary>
            Compares this instance with a specified <see cref="T:Abide.HaloLibrary.TagId"/> object and indicates whether this instance preceds, follows, or appears in the same position as in the sort order as the specified id.
            </summary>
            <param name="id">The id to compare with this instance.</param>
            <returns>A 32-bit signed integer that indicates whether this instance precedes, follows, or appears in the same position in the sort order as the <paramref name="id"/> parameter.</returns>
        </member>
        <member name="M:Abide.HaloLibrary.TagId.Equals(System.Int32)">
            <summary>
            Determines whether this instance and another specified <see cref="T:System.Int32"/> value have the same value.
            </summary>
            <param name="id">The id to compare to this instance.</param>
            <returns>true if the value of the <paramref name="id"/> parameter is the same as the value of this instance; otherwise, false.</returns>
        </member>
        <member name="M:Abide.HaloLibrary.TagId.Equals(System.UInt32)">
            <summary>
            Determines whether this instance and another specified <see cref="T:System.UInt32"/> value have the same value.
            </summary>
            <param name="id">The id to compare to this instance.</param>
            <returns>true if the value of the <paramref name="id"/> parameter is the same as the value of this instance; otherwise, false.</returns>
        </member>
        <member name="M:Abide.HaloLibrary.TagId.Equals(Abide.HaloLibrary.TagId)">
            <summary>
            Determines whether this instance and another specified <see cref="T:Abide.HaloLibrary.TagId"/> value have the same value.
            </summary>
            <param name="id">The id to compare to this instance.</param>
            <returns>true if the value of the <paramref name="id"/> parameter is the same as the value of this instance; otherwise, false.</returns>
        </member>
        <member name="M:Abide.HaloLibrary.TagId.ToString">
            <summary>
            Gets a string representation of this instance.
            </summary>
            <returns>A 8-digit hex tag ID.</returns>
        </member>
        <member name="M:Abide.HaloLibrary.TagId.op_Implicit(Abide.HaloLibrary.TagId)~System.UInt32">
            <summary>
            Converts a <see cref="T:Abide.HaloLibrary.TagId"/> to an unsigned 32-bit integer.
            </summary>
            <param name="id">The <see cref="T:Abide.HaloLibrary.TagId"/> object.</param>
        </member>
        <member name="M:Abide.HaloLibrary.TagId.op_Implicit(System.UInt32)~Abide.HaloLibrary.TagId">
            <summary>
            Converts a unsigned 32-bit integer to a <see cref="T:Abide.HaloLibrary.TagId"/> instance.
            </summary>
            <param name="id">The <see cref="T:System.UInt32"/> object.</param>
        </member>
        <member name="M:Abide.HaloLibrary.TagId.op_Implicit(Abide.HaloLibrary.TagId)~System.Int32">
            <summary>
            Converts a <see cref="T:Abide.HaloLibrary.TagId"/> to a signed 32-bit integer.
            </summary>
            <param name="id">The <see cref="T:Abide.HaloLibrary.TagId"/> object.</param>
        </member>
        <member name="M:Abide.HaloLibrary.TagId.op_Implicit(System.Int32)~Abide.HaloLibrary.TagId">
            <summary>
            Converts a signed 32-bit integer to to a <see cref="T:Abide.HaloLibrary.TagId"/> instance.
            </summary>
            <param name="id">The <see cref="T:System.Int32"/> object.</param>
        </member>
        <member name="T:Abide.HaloLibrary.MapVersion">
            <summary>
            Represents a Halo map version enumeration.
            </summary>
        </member>
        <member name="F:Abide.HaloLibrary.MapVersion.None">
            <summary>
            Specifies no map.
            </summary>
        </member>
        <member name="F:Abide.HaloLibrary.MapVersion.HaloCE">
            <summary>
            Specifies Halo: Combat Evolved.
            PC Platform.
            </summary>
        </member>
        <member name="F:Abide.HaloLibrary.MapVersion.HaloCEx">
            <summary>
            Specifies Halo: Combat Evolved.
            Xbox Platform.
            </summary>
        </member>
        <member name="F:Abide.HaloLibrary.MapVersion.Halo2">
            <summary>
            Specifies Halo 2.
            Xbox Platform.
            </summary>
        </member>
        <member name="F:Abide.HaloLibrary.MapVersion.Halo2b">
            <summary>
            Specifies Halo 2 Beta.
            Xbox Platform.
            </summary>
        </member>
        <member name="F:Abide.HaloLibrary.MapVersion.Halo2v">
            <summary>
            Specifies Halo 2 Vista.
            PC Platform.
            </summary>
        </member>
        <member name="F:Abide.HaloLibrary.MapVersion.Halo3">
            <summary>
            Specifies Halo 3.
            Xbox 360 Platform.
            </summary>
        </member>
        <member name="F:Abide.HaloLibrary.MapVersion.Halo3b">
            <summary>
            Specifies Halo 3 Beta.
            Xbox 360 Platform.
            </summary>
        </member>
        <member name="F:Abide.HaloLibrary.MapVersion.HaloReach">
            <summary>
            Specifies Halo: Reach.
            Xbox 360 Platform.
            </summary>
        </member>
        <member name="T:System.SystemExtensions">
            <summary>
            Provides extension and helper functions for the System namespace.
            </summary>
        </member>
        <member name="M:System.SystemExtensions.Reverse(System.String)">
            <summary>
            Reverses a given string.
            </summary>
            <param name="str">The string to reverse.</param>
            <returns>A reversed string.</returns>
        </member>
        <member name="M:System.SystemExtensions.PadTo(System.UInt32,System.UInt32)">
            <summary>
            Pads up a uint to match a multiple of a supplied length.
            The resulting value will always be greater than or equal to the supplied number.
            </summary>
            <param name="number">The number to pad.</param>
            <param name="length">The length to pad to.</param>
            <returns>A number that is a multiple of length, but is greater than or equal to number.</returns>
        </member>
        <member name="M:System.SystemExtensions.PadTo(System.Int32,System.Int32)">
            <summary>
            Pads up an int to match a multiple of a supplied length.
            The resulting value will always be greater than or equal to the supplied number.
            </summary>
            <param name="number">The number to pad.</param>
            <param name="length">The length to pad to.</param>
            <returns>A number that is a multiple of length, but is greater than or equal to number.</returns>
        </member>
        <member name="M:System.SystemExtensions.PadTo(System.UInt64,System.UInt64)">
            <summary>
            Pads up a ulong to match a multiple of a supplied length.
            The resulting value will always be greater than or equal to the supplied number.
            </summary>
            <param name="number">The number to pad.</param>
            <param name="length">The length to pad to.</param>
            <returns>A number that is a multiple of length, but is greater than or equal to number.</returns>
        </member>
        <member name="M:System.SystemExtensions.PadTo(System.Int64,System.Int64)">
            <summary>
            Pads up a long to match a multiple of a supplied length.
            The resulting value will always be greater than or equal to the supplied number.
            </summary>
            <param name="number">The number to pad.</param>
            <param name="length">The length to pad to.</param>
            <returns>A number that is a multiple of length, but is greater than or equal to number.</returns>
        </member>
        <member name="M:System.SystemExtensions.GetStringFromFixedBuffer(System.Byte*,System.Int32,System.Text.Encoding)">
            <summary>
            Gets a string from a fixed byte buffer using the specifed encoding and buffer length.
            </summary>
            <param name="source">The fixed-length byte buffer.</param>
            <param name="length">The length of the buffer.</param>
            <param name="encoding">The encoding to use to decode the string.</param>
            <returns>A string.</returns>
        </member>
        <member name="M:System.SystemExtensions.SetStringToFixedBuffer(System.Byte*,System.Int32,System.Text.Encoding,System.String)">
            <summary>
            Sets a string to a fixed byte buffer using the specifed encoding and buffer length. 
            </summary>
            <param name="target">The fixed-length byte buffer.</param>
            <param name="length">The length of the buffer.</param>
            <param name="encoding">The encoding to use to decode the string.</param>
            <param name="value">The string value to set.</param>
        </member>
        <member name="T:System.IO.IOExtensions">
            <summary>
            Provides extension and helper functions for the System.IO namespace.
            </summary>
        </member>
        <member name="F:System.IO.IOExtensions.NullTerminatedCutoff">
            <summary>
            If we can't find the whitespace after 4KB, we're just gonna call it quits.
            </summary>
        </member>
        <member name="M:System.IO.IOExtensions.Seek(System.IO.Stream,System.Int32,System.Int32,System.IO.SeekOrigin)">
            <summary>
            Sets the position within the current stream to an offset whose difference is that of the supplied offset, and a translator value.
            </summary>
            <param name="stream">The stream to seek within.</param>
            <param name="offset">The translator-addressed to seek to.</param>
            <param name="translator">The value to translate the address.</param>
            <param name="origin">The reference point used to obtain the new position.</param>
            <returns>The new position of the current stream.</returns>
            <exception cref="T:System.IO.IOException"></exception> 
            <exception cref="T:System.NotSupportedException"></exception>
            <exception cref="T:System.ObjectDisposedException"></exception>
            <exception cref="T:System.OverflowException"></exception>
        </member>
        <member name="M:System.IO.IOExtensions.Seek(System.IO.Stream,System.UInt32,System.UInt32,System.IO.SeekOrigin)">
            <summary>
            Sets the position within the current stream to an offset whose difference is that of the supplied offset, and a translator value.
            </summary>
            <param name="stream">The stream to seek within.</param>
            <param name="offset">The translator-addressed to seek to.</param>
            <param name="translator">The value to translate the address.</param>
            <param name="origin">The reference point used to obtain the new position.</param>
            <returns>The new position of the current stream.</returns>
            <exception cref="T:System.IO.IOException"></exception> 
            <exception cref="T:System.NotSupportedException"></exception>
            <exception cref="T:System.ObjectDisposedException"></exception>
            <exception cref="T:System.OverflowException"></exception>
        </member>
        <member name="M:System.IO.IOExtensions.Seek(System.IO.Stream,System.Int32,System.UInt32,System.IO.SeekOrigin)">
            <summary>
            Sets the position within the current stream to an offset whose difference is that of the supplied offset, and a translator value.
            </summary>
            <param name="stream">The stream to seek within.</param>
            <param name="offset">The translator-addressed offset to seek to.</param>
            <param name="translator">The value to translate the address.</param>
            <param name="origin">The reference point used to obtain the new position.</param>
            <returns>The new position of the current stream.</returns>
            <exception cref="T:System.IO.IOException"></exception> 
            <exception cref="T:System.NotSupportedException"></exception>
            <exception cref="T:System.ObjectDisposedException"></exception>
            <exception cref="T:System.OverflowException"></exception>
        </member>
        <member name="M:System.IO.IOExtensions.Seek(System.IO.Stream,System.Int64,System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets the position within the current stream to an offset whose difference is that of the supplied offset, and a translator value.
            </summary>
            <param name="stream">The stream to seek within.</param>
            <param name="offset">The translator-addressed to seek to.</param>
            <param name="translator">The value to translate the address.</param>
            <param name="origin">The reference point used to obtain the new position.</param>
            <returns>The new position of the current stream.</returns>
            <exception cref="T:System.IO.IOException"></exception> 
            <exception cref="T:System.NotSupportedException"></exception>
            <exception cref="T:System.ObjectDisposedException"></exception>
            <exception cref="T:System.OverflowException"></exception>
        </member>
        <member name="M:System.IO.IOExtensions.ReadStringTable(System.IO.BinaryReader,System.Int64,System.Int64,System.Int32,System.Text.Encoding)">
            <summary>
            Reads a generic string-table with a null-separated string list, and index table using a specified encoding.
            </summary>
            <param name="reader">The <see cref="T:System.IO.BinaryReader"/> instance to read from the underlying stream.</param>
            <param name="stringsOffset">The zero-based offset to the beginning of the strings list.</param>
            <param name="indexOffset">The zero-based offset to the beginning of the strings' index.</param>
            <param name="count">The number of strings to be read.</param>
            <param name="encoding">The encoding used to decode the text.</param>
            <returns>A string array containing the </returns>
            <exception cref="T:System.IO.IOException">Occurs when there function encounters an IO error.</exception>
            <exception cref="T:System.ArgumentNullException">Occurs when either the supplied <see cref="T:System.IO.BinaryReader"/> instance or <see cref="T:System.Text.Encoding"/> instance is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Occurs when either of the supplied offsets are outside of the file's range, or if the count is less than zero.</exception>
        </member>
        <member name="M:System.IO.IOExtensions.ReadUTF8StringTable(System.IO.BinaryReader,System.Int64,System.Int64,System.Int32)">
            <summary>
            Reads a generic UTF-8 encoded string-table with a null-separated string list, and index table.
            </summary>
            <param name="reader">The <see cref="T:System.IO.BinaryReader"/> instance to read from the underlying stream.</param>
            <param name="stringsOffset">The zero-based offset to the beginning of the strings list.</param>
            <param name="indexOffset">The zero-based offset to the beginning of the strings' index.</param>
            <param name="count">The number of strings to be read.</param>
            <returns>A string array containing the </returns>
            <exception cref="T:System.IO.IOException">Occurs when there function encounters an IO error.</exception>
            <exception cref="T:System.ArgumentNullException">Occurs when the <see cref="T:System.IO.BinaryReader"/> instance is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Occurs when either of the supplied offsets are outside of the file's range, or if the count is less than zero.</exception>
        </member>
        <member name="M:System.IO.IOExtensions.ReadASCIIStringTable(System.IO.BinaryReader,System.Int64,System.Int64,System.Int32)">
            <summary>
            Reads a generic ASCII encoded string-table with a null-separated string list, and index table.
            </summary>
            <param name="reader">The <see cref="T:System.IO.BinaryReader"/> instance to read from the underlying stream.</param>
            <param name="stringsOffset">The zero-based offset to the beginning of the strings list.</param>
            <param name="indexOffset">The zero-based offset to the beginning of the strings' index.</param>
            <param name="count">The number of strings to be read.</param>
            <returns>A string array containing the </returns>
            <exception cref="T:System.ArgumentNullException">Occurs when the <see cref="T:System.IO.BinaryReader"/> instance is null.</exception>
            <exception cref="T:System.IO.IOException">Occurs when there function encounters an IO error.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Occurs when either of the supplied offsets are outside of the file's range, or if the count is less than zero.</exception>
        </member>
        <member name="M:System.IO.IOExtensions.Read(System.IO.BinaryReader,System.Type)">
            <summary>
            Reads an object of the specified type from the underlying stream and advances the current position of the stream the length of the given type.
            </summary>
            <param name="reader">The <see cref="T:System.IO.BinaryReader"/> instance to read the object from the underlying stream.</param>
            <param name="type">A binary structure type to read.</param>
            <returns>An instance of the read type.</returns>
        </member>
        <member name="M:System.IO.IOExtensions.Read``1(System.IO.BinaryReader)">
            <summary>
            Reads the specified object from the underlying stream and advances the current position of the stream the length of the given type.
            <typeparamref name="T"/> must be a value type.
            </summary>
            <typeparam name="T">A value type structure type to read.</typeparam>
            <param name="reader">The <see cref="T:System.IO.BinaryReader"/> instance to read the object from the underlying stream.</param>
            <returns>An instance of <typeparamref name="T"/>.</returns>
        </member>
        <member name="M:System.IO.IOExtensions.ReadStructure``1(System.IO.BinaryReader)">
            <summary>
            Reads the specified structure from the underlying stream and advances the current position of the stream by the length of the structure.
            </summary>
            <typeparam name="T">The marshalable structure type.</typeparam>
            <param name="reader">The <see cref="T:System.IO.BinaryReader"/> instance to read from the underlying stream.</param>
            <returns>A structure containing the read data.</returns>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:System.IO.IOException"></exception>
            <exception cref="T:System.ObjectDisposedException"></exception>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:System.IO.IOExtensions.Write``1(System.IO.BinaryWriter,``0)">
            <summary>
            Writes the specified structure to the underlying stream and advances the current position of the stream by the length of the structure.
            </summary>
            <typeparam name="T">The marshalable structure type.</typeparam>
            <param name="writer">The <see cref="T:System.IO.BinaryWriter"/> instance used to write to the underlying stream.</param>
            <param name="structure">The structure to write.</param>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:System.IO.IOException"></exception>
            <exception cref="T:System.ObjectDisposedException"></exception>
        </member>
        <member name="M:System.IO.IOExtensions.WriteStringNullTerminated(System.IO.BinaryWriter,System.String,System.Text.Encoding)">
            <summary>
            Writes a null-terminated string to the underlying stream using the supplied encoding.
            </summary>
            <param name="Out">The System.IO.BinaryWriter instance.</param>
            <param name="text">The string to be written</param>
            <param name="encoding">The encoding to use to encode the text.</param>
        </member>
        <member name="M:System.IO.IOExtensions.ReadStringNullTerminated(System.IO.BinaryReader,System.Text.Encoding)">
            <summary>
            Reads a null-terminated string from the underlying stream using the supplied encoding.
            </summary>
            <param name="In">The System.IO.BinaryReader instance.</param>
            /// <param name="encoding">The encoding to use to decode the text.</param>
            <returns>The ASCII-Encoded string.</returns>
        </member>
        <member name="M:System.IO.IOExtensions.WriteUTF8NullTerminated(System.IO.BinaryWriter,System.String)">
            <summary>
            Writes a null-terminated UTF-8 encoded string to the underlying stream.
            </summary>
            <param name="Out">The System.IO.BinaryWriter instance.</param>
            <param name="text">The string to be written</param>
        </member>
        <member name="M:System.IO.IOExtensions.ReadUTF8NullTerminated(System.IO.BinaryReader)">
            <summary>
            Reads a null-terminated UTF-8-Encoded string from the underlying stream.
            </summary>
            <param name="In">The System.IO.BinaryReader instance.</param>
            <returns>The UTF-8-Encoded string.</returns>
        </member>
        <member name="M:System.IO.IOExtensions.WriteASCIINullTerminated(System.IO.BinaryWriter,System.String)">
            <summary>
            Writes a null-terminated ASCII encoded string to the underlying stream.
            </summary>
            <param name="Out">The System.IO.BinaryWriter instance.</param>
            <param name="text">The string to be written</param>
        </member>
        <member name="M:System.IO.IOExtensions.ReadASCIINullTerminated(System.IO.BinaryReader)">
            <summary>
            Reads a null-terminated ASCII-Encoded string from the underlying stream.
            </summary>
            <param name="In">The System.IO.BinaryReader instance.</param>
            <returns>The ASCII-Encoded string.</returns>
        </member>
        <member name="M:System.IO.IOExtensions.WriteUnicodeNullTerminated(System.IO.BinaryWriter,System.String)">
            <summary>
            Writes a null-terminated Unicode encoded string to the underlying stream.
            </summary>
            <param name="Out">The System.IO.BinaryWriter instance.</param>
            <param name="text">The string to be written</param>
        </member>
        <member name="M:System.IO.IOExtensions.ReadUnicodeNullTerminated(System.IO.BinaryReader)">
            <summary>
            Reads a null-terminated Unicode-Encoded string from the underlying stream.
            </summary>
            <param name="In">The System.IO.BinaryReader instance.</param>
            <returns>The Unicode-Encoded string.</returns>
        </member>
        <member name="M:System.IO.IOExtensions.WriteStringData(System.IO.BinaryWriter,System.String,System.Text.Encoding)">
            <summary>
            Writes a non-lengthed prefix UTF-8-Encoded string to the underlying stream.
            </summary>
            <param name="Out">The System.IO.BinaryWriter instance.</param>
            <param name="text">The string to be written</param>
            <param name="encoding">The encoding to use to encode the string.</param>
        </member>
        <member name="M:System.IO.IOExtensions.ReadStringData(System.IO.BinaryReader,System.Int32,System.Text.Encoding)">
            <summary>
            Reads an UTF-8-Encoded string from the underlying stream.
            </summary>
            <param name="In">The System.IO.BinaryReader instance.</param>
            <param name="length">The length of the data to be read.</param>
            <param name="encoding">The encoding used to decode the string.</param>
            <returns>The UTF-8-Encoded string.</returns>
        </member>
        <member name="M:System.IO.IOExtensions.WriteUTF8(System.IO.BinaryWriter,System.String)">
            <summary>
            Writes a non-lengthed prefix UTF-8-Encoded string to the underlying stream.
            </summary>
            <param name="Out">The System.IO.BinaryWriter instance.</param>
            <param name="text">The string to be written</param>
        </member>
        <member name="M:System.IO.IOExtensions.ReadUTF8(System.IO.BinaryReader,System.Int32)">
            <summary>
            Reads an UTF-8-Encoded string from the underlying stream.
            </summary>
            <param name="In">The System.IO.BinaryReader instance.</param>
            <param name="length">The length of the data to be read.</param>
            <returns>The UTF-8-Encoded string.</returns>
        </member>
        <member name="M:System.IO.IOExtensions.WriteASCII(System.IO.BinaryWriter,System.String)">
            <summary>
            Writes a non-lengthed prefix ASCII-Encoded string to the underlying stream.
            </summary>
            <param name="Out">The System.IO.BinaryWriter instance.</param>
            <param name="text">The string to be written</param>
        </member>
        <member name="M:System.IO.IOExtensions.ReadASCII(System.IO.BinaryReader,System.Int32)">
            <summary>
            Reads an ASCII-Encoded string from the underlying stream.
            </summary>
            <param name="In">The System.IO.BinaryReader instance.</param>
            <param name="length">The length of the data to be read.</param>
            <returns>The ASCII-Encoded string.</returns>
        </member>
        <member name="M:System.IO.IOExtensions.WriteUnicode(System.IO.BinaryWriter,System.String)">
            <summary>
            Writes a non-lengthed prefix Unicode-Encoded string to the underlying stream.
            </summary>
            <param name="Out">The System.IO.BinaryWriter instance.</param>
            <param name="text">The string to be written</param>
        </member>
        <member name="M:System.IO.IOExtensions.ReadUnicode(System.IO.BinaryReader,System.Int32)">
            <summary>
            Reads an Unicode-Encoded string from the underlying stream.
            </summary>
            <param name="In">The System.IO.BinaryReader instance.</param>
            <param name="length">The length of the data to be read.</param>
            <returns>The Unicode-Encoded string.</returns>
        </member>
    </members>
</doc>
