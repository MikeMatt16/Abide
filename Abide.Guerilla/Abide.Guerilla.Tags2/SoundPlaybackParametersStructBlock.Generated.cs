#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Abide.Guerilla.Tags2
{
    using Abide.Guerilla.Types;
    using Abide.HaloLibrary;
    using System;
    
    [Abide.Guerilla.Tags.FieldSetAttribute(56, 4)]
    public class SoundPlaybackParametersStructBlock
    {
        [Abide.Guerilla.Tags.FieldAttribute("minimum distance:world units#the distance below which this sound no longer gets l" +
            "ouder", typeof(Single))]
        public Single MinimumDistance;
        [Abide.Guerilla.Tags.FieldAttribute("maximum distance:world units#the distance beyond which this sound is no longer au" +
            "dible", typeof(Single))]
        public Single MaximumDistance;
        [Abide.Guerilla.Tags.FieldAttribute("skip fraction#fraction of requests to play this sound that will be ignored (0 mea" +
            "ns always play.)", typeof(Single))]
        public Single SkipFraction;
        [Abide.Guerilla.Tags.FieldAttribute("maximum bend per second:cents", typeof(Single))]
        public Single MaximumBendPerSecond;
        [Abide.Guerilla.Tags.FieldAttribute("gain base:dB#sound\'s random gain will start here", typeof(Single))]
        public Single GainBase;
        [Abide.Guerilla.Tags.FieldAttribute("gain variance:dB#sound\'s gain will be randomly modulated within this range", typeof(Single))]
        public Single GainVariance;
        [Abide.Guerilla.Tags.FieldAttribute("inner cone angle:degrees#within the cone defined by this angle and the sound\'s di" +
            "rection, the sound plays with a gain of 1.0.", typeof(Single))]
        public Single InnerConeAngle;
        [Abide.Guerilla.Tags.FieldAttribute("outer cone angle:degrees#outside the cone defined by this angle and the sound\'s d" +
            "irection, the sound plays with a gain of OUTER CONE GAIN. (0 means the sound doe" +
            "s not attenuate with direction.)", typeof(Single))]
        public Single OuterConeAngle;
        [Abide.Guerilla.Tags.FieldAttribute("outer cone gain:dB#the gain to use when the sound is directed away from the liste" +
            "ner", typeof(Single))]
        public Single OuterConeGain;
        [Abide.Guerilla.Tags.FieldAttribute("flags", typeof(Int32))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
        public Int32 Flags;
        [Abide.Guerilla.Tags.FieldAttribute("azimuth", typeof(Single))]
        public Single Azimuth;
        [Abide.Guerilla.Tags.FieldAttribute("positional gain:dB", typeof(Single))]
        public Single PositionalGain;
        [Abide.Guerilla.Tags.FieldAttribute("first person gain:dB", typeof(Single))]
        public Single FirstPersonGain;
        public enum FlagsOptions
        {
            OverrideAzimuth = 1,
            Override3dGain = 2,
            OverrideSpeakerGain = 4,
        }
    }
}
#pragma warning restore CS1591
