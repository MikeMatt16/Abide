#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Abide.Guerilla.Tags2
{
    using Abide.Guerilla.Types;
    using Abide.HaloLibrary;
    using System;
    
    [Abide.Guerilla.Tags.FieldSetAttribute(716, 4)]
    [Abide.Guerilla.Tags.TagGroupAttribute("weapon", "weap", "item", typeof(WeaponBlock))]
    public class WeaponBlock
    {
        [Abide.Guerilla.Tags.FieldAttribute("flags", typeof(Int32))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
        public Int32 Flags;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(StringId))]
        public StringId EmptyString;
        [Abide.Guerilla.Tags.FieldAttribute("secondary trigger mode", typeof(Int16))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(SecondaryTriggerModeOptions), false)]
        public Int16 SecondaryTriggerMode;
        [Abide.Guerilla.Tags.FieldAttribute("maximum alternate shots loaded#if the second trigger loads alternate ammunition, " +
            "this is the maximum number of shots that can be loaded at a time", typeof(Int16))]
        public Int16 MaximumAlternateShotsLoaded;
        [Abide.Guerilla.Tags.FieldAttribute("turn on time#how long after being readied it takes this weapon to switch its \'tur" +
            "ned_on\' attachment to 1.0", typeof(Single))]
        public Single TurnOnTime;
        [Abide.Guerilla.Tags.FieldAttribute("ready time:seconds", typeof(Single))]
        public Single ReadyTime;
        [Abide.Guerilla.Tags.FieldAttribute("ready effect", typeof(TagReference))]
        public TagReference ReadyEffect;
        [Abide.Guerilla.Tags.FieldAttribute("ready damage effect", typeof(TagReference))]
        public TagReference ReadyDamageEffect;
        [Abide.Guerilla.Tags.FieldAttribute("heat recovery threshold:[0,1]#the heat value a weapon must return to before leavi" +
            "ng the overheated state, once it has become overheated in the first place", typeof(Single))]
        public Single HeatRecoveryThreshold;
        [Abide.Guerilla.Tags.FieldAttribute("overheated threshold:[0,1]#the heat value over which a weapon first becomes overh" +
            "eated (should be greater than the heat recovery threshold)", typeof(Single))]
        public Single OverheatedThreshold;
        [Abide.Guerilla.Tags.FieldAttribute("heat detonation threshold:[0,1]#the heat value above which the weapon has a chanc" +
            "e of exploding each time it is fired", typeof(Single))]
        public Single HeatDetonationThreshold;
        [Abide.Guerilla.Tags.FieldAttribute("heat detonation fraction:[0,1]#the percent chance (between 0.0 and 1.0) the weapo" +
            "n will explode when fired over the heat detonation threshold", typeof(Single))]
        public Single HeatDetonationFraction;
        [Abide.Guerilla.Tags.FieldAttribute("heat loss per second:[0,1]#the amount of heat lost each second when the weapon is" +
            " not being fired", typeof(Single))]
        public Single HeatLossPerSecond;
        [Abide.Guerilla.Tags.FieldAttribute("heat illumination:[0,1]#the amount of illumination given off when the weapon is o" +
            "verheated", typeof(Single))]
        public Single HeatIllumination;
        [Abide.Guerilla.Tags.FieldAttribute("overheated heat loss per second:[0,1]#the amount of heat lost each second when th" +
            "e weapon is not being fired", typeof(Single))]
        public Single OverheatedHeatLossPerSecond;
        [Abide.Guerilla.Tags.FieldAttribute("overheated", typeof(TagReference))]
        public TagReference Overheated;
        [Abide.Guerilla.Tags.FieldAttribute("overheated damage effect", typeof(TagReference))]
        public TagReference OverheatedDamageEffect;
        [Abide.Guerilla.Tags.FieldAttribute("detonation", typeof(TagReference))]
        public TagReference Detonation;
        [Abide.Guerilla.Tags.FieldAttribute("detonation damage effect", typeof(TagReference))]
        public TagReference DetonationDamageEffect;
        [Abide.Guerilla.Tags.FieldAttribute("player melee damage", typeof(TagReference))]
        public TagReference PlayerMeleeDamage;
        [Abide.Guerilla.Tags.FieldAttribute("player melee response", typeof(TagReference))]
        public TagReference PlayerMeleeResponse;
        [Abide.Guerilla.Tags.FieldAttribute("melee aim assist", typeof(MeleeAimAssistStructBlock))]
        public MeleeAimAssistStructBlock MeleeAimAssist1;
        [Abide.Guerilla.Tags.FieldAttribute("melee damage parameters", typeof(MeleeDamageParametersStructBlock))]
        public MeleeDamageParametersStructBlock MeleeDamageParameters1;
        [Abide.Guerilla.Tags.FieldAttribute("melee damage reporting type", typeof(Byte))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(MeleeDamageReportingTypeOptions), false)]
        public Byte MeleeDamageReportingType;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(1)]
        public Byte[] EmptyString1;
        [Abide.Guerilla.Tags.FieldAttribute("magnification levels#the number of magnification levels this weapon allows", typeof(Int16))]
        public Int16 MagnificationLevels;
        [Abide.Guerilla.Tags.FieldAttribute("weapon aim assist", typeof(AimAssistStructBlock))]
        public AimAssistStructBlock WeaponAimAssist1;
        [Abide.Guerilla.Tags.FieldAttribute("movement penalized", typeof(Int16))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(MovementPenalizedOptions), false)]
        public Int16 MovementPenalized;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(2)]
        public Byte[] EmptyString2;
        [Abide.Guerilla.Tags.FieldAttribute("forward movement penalty#percent slowdown to forward movement for units carrying " +
            "this weapon", typeof(Single))]
        public Single ForwardMovementPenalty;
        [Abide.Guerilla.Tags.FieldAttribute("sideways movement penalty#percent slowdown to sideways and backward movement for " +
            "units carrying this weapon", typeof(Single))]
        public Single SidewaysMovementPenalty;
        [Abide.Guerilla.Tags.FieldAttribute("AI scariness", typeof(Single))]
        public Single AiScariness;
        [Abide.Guerilla.Tags.FieldAttribute("weapon power-on time:seconds", typeof(Single))]
        public Single WeaponPoweronTime;
        [Abide.Guerilla.Tags.FieldAttribute("weapon power-off time:seconds", typeof(Single))]
        public Single WeaponPoweroffTime;
        [Abide.Guerilla.Tags.FieldAttribute("weapon power-on effect", typeof(TagReference))]
        public TagReference WeaponPoweronEffect;
        [Abide.Guerilla.Tags.FieldAttribute("weapon power-off effect", typeof(TagReference))]
        public TagReference WeaponPoweroffEffect;
        [Abide.Guerilla.Tags.FieldAttribute("age heat recovery penalty#how much the weapon\'s heat recovery is penalized as it " +
            "ages", typeof(Single))]
        public Single AgeHeatRecoveryPenalty;
        [Abide.Guerilla.Tags.FieldAttribute("age rate of fire penalty#how much the weapon\'s rate of fire is penalized as it ag" +
            "es", typeof(Single))]
        public Single AgeRateOfFirePenalty;
        [Abide.Guerilla.Tags.FieldAttribute("age misfire start:[0,1]#the age threshold when the weapon begins to misfire", typeof(Single))]
        public Single AgeMisfireStart;
        [Abide.Guerilla.Tags.FieldAttribute("age misfire chance:[0,1]#at age 1.0, the misfire chance per shot", typeof(Single))]
        public Single AgeMisfireChance;
        [Abide.Guerilla.Tags.FieldAttribute("pickup sound", typeof(TagReference))]
        public TagReference PickupSound;
        [Abide.Guerilla.Tags.FieldAttribute("zoom-in sound", typeof(TagReference))]
        public TagReference ZoominSound;
        [Abide.Guerilla.Tags.FieldAttribute("zoom-out sound", typeof(TagReference))]
        public TagReference ZoomoutSound;
        [Abide.Guerilla.Tags.FieldAttribute("active camo ding#how much to decrease active camo when a round is fired", typeof(Single))]
        public Single ActiveCamoDing;
        [Abide.Guerilla.Tags.FieldAttribute("active camo regrowth rate#how fast to increase active camo (per tick) when a roun" +
            "d is fired", typeof(Single))]
        public Single ActiveCamoRegrowthRate;
        [Abide.Guerilla.Tags.FieldAttribute("handle node#the node that get\'s attached to the unit\'s hand", typeof(StringId))]
        public StringId HandleNode;
        [Abide.Guerilla.Tags.FieldAttribute("weapon class", typeof(StringId))]
        public StringId WeaponClass;
        [Abide.Guerilla.Tags.FieldAttribute("weapon name", typeof(StringId))]
        public StringId WeaponName;
        [Abide.Guerilla.Tags.FieldAttribute("multiplayer weapon type", typeof(Int16))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(MultiplayerWeaponTypeOptions), false)]
        public Int16 MultiplayerWeaponType;
        [Abide.Guerilla.Tags.FieldAttribute("weapon type", typeof(Int16))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(WeaponTypeOptions), false)]
        public Int16 WeaponType;
        [Abide.Guerilla.Tags.FieldAttribute("tracking", typeof(WeaponTrackingStructBlock))]
        public WeaponTrackingStructBlock Tracking;
        [Abide.Guerilla.Tags.FieldAttribute("player interface", typeof(WeaponInterfaceStructBlock))]
        public WeaponInterfaceStructBlock PlayerInterface;
        [Abide.Guerilla.Tags.FieldAttribute("predicted resources", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("Predicted Resource Block", 2048, typeof(PredictedResourceBlock))]
        public TagBlock PredictedResources;
        [Abide.Guerilla.Tags.FieldAttribute("magazines", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("Magazines", 2, typeof(Magazines))]
        public TagBlock Magazines;
        [Abide.Guerilla.Tags.FieldAttribute("new triggers", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("Weapon Triggers", 2, typeof(WeaponTriggers))]
        public TagBlock NewTriggers;
        [Abide.Guerilla.Tags.FieldAttribute("barrels", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("Weapon Barrels", 2, typeof(WeaponBarrels))]
        public TagBlock Barrels;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(8)]
        public Byte[] EmptyString4;
        [Abide.Guerilla.Tags.FieldAttribute("max movement acceleration", typeof(Single))]
        public Single MaxMovementAcceleration;
        [Abide.Guerilla.Tags.FieldAttribute("max movement velocity", typeof(Single))]
        public Single MaxMovementVelocity;
        [Abide.Guerilla.Tags.FieldAttribute("max turning acceleration", typeof(Single))]
        public Single MaxTurningAcceleration;
        [Abide.Guerilla.Tags.FieldAttribute("max turning velocity", typeof(Single))]
        public Single MaxTurningVelocity;
        [Abide.Guerilla.Tags.FieldAttribute("deployed vehicle", typeof(TagReference))]
        public TagReference DeployedVehicle;
        [Abide.Guerilla.Tags.FieldAttribute("age effect", typeof(TagReference))]
        public TagReference AgeEffect;
        [Abide.Guerilla.Tags.FieldAttribute("aged weapon", typeof(TagReference))]
        public TagReference AgedWeapon;
        [Abide.Guerilla.Tags.FieldAttribute("first person weapon offset", typeof(Vector3))]
        public Vector3 FirstPersonWeaponOffset;
        [Abide.Guerilla.Tags.FieldAttribute("first person scope size", typeof(Vector2))]
        public Vector2 FirstPersonScopeSize;
        public enum FlagsOptions
        {
            VerticalHeatDisplay = 1,
            MutuallyExclusiveTriggers = 2,
            AttacksAutomaticallyOnBump = 4,
            MustBeReadied = 8,
            DoesntCountTowardMaximum = 16,
            AimAssistsOnlyWhenZoomed = 32,
            PreventsGrenadeThrowing = 64,
            MustBePickedUp = 128,
            HoldsTriggersWhenDropped = 256,
            PreventsMeleeAttack = 512,
            DetonatesWhenDropped = 1024,
            CannotFireAtMaximumAge = 2048,
            SecondaryTriggerOverridesGrenades = 4096,
            ObsoletedoesNotDepowerActiveCamoInMultilplayer = 8192,
            EnablesIntegratedNightVision = 16384,
            AisUseWeaponMeleeDamage = 32768,
            ForcesNoBinoculars = 65536,
            LoopFpFiringAnimation = 131072,
            PreventsSprinting = 262144,
            CannotFireWhileBoosting = 524288,
            PreventsDriving = 1048576,
            PreventsGunning = 2097152,
            CanBeDualWielded = 4194304,
            CanOnlyBeDualWielded = 8388608,
            MeleeOnly = 16777216,
            CantFireIfParentDead = 33554432,
            WeaponAgesWithEachKill = 67108864,
            WeaponUsesOldDualFireErrorCode = 134217728,
            PrimaryTriggerMeleeAttacks = 268435456,
            CannotBeUsedByPlayer = 536870912,
        }
        public enum SecondaryTriggerModeOptions
        {
            Normal = 0,
            SlavedToPrimary = 1,
            InhibitsPrimary = 2,
            LoadsAlterateAmmunition = 3,
            LoadsMultiplePrimaryAmmunition = 4,
        }
        public enum MeleeDamageReportingTypeOptions
        {
            TehGuardians11 = 0,
            FallingDamage = 1,
            GenericCollisionDamage = 2,
            GenericMeleeDamage = 3,
            GenericExplosion = 4,
            MagnumPistol = 5,
            PlasmaPistol = 6,
            Needler = 7,
            Smg = 8,
            PlasmaRifle = 9,
            BattleRifle = 10,
            Carbine = 11,
            Shotgun = 12,
            SniperRifle = 13,
            BeamRifle = 14,
            RocketLauncher = 15,
            FlakCannon = 16,
            BruteShot = 17,
            Disintegrator = 18,
            BrutePlasmaRifle = 19,
            EnergySword = 20,
            FragGrenade = 21,
            PlasmaGrenade = 22,
            FlagMeleeDamage = 23,
            BombMeleeDamage = 24,
            BombExplosionDamage = 25,
            BallMeleeDamage = 26,
            HumanTurret = 27,
            PlasmaTurret = 28,
            Banshee = 29,
            Ghost = 30,
            Mongoose = 31,
            Scorpion = 32,
            SpectreDriver = 33,
            SpectreGunner = 34,
            WarthogDriver = 35,
            WarthogGunner = 36,
            Wraith = 37,
            Tank = 38,
            SentinelBeam = 39,
            SentinelRpg = 40,
            Teleporter = 41,
        }
        public enum MovementPenalizedOptions
        {
            Always = 0,
            WhenZoomed = 1,
            WhenZoomedOrReloading = 2,
        }
        public enum MultiplayerWeaponTypeOptions
        {
            None = 0,
            CtfFlag = 1,
            OddballBall = 2,
            HeadhunterHead = 3,
            JuggernautPowerup = 4,
        }
        public enum WeaponTypeOptions
        {
            Undefined = 0,
            Shotgun = 1,
            Needler = 2,
            PlasmaPistol = 3,
            PlasmaRifle = 4,
            RocketLauncher = 5,
        }
    }
}
#pragma warning restore CS1591
