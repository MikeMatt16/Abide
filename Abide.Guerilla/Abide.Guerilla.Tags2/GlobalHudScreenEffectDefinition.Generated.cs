#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Abide.Guerilla.Tags2
{
    using Abide.Guerilla.Types;
    using Abide.HaloLibrary;
    using System;
    
    [Abide.Guerilla.Tags.FieldSetAttribute(352, 4)]
    public class GlobalHudScreenEffectDefinition
    {
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(4)]
        public Byte[] EmptyString;
        [Abide.Guerilla.Tags.FieldAttribute("flags", typeof(Int16))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
        public Int16 Flags;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(2)]
        public Byte[] EmptyString1;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(16)]
        public Byte[] EmptyString2;
        [Abide.Guerilla.Tags.FieldAttribute("mask (fullscreen)", typeof(TagReference))]
        public TagReference MaskFullscreen;
        [Abide.Guerilla.Tags.FieldAttribute("mask (splitscreen)", typeof(TagReference))]
        public TagReference MaskSplitscreen;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(8)]
        public Byte[] EmptyString3;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(20)]
        public Byte[] EmptyString4;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(24)]
        public Byte[] EmptyString5;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(8)]
        public Byte[] EmptyString6;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(24)]
        public Byte[] EmptyString7;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(20)]
        public Byte[] EmptyString8;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(24)]
        public Byte[] EmptyString9;
        [Abide.Guerilla.Tags.FieldAttribute("screen effect flags", typeof(Int32))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(ScreenEffectFlagsOptions), true)]
        public Int32 ScreenEffectFlags;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(32)]
        public Byte[] EmptyString10;
        [Abide.Guerilla.Tags.FieldAttribute("screen effect", typeof(TagReference))]
        public TagReference ScreenEffect;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(32)]
        public Byte[] EmptyString11;
        [Abide.Guerilla.Tags.FieldAttribute("screen effect flags", typeof(Int32))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(ScreenEffectFlagsOptions1), true)]
        public Int32 ScreenEffectFlags1;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(32)]
        public Byte[] EmptyString12;
        [Abide.Guerilla.Tags.FieldAttribute("screen effect", typeof(TagReference))]
        public TagReference ScreenEffect1;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(32)]
        public Byte[] EmptyString13;
        public enum FlagsOptions
        {
            OnlyWhenZoomed = 1,
            MirrorHorizontally = 2,
            MirrorVertically = 4,
            UseNewHotness = 8,
        }
        public enum ScreenEffectFlagsOptions
        {
            OnlyWhenZoomed = 1,
        }
        public enum ScreenEffectFlagsOptions1
        {
            OnlyWhenZoomed = 1,
        }
    }
}
#pragma warning restore CS1591
