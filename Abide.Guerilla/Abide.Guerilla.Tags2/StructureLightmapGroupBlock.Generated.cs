#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Abide.Guerilla.Tags2
{
    using Abide.Guerilla.Types;
    using Abide.HaloLibrary;
    using System;
    
    [Abide.Guerilla.Tags.FieldSetAttribute(156, 4)]
    public class StructureLightmapGroupBlock
    {
        [Abide.Guerilla.Tags.FieldAttribute("type", typeof(Int16))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(TypeOptions), false)]
        public Int16 Type;
        [Abide.Guerilla.Tags.FieldAttribute("flags", typeof(Int16))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
        public Int16 Flags;
        [Abide.Guerilla.Tags.FieldAttribute("structure checksum", typeof(Int32))]
        public Int32 StructureChecksum;
        [Abide.Guerilla.Tags.FieldAttribute("section palette", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("Structure Lightmap Palette Color Block", 128, typeof(StructureLightmapPaletteColorBlock))]
        public TagBlock SectionPalette;
        [Abide.Guerilla.Tags.FieldAttribute("writable palettes", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("Structure Lightmap Palette Color Block", 128, typeof(StructureLightmapPaletteColorBlock))]
        public TagBlock WritablePalettes;
        [Abide.Guerilla.Tags.FieldAttribute("bitmap group", typeof(TagReference))]
        public TagReference BitmapGroup;
        [Abide.Guerilla.Tags.FieldAttribute("clusters", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("Lightmap Geometry Section Block", 512, typeof(LightmapGeometrySectionBlock))]
        public TagBlock Clusters;
        [Abide.Guerilla.Tags.FieldAttribute("cluster render info", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("Lightmap Geometry Render Info Block", 1024, typeof(LightmapGeometryRenderInfoBlock))]
        public TagBlock ClusterRenderInfo;
        [Abide.Guerilla.Tags.FieldAttribute("poop definitions", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("Lightmap Geometry Section Block", 512, typeof(LightmapGeometrySectionBlock))]
        public TagBlock PoopDefinitions;
        [Abide.Guerilla.Tags.FieldAttribute("lighting environments*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("Structure Lightmap Lighting Environment Block", 1024, typeof(StructureLightmapLightingEnvironmentBlock))]
        public TagBlock LightingEnvironments;
        [Abide.Guerilla.Tags.FieldAttribute("geometry buckets", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("Lightmap Vertex Buffer Bucket Block", 1024, typeof(LightmapVertexBufferBucketBlock))]
        public TagBlock GeometryBuckets;
        [Abide.Guerilla.Tags.FieldAttribute("instance render info", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("Lightmap Geometry Render Info Block", 1024, typeof(LightmapGeometryRenderInfoBlock))]
        public TagBlock InstanceRenderInfo;
        [Abide.Guerilla.Tags.FieldAttribute("instance bucket refs", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("Lightmap Instance Bucket Reference Block", 2000, typeof(LightmapInstanceBucketReferenceBlock))]
        public TagBlock InstanceBucketRefs;
        [Abide.Guerilla.Tags.FieldAttribute("scenery object info", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("Lightmap Scenery Object Info Block", 2000, typeof(LightmapSceneryObjectInfoBlock))]
        public TagBlock SceneryObjectInfo;
        [Abide.Guerilla.Tags.FieldAttribute("scenery object bucket refs", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("Lightmap Instance Bucket Reference Block", 2000, typeof(LightmapInstanceBucketReferenceBlock))]
        public TagBlock SceneryObjectBucketRefs;
        public enum TypeOptions
        {
            Normal = 0,
        }
        public enum FlagsOptions
        {
            Unused = 1,
        }
    }
}
#pragma warning restore CS1591
