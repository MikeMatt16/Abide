#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Abide.Guerilla.Tags2
{
    using Abide.Guerilla.Types;
    using Abide.HaloLibrary;
    using System;
    
    [Abide.Guerilla.Tags.FieldSetAttribute(132, 4)]
    [Abide.Guerilla.Tags.TagGroupAttribute("planar_fog", "fog ", "����", typeof(PlanarFogBlock))]
    public class PlanarFogBlock
    {
        [Abide.Guerilla.Tags.FieldAttribute("flags", typeof(Int16))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
        public Int16 Flags;
        [Abide.Guerilla.Tags.FieldAttribute("priority", typeof(Int16))]
        public Int16 Priority;
        [Abide.Guerilla.Tags.FieldAttribute("global material name", typeof(StringId))]
        public StringId GlobalMaterialName;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(2)]
        public Byte[] EmptyString;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(2)]
        public Byte[] EmptyString1;
        [Abide.Guerilla.Tags.FieldAttribute("maximum density:[0,1]#planar fog density is clamped to this value", typeof(Single))]
        public Single MaximumDensity;
        [Abide.Guerilla.Tags.FieldAttribute("opaque distance:world units#the fog becomes opaque (maximum density) at this dist" +
            "ance from the viewer", typeof(Single))]
        public Single OpaqueDistance;
        [Abide.Guerilla.Tags.FieldAttribute("opaque depth:world units#the fog becomes opaque at this distance below fog plane", typeof(Single))]
        public Single OpaqueDepth;
        [Abide.Guerilla.Tags.FieldAttribute("eye offset scale:[-1,1]#negative numbers are bad, mmmkay?", typeof(Single))]
        public Single EyeOffsetScale;
        [Abide.Guerilla.Tags.FieldAttribute("color", typeof(ColorRgbF))]
        public ColorRgbF Color1;
        [Abide.Guerilla.Tags.FieldAttribute("patchy fog", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("Planar Fog Patchy Fog Block", 1, typeof(PlanarFogPatchyFogBlock))]
        public TagBlock PatchyFog;
        [Abide.Guerilla.Tags.FieldAttribute("background sound", typeof(TagReference))]
        public TagReference BackgroundSound;
        [Abide.Guerilla.Tags.FieldAttribute("sound environment", typeof(TagReference))]
        public TagReference SoundEnvironment;
        [Abide.Guerilla.Tags.FieldAttribute("environment damping factor#scales the surrounding background sound by this much", typeof(Single))]
        public Single EnvironmentDampingFactor;
        [Abide.Guerilla.Tags.FieldAttribute("background sound gain#scale for fog background sound", typeof(Single))]
        public Single BackgroundSoundGain;
        [Abide.Guerilla.Tags.FieldAttribute("enter sound", typeof(TagReference))]
        public TagReference EnterSound;
        [Abide.Guerilla.Tags.FieldAttribute("exit sound", typeof(TagReference))]
        public TagReference ExitSound;
        public enum FlagsOptions
        {
            RenderOnlySubmergedGeometry = 1,
            ExtendInfinitelyWhileVisible = 2,
            DontFloodfill = 4,
            AggressiveFloodfill = 8,
            DoNotRender = 16,
            DoNotRenderUnlessSubmerged = 32,
        }
    }
}
#pragma warning restore CS1591
