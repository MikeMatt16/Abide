#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Abide.Guerilla.Tags2
{
    using Abide.Guerilla.Types;
    using Abide.HaloLibrary;
    using System;
    
    [Abide.Guerilla.Tags.FieldSetAttribute(256, 4)]
    public class WeaponBarrels
    {
        [Abide.Guerilla.Tags.FieldAttribute("flags", typeof(Int32))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
        public Int32 Flags;
        [Abide.Guerilla.Tags.FieldAttribute("acceleration time:seconds#the continuous firing time it takes for the weapon to a" +
            "chieve its final rounds per second", typeof(Single))]
        public Single AccelerationTime;
        [Abide.Guerilla.Tags.FieldAttribute("deceleration time:seconds#the continuous idle time it takes for the weapon to ret" +
            "urn from its final rounds per second to its initial", typeof(Single))]
        public Single DecelerationTime;
        [Abide.Guerilla.Tags.FieldAttribute("barrel spin scale#scale the barrel spin speed by this amount", typeof(Single))]
        public Single BarrelSpinScale;
        [Abide.Guerilla.Tags.FieldAttribute("blurred rate of fire#a percentage between 0 and 1 which controls how soon in its " +
            "firing animation the weapon blurs", typeof(Single))]
        public Single BlurredRateOfFire;
        [Abide.Guerilla.Tags.FieldAttribute("fire recovery time:seconds#how long after a set of shots it takes before the barr" +
            "el can fire again", typeof(Single))]
        public Single FireRecoveryTime;
        [Abide.Guerilla.Tags.FieldAttribute("soft recovery fraction#how much of the recovery allows shots to be queued", typeof(Single))]
        public Single SoftRecoveryFraction;
        [Abide.Guerilla.Tags.FieldAttribute("magazine#the magazine from which this trigger draws its ammunition", typeof(Int16))]
        public Int16 Magazine;
        [Abide.Guerilla.Tags.FieldAttribute("rounds per shot#the number of rounds expended to create a single firing effect", typeof(Int16))]
        public Int16 RoundsPerShot;
        [Abide.Guerilla.Tags.FieldAttribute("minimum rounds loaded#the minimum number of rounds necessary to fire the weapon", typeof(Int16))]
        public Int16 MinimumRoundsLoaded;
        [Abide.Guerilla.Tags.FieldAttribute("rounds between tracers#the number of non-tracer rounds fired between tracers", typeof(Int16))]
        public Int16 RoundsBetweenTracers;
        [Abide.Guerilla.Tags.FieldAttribute("optional barrel marker name", typeof(StringId))]
        public StringId OptionalBarrelMarkerName;
        [Abide.Guerilla.Tags.FieldAttribute("prediction type", typeof(Int16))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(PredictionTypeOptions), false)]
        public Int16 PredictionType;
        [Abide.Guerilla.Tags.FieldAttribute("firing noise#how loud this weapon appears to the AI", typeof(Int16))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(FiringNoise), false)]
        public Int16 FiringNoise1;
        [Abide.Guerilla.Tags.FieldAttribute("acceleration time:seconds#the continuous firing time it takes for the weapon to a" +
            "chieve its final error", typeof(Single))]
        public Single AccelerationTime1;
        [Abide.Guerilla.Tags.FieldAttribute("deceleration time:seconds#the continuous idle time it takes for the weapon to ret" +
            "urn to its initial error", typeof(Single))]
        public Single DecelerationTime1;
        [Abide.Guerilla.Tags.FieldAttribute("acceleration time:seconds#the continuous firing time it takes for the weapon to a" +
            "chieve its final error", typeof(Single))]
        public Single AccelerationTime2;
        [Abide.Guerilla.Tags.FieldAttribute("deceleration time:seconds#the continuous idle time it takes for the weapon to ret" +
            "urn to its initial error", typeof(Single))]
        public Single DecelerationTime2;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(8)]
        public Byte[] EmptyString;
        [Abide.Guerilla.Tags.FieldAttribute("minimum error:degrees", typeof(Single))]
        public Single MinimumError;
        [Abide.Guerilla.Tags.FieldAttribute("dual wield damage scale", typeof(Single))]
        public Single DualWieldDamageScale;
        [Abide.Guerilla.Tags.FieldAttribute("distribution function", typeof(Int16))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(DistributionFunctionOptions), false)]
        public Int16 DistributionFunction;
        [Abide.Guerilla.Tags.FieldAttribute("projectiles per shot", typeof(Int16))]
        public Int16 ProjectilesPerShot;
        [Abide.Guerilla.Tags.FieldAttribute("distribution angle:degrees", typeof(Single))]
        public Single DistributionAngle;
        [Abide.Guerilla.Tags.FieldAttribute("minimum error:degrees", typeof(Single))]
        public Single MinimumError1;
        [Abide.Guerilla.Tags.FieldAttribute("first person offset:world units#+x is forward, +z is up, +y is left", typeof(Vector3))]
        public Vector3 FirstPersonOffset;
        [Abide.Guerilla.Tags.FieldAttribute("damage effect reporting type", typeof(Byte))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(DamageEffectReportingTypeOptions), false)]
        public Byte DamageEffectReportingType;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(3)]
        public Byte[] EmptyString1;
        [Abide.Guerilla.Tags.FieldAttribute("projectile", typeof(TagReference))]
        public TagReference Projectile1;
        [Abide.Guerilla.Tags.FieldAttribute("eh", typeof(WeaponBarrelDamageEffectStructBlock))]
        public WeaponBarrelDamageEffectStructBlock Eh;
        [Abide.Guerilla.Tags.FieldAttribute("ejection port recovery time#the amount of time (in seconds) it takes for the ejec" +
            "tion port to transition from 1.0 (open) to 0.0 (closed) after a shot has been fi" +
            "red", typeof(Single))]
        public Single EjectionPortRecoveryTime;
        [Abide.Guerilla.Tags.FieldAttribute("illumination recovery time#the amount of time (in seconds) it takes the illuminat" +
            "ion function to transition from 1.0 (bright) to 0.0 (dark) after a shot has been" +
            " fired", typeof(Single))]
        public Single IlluminationRecoveryTime;
        [Abide.Guerilla.Tags.FieldAttribute("heat generated per round:[0,1]#the amount of heat generated each time the trigger" +
            " is fired", typeof(Single))]
        public Single HeatGeneratedPerRound;
        [Abide.Guerilla.Tags.FieldAttribute("age generated per round:[0,1]#the amount the weapon ages each time the trigger is" +
            " fired", typeof(Single))]
        public Single AgeGeneratedPerRound;
        [Abide.Guerilla.Tags.FieldAttribute("overload time:seconds#the next trigger fires this often while holding down this t" +
            "rigger", typeof(Single))]
        public Single OverloadTime;
        [Abide.Guerilla.Tags.FieldAttribute("acceleration time:seconds#the continuous firing time it takes for the weapon to a" +
            "chieve its final angle change per shot", typeof(Single))]
        public Single AccelerationTime3;
        [Abide.Guerilla.Tags.FieldAttribute("deceleration time:seconds#the continuous idle time it takes for the weapon to ret" +
            "urn to its initial angle change per shot", typeof(Single))]
        public Single DecelerationTime3;
        [Abide.Guerilla.Tags.FieldAttribute("angle change function#function used to scale between initial and final angle chan" +
            "ge per shot", typeof(Int16))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(AngleChangeFunction), false)]
        public Int16 AngleChangeFunction1;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(2)]
        public Byte[] EmptyString2;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(8)]
        public Byte[] EmptyString3;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(24)]
        public Byte[] EmptyString4;
        [Abide.Guerilla.Tags.FieldAttribute("firing effects#firing effects determine what happens when this trigger is fired", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("Barrel Firing Effect Block", 3, typeof(BarrelFiringEffectBlock))]
        public TagBlock FiringEffects;
        public enum FlagsOptions
        {
            TracksFiredProjectile = 1,
            RandomFiringEffects = 2,
            CanFireWithPartialAmmo = 4,
            ProjectilesUseWeaponOrigin = 8,
            EjectsDuringChamber = 16,
            UseErrorWhenUnzoomed = 32,
            ProjectileVectorCannotBeAdjusted = 64,
            ProjectilesHaveIdenticalError = 128,
            ProjectilesFireParallel = 256,
            CantFireWhenOthersFiring = 512,
            CantFireWhenOthersRecovering = 1024,
            DontClearFireBitAfterRecovering = 2048,
            StaggerFireAcrossMultipleMarkers = 4096,
            FiresLockedProjectiles = 8192,
        }
        public enum PredictionTypeOptions
        {
            None = 0,
            Continuous = 1,
            Instant = 2,
        }
        public enum FiringNoise
        {
            Silent = 0,
            Medium = 1,
            Loud = 2,
            Shout = 3,
            Quiet = 4,
        }
        public enum DistributionFunctionOptions
        {
            Point = 0,
            HorizontalFan = 1,
        }
        public enum DamageEffectReportingTypeOptions
        {
            TehGuardians11 = 0,
            FallingDamage = 1,
            GenericCollisionDamage = 2,
            GenericMeleeDamage = 3,
            GenericExplosion = 4,
            MagnumPistol = 5,
            PlasmaPistol = 6,
            Needler = 7,
            Smg = 8,
            PlasmaRifle = 9,
            BattleRifle = 10,
            Carbine = 11,
            Shotgun = 12,
            SniperRifle = 13,
            BeamRifle = 14,
            RocketLauncher = 15,
            FlakCannon = 16,
            BruteShot = 17,
            Disintegrator = 18,
            BrutePlasmaRifle = 19,
            EnergySword = 20,
            FragGrenade = 21,
            PlasmaGrenade = 22,
            FlagMeleeDamage = 23,
            BombMeleeDamage = 24,
            BombExplosionDamage = 25,
            BallMeleeDamage = 26,
            HumanTurret = 27,
            PlasmaTurret = 28,
            Banshee = 29,
            Ghost = 30,
            Mongoose = 31,
            Scorpion = 32,
            SpectreDriver = 33,
            SpectreGunner = 34,
            WarthogDriver = 35,
            WarthogGunner = 36,
            Wraith = 37,
            Tank = 38,
            SentinelBeam = 39,
            SentinelRpg = 40,
            Teleporter = 41,
        }
        public enum AngleChangeFunction
        {
            Linear = 0,
            Early = 1,
            VeryEarly = 2,
            Late = 3,
            VeryLate = 4,
            Cosine = 5,
            One = 6,
            Zero = 7,
        }
    }
}
#pragma warning restore CS1591
