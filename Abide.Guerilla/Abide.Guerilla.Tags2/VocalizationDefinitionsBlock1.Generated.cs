#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Abide.Guerilla.Tags2
{
    using Abide.Guerilla.Types;
    using Abide.HaloLibrary;
    using System;
    
    [Abide.Guerilla.Tags.FieldSetAttribute(104, 4)]
    public class VocalizationDefinitionsBlock1
    {
        [Abide.Guerilla.Tags.FieldAttribute("vocalization^", typeof(StringId))]
        public StringId Vocalization;
        [Abide.Guerilla.Tags.FieldAttribute("parent vocalization", typeof(StringId))]
        public StringId ParentVocalization;
        [Abide.Guerilla.Tags.FieldAttribute("parent index*", typeof(Int16))]
        public Int16 ParentIndex;
        [Abide.Guerilla.Tags.FieldAttribute("priority", typeof(Int16))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(PriorityOptions), false)]
        public Int16 Priority;
        [Abide.Guerilla.Tags.FieldAttribute("flags", typeof(Int32))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
        public Int32 Flags;
        [Abide.Guerilla.Tags.FieldAttribute("glance behavior#how does the speaker of this vocalization direct his gaze?", typeof(Int16))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(GlanceBehavior), false)]
        public Int16 GlanceBehavior1;
        [Abide.Guerilla.Tags.FieldAttribute("glance recipient behavior#how does someone who hears me behave?", typeof(Int16))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(GlanceRecipientBehavior), false)]
        public Int16 GlanceRecipientBehavior1;
        [Abide.Guerilla.Tags.FieldAttribute("perception type", typeof(Int16))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(PerceptionTypeOptions), false)]
        public Int16 PerceptionType;
        [Abide.Guerilla.Tags.FieldAttribute("max combat status", typeof(Int16))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(MaxCombatStatusOptions), false)]
        public Int16 MaxCombatStatus;
        [Abide.Guerilla.Tags.FieldAttribute("animation impulse", typeof(Int16))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(AnimationImpulseOptions), false)]
        public Int16 AnimationImpulse;
        [Abide.Guerilla.Tags.FieldAttribute("overlap priority", typeof(Int16))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(OverlapPriorityOptions), false)]
        public Int16 OverlapPriority;
        [Abide.Guerilla.Tags.FieldAttribute("sound repetition delay:minutes#Minimum delay time between playing the same permut" +
            "ation", typeof(Single))]
        public Single SoundRepetitionDelay;
        [Abide.Guerilla.Tags.FieldAttribute("allowable queue delay:seconds#How long to wait to actually start the vocalization" +
            "", typeof(Single))]
        public Single AllowableQueueDelay;
        [Abide.Guerilla.Tags.FieldAttribute("pre voc. delay:seconds#How long to wait to actually start the vocalization", typeof(Single))]
        public Single PreVocDelay;
        [Abide.Guerilla.Tags.FieldAttribute("notification delay:seconds#How long into the vocalization the AI should be notifi" +
            "ed", typeof(Single))]
        public Single NotificationDelay;
        [Abide.Guerilla.Tags.FieldAttribute("post voc. delay:seconds#How long speech is suppressed in the speaking unit after " +
            "vocalizing", typeof(Single))]
        public Single PostVocDelay;
        [Abide.Guerilla.Tags.FieldAttribute("repeat delay:seconds#How long before the same vocalization can be repeated", typeof(Single))]
        public Single RepeatDelay;
        [Abide.Guerilla.Tags.FieldAttribute("weight:[0-1]#Inherent weight of this vocalization", typeof(Single))]
        public Single Weight;
        [Abide.Guerilla.Tags.FieldAttribute("speaker freeze time#speaker won\'t move for the given amount of time", typeof(Single))]
        public Single SpeakerFreezeTime;
        [Abide.Guerilla.Tags.FieldAttribute("listener freeze time#listener won\'t move for the given amount of time (from start" +
            " of vocalization)", typeof(Single))]
        public Single ListenerFreezeTime;
        [Abide.Guerilla.Tags.FieldAttribute("speaker emotion", typeof(Int16))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(SpeakerEmotionOptions), false)]
        public Int16 SpeakerEmotion;
        [Abide.Guerilla.Tags.FieldAttribute("listener emotion", typeof(Int16))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(ListenerEmotionOptions), false)]
        public Int16 ListenerEmotion;
        [Abide.Guerilla.Tags.FieldAttribute("player skip fraction", typeof(Single))]
        public Single PlayerSkipFraction;
        [Abide.Guerilla.Tags.FieldAttribute("skip fraction", typeof(Single))]
        public Single SkipFraction;
        [Abide.Guerilla.Tags.FieldAttribute("Sample line", typeof(StringId))]
        public StringId SampleLine;
        [Abide.Guerilla.Tags.FieldAttribute("reponses", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("Response Block", 20, typeof(ResponseBlock))]
        public TagBlock Reponses;
        [Abide.Guerilla.Tags.FieldAttribute("children", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("Vocalization Definitions Block 2", 500, typeof(VocalizationDefinitionsBlock2))]
        public TagBlock Children;
        public enum PriorityOptions
        {
            None = 0,
            Recall = 1,
            Idle = 2,
            Comment = 3,
            IdleResponse = 4,
            Postcombat = 5,
            Combat = 6,
            Status = 7,
            Respond = 8,
            Warn = 9,
            Act = 10,
            React = 11,
            Involuntary = 12,
            Scream = 13,
            Scripted = 14,
            Death = 15,
        }
        public enum FlagsOptions
        {
            Immediate = 1,
            Interrupt = 2,
            CancelLowPriority = 4,
        }
        public enum GlanceBehavior
        {
            None = 0,
            GlanceSubjectShort = 1,
            GlanceSubjectLong = 2,
            GlanceCauseShort = 3,
            GlanceCauseLong = 4,
            GlanceFriendShort = 5,
            GlanceFriendLong = 6,
        }
        public enum GlanceRecipientBehavior
        {
            None = 0,
            GlanceSubjectShort = 1,
            GlanceSubjectLong = 2,
            GlanceCauseShort = 3,
            GlanceCauseLong = 4,
            GlanceFriendShort = 5,
            GlanceFriendLong = 6,
        }
        public enum PerceptionTypeOptions
        {
            None = 0,
            Speaker = 1,
            Listener = 2,
        }
        public enum MaxCombatStatusOptions
        {
            Asleep = 0,
            Idle = 1,
            Alert = 2,
            Active = 3,
            Uninspected = 4,
            Definite = 5,
            Certain = 6,
            Visible = 7,
            ClearLos = 8,
            Dangerous = 9,
        }
        public enum AnimationImpulseOptions
        {
            None = 0,
            Shakefist = 1,
            Cheer = 2,
            Surprisefront = 3,
            Surpriseback = 4,
            Taunt = 5,
            Brace = 6,
            Point = 7,
            Hold = 8,
            Wave = 9,
            Advance = 10,
            Fallback = 11,
        }
        public enum OverlapPriorityOptions
        {
            None = 0,
            Recall = 1,
            Idle = 2,
            Comment = 3,
            IdleResponse = 4,
            Postcombat = 5,
            Combat = 6,
            Status = 7,
            Respond = 8,
            Warn = 9,
            Act = 10,
            React = 11,
            Involuntary = 12,
            Scream = 13,
            Scripted = 14,
            Death = 15,
        }
        public enum SpeakerEmotionOptions
        {
            None = 0,
            Asleep = 1,
            Amorous = 2,
            Happy = 3,
            Inquisitive = 4,
            Repulsed = 5,
            Disappointed = 6,
            Shocked = 7,
            Scared = 8,
            Arrogant = 9,
            Annoyed = 10,
            Angry = 11,
            Pensive = 12,
            Pain = 13,
        }
        public enum ListenerEmotionOptions
        {
            None = 0,
            Asleep = 1,
            Amorous = 2,
            Happy = 3,
            Inquisitive = 4,
            Repulsed = 5,
            Disappointed = 6,
            Shocked = 7,
            Scared = 8,
            Arrogant = 9,
            Annoyed = 10,
            Angry = 11,
            Pensive = 12,
            Pain = 13,
        }
    }
}
#pragma warning restore CS1591
