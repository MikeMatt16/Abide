#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Abide.Guerilla.Tags2
{
    using Abide.Guerilla.Types;
    using Abide.HaloLibrary;
    using System;
    
    [Abide.Guerilla.Tags.FieldSetAttribute(104, 4)]
    public class PhantomTypesBlock
    {
        [Abide.Guerilla.Tags.FieldAttribute("flags", typeof(Int32))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
        public Int32 Flags;
        [Abide.Guerilla.Tags.FieldAttribute("minimum size", typeof(Byte))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(MinimumSizeOptions), false)]
        public Byte MinimumSize;
        [Abide.Guerilla.Tags.FieldAttribute("maximum size", typeof(Byte))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(MaximumSizeOptions), false)]
        public Byte MaximumSize;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(2)]
        public Byte[] EmptyString;
        [Abide.Guerilla.Tags.FieldAttribute("marker name#you don\'t need this if you\'re just generating effects.  If empty it d" +
            "efaults to the up of the object", typeof(StringId))]
        public StringId MarkerName;
        [Abide.Guerilla.Tags.FieldAttribute("alignment marker name#you don\'t need this if you\'re just generating effects.  If " +
            "empty it defaults to \"marker name\"", typeof(StringId))]
        public StringId AlignmentMarkerName;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(8)]
        public Byte[] EmptyString1;
        [Abide.Guerilla.Tags.FieldAttribute("hookes law e#0 if you don\'t want this to behave like spring.  1 is a good startin" +
            "g point if you do.", typeof(Single))]
        public Single HookesLawE;
        [Abide.Guerilla.Tags.FieldAttribute("linear dead radius#radius from linear motion origin in which acceleration is dead" +
            ".", typeof(Single))]
        public Single LinearDeadRadius;
        [Abide.Guerilla.Tags.FieldAttribute("center acc", typeof(Single))]
        public Single CenterAcc;
        [Abide.Guerilla.Tags.FieldAttribute("center max vel", typeof(Single))]
        public Single CenterMaxVel;
        [Abide.Guerilla.Tags.FieldAttribute("axis acc", typeof(Single))]
        public Single AxisAcc;
        [Abide.Guerilla.Tags.FieldAttribute("axis max vel", typeof(Single))]
        public Single AxisMaxVel;
        [Abide.Guerilla.Tags.FieldAttribute("direction acc", typeof(Single))]
        public Single DirectionAcc;
        [Abide.Guerilla.Tags.FieldAttribute("direction max vel", typeof(Single))]
        public Single DirectionMaxVel;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(28)]
        public Byte[] EmptyString2;
        [Abide.Guerilla.Tags.FieldAttribute("alignment hookes law e#0 if you don\'t want this to behave like spring.  1 is a go" +
            "od starting point if you do.", typeof(Single))]
        public Single AlignmentHookesLawE;
        [Abide.Guerilla.Tags.FieldAttribute("alignment acc", typeof(Single))]
        public Single AlignmentAcc;
        [Abide.Guerilla.Tags.FieldAttribute("alignment max vel", typeof(Single))]
        public Single AlignmentMaxVel;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(8)]
        public Byte[] EmptyString3;
        public enum FlagsOptions
        {
            GeneratesEffects = 1,
            UseAccAsForce = 2,
            NegatesGravity = 4,
            IgnoresPlayers = 8,
            IgnoresNonplayers = 16,
            IgnoresBipeds = 32,
            IgnoresVehicles = 64,
            IgnoresWeapons = 128,
            IgnoresEquipment = 256,
            IgnoresGarbage = 512,
            IgnoresProjectiles = 1024,
            IgnoresScenery = 2048,
            IgnoresMachines = 4096,
            IgnoresControls = 8192,
            IgnoresLightFixtures = 16384,
            IgnoresSoundScenery = 32768,
            IgnoresCrates = 65536,
            IgnoresCreatures = 131072,
            EmptyString = 262144,
            EmptyString1 = 524288,
            EmptyString2 = 1048576,
            EmptyString3 = 2097152,
            EmptyString4 = 4194304,
            EmptyString5 = 8388608,
            LocalizesPhysics = 16777216,
            DisableLinearDamping = 33554432,
            DisableAngularDamping = 67108864,
            IgnoresDeadBipeds = 134217728,
        }
        public enum MinimumSizeOptions
        {
            Default = 0,
            Tiny = 1,
            Small = 2,
            Medium = 3,
            Large = 4,
            Huge = 5,
            ExtraHuge = 6,
        }
        public enum MaximumSizeOptions
        {
            Default = 0,
            Tiny = 1,
            Small = 2,
            Medium = 3,
            Large = 4,
            Huge = 5,
            ExtraHuge = 6,
        }
    }
}
#pragma warning restore CS1591
