#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Abide.Guerilla.Tags2
{
    using Abide.Guerilla.Types;
    using Abide.HaloLibrary;
    using System;
    
    [Abide.Guerilla.Tags.FieldSetAttribute(272, 4)]
    [Abide.Guerilla.Tags.TagGroupAttribute("light", "ligh", "����", typeof(LightBlock))]
    public class LightBlock
    {
        [Abide.Guerilla.Tags.FieldAttribute("flags", typeof(Int32))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
        public Int32 Flags;
        [Abide.Guerilla.Tags.FieldAttribute("type", typeof(Int16))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(TypeOptions), false)]
        public Int16 Type;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(2)]
        public Byte[] EmptyString1;
        [Abide.Guerilla.Tags.FieldAttribute("shadow quality bias#larger positive numbers improve quality, larger negative numb" +
            "ers improve speed", typeof(Single))]
        public Single ShadowQualityBias;
        [Abide.Guerilla.Tags.FieldAttribute("shadow tap bias#the less taps you use, the faster the light (but edges can look w" +
            "orse)", typeof(Int16))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(ShadowTapBias), false)]
        public Int16 ShadowTapBias1;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(2)]
        public Byte[] EmptyString2;
        [Abide.Guerilla.Tags.FieldAttribute("radius:world units#the radius at which illumination falls off to zero", typeof(Single))]
        public Single Radius;
        [Abide.Guerilla.Tags.FieldAttribute("specular radius:world units#the radius at which specular highlights fall off to z" +
            "ero (if zero, same as maximum radius)", typeof(Single))]
        public Single SpecularRadius;
        [Abide.Guerilla.Tags.FieldAttribute("near width:world units#width of the frustum light at its near plane", typeof(Single))]
        public Single NearWidth;
        [Abide.Guerilla.Tags.FieldAttribute("height stretch#how much the gel is stretched vertically (0.0 or 1.0 = aspect rati" +
            "o same as gel)", typeof(Single))]
        public Single HeightStretch;
        [Abide.Guerilla.Tags.FieldAttribute("field of view:degrees#horizontal angle that the frustum light covers (0.0 = no sp" +
            "read, a parallel beam)", typeof(Single))]
        public Single FieldOfView;
        [Abide.Guerilla.Tags.FieldAttribute("falloff distance#distance from near plane to where the light falloff starts", typeof(Single))]
        public Single FalloffDistance;
        [Abide.Guerilla.Tags.FieldAttribute("cutoff distance#distance from near plane to where illumination falls off to zero", typeof(Single))]
        public Single CutoffDistance;
        [Abide.Guerilla.Tags.FieldAttribute("interpolation flags", typeof(Int32))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(InterpolationFlagsOptions), true)]
        public Int32 InterpolationFlags;
        [Abide.Guerilla.Tags.FieldAttribute("specular lower bound", typeof(ColorRgbF))]
        public ColorRgbF SpecularLowerBound;
        [Abide.Guerilla.Tags.FieldAttribute("specular upper bound", typeof(ColorRgbF))]
        public ColorRgbF SpecularUpperBound;
        [Abide.Guerilla.Tags.FieldAttribute("diffuse lower bound", typeof(ColorRgbF))]
        public ColorRgbF DiffuseLowerBound;
        [Abide.Guerilla.Tags.FieldAttribute("diffuse upper bound", typeof(ColorRgbF))]
        public ColorRgbF DiffuseUpperBound;
        [Abide.Guerilla.Tags.FieldAttribute("gel map#must be a cubemap for spherical light and a 2d texture for frustum light", typeof(TagReference))]
        public TagReference GelMap;
        [Abide.Guerilla.Tags.FieldAttribute("specular mask", typeof(Int16))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(SpecularMaskOptions), false)]
        public Int16 SpecularMask;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(2)]
        public Byte[] EmptyString8;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(4)]
        public Byte[] EmptyString10;
        [Abide.Guerilla.Tags.FieldAttribute("falloff function", typeof(Int16))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(FalloffFunctionOptions), false)]
        public Int16 FalloffFunction1;
        [Abide.Guerilla.Tags.FieldAttribute("diffuse contrast", typeof(Int16))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(DiffuseContrastOptions), false)]
        public Int16 DiffuseContrast;
        [Abide.Guerilla.Tags.FieldAttribute("specular contrast", typeof(Int16))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(SpecularContrastOptions), false)]
        public Int16 SpecularContrast;
        [Abide.Guerilla.Tags.FieldAttribute("falloff geometry", typeof(Int16))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(FalloffGeometryOptions), false)]
        public Int16 FalloffGeometry;
        [Abide.Guerilla.Tags.FieldAttribute("lens flare", typeof(TagReference))]
        public TagReference LensFlare1;
        [Abide.Guerilla.Tags.FieldAttribute("bounding radius:world units#used to generate a bounding radius for lensflare-only" +
            " lights", typeof(Single))]
        public Single BoundingRadius;
        [Abide.Guerilla.Tags.FieldAttribute("light volume", typeof(TagReference))]
        public TagReference LightVolume;
        [Abide.Guerilla.Tags.FieldAttribute("default lightmap setting", typeof(Int16))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(DefaultLightmapSettingOptions), false)]
        public Int16 DefaultLightmapSetting;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(2)]
        public Byte[] EmptyString18;
        [Abide.Guerilla.Tags.FieldAttribute("lightmap half life", typeof(Single))]
        public Single LightmapHalfLife;
        [Abide.Guerilla.Tags.FieldAttribute("lightmap light scale", typeof(Single))]
        public Single LightmapLightScale;
        [Abide.Guerilla.Tags.FieldAttribute("duration:seconds#the light will last this long when created by an effect", typeof(Single))]
        public Single Duration;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(2)]
        public Byte[] EmptyString20;
        [Abide.Guerilla.Tags.FieldAttribute("falloff function#the scale of the light will diminish over time according to this" +
            " function", typeof(Int16))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(FalloffFunction), false)]
        public Int16 FalloffFunction2;
        [Abide.Guerilla.Tags.FieldAttribute("illumination fade", typeof(Int16))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(IlluminationFadeOptions), false)]
        public Int16 IlluminationFade;
        [Abide.Guerilla.Tags.FieldAttribute("shadow fade", typeof(Int16))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(ShadowFadeOptions), false)]
        public Int16 ShadowFade;
        [Abide.Guerilla.Tags.FieldAttribute("specular fade", typeof(Int16))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(SpecularFadeOptions), false)]
        public Int16 SpecularFade;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(2)]
        public Byte[] EmptyString22;
        [Abide.Guerilla.Tags.FieldAttribute("flags", typeof(Int32))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions1), true)]
        public Int32 Flags1;
        [Abide.Guerilla.Tags.FieldAttribute("brightness animation", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("Brightness Animation", 1, typeof(LightBrightnessAnimationBlock))]
        public TagBlock BrightnessAnimation;
        [Abide.Guerilla.Tags.FieldAttribute("color animation", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("Color Animation", 1, typeof(LightColorAnimationBlock))]
        public TagBlock ColorAnimation;
        [Abide.Guerilla.Tags.FieldAttribute("gel animation", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("Gel Animation", 1, typeof(LightGelAnimationBlock))]
        public TagBlock GelAnimation;
        [Abide.Guerilla.Tags.FieldAttribute("shader", typeof(TagReference))]
        public TagReference Shader1;
        public enum FlagsOptions
        {
            NoIllumination = 1,
            NoSpecular = 2,
            ForceCastEnvironmentShadowsThroughPortals = 4,
            NoShadow = 8,
            ForceFrustumVisibilityOnSmallLight = 16,
            OnlyRenderInFirstPerson = 32,
            OnlyRenderInThirdPerson = 64,
            DontFadeWhenInvisible = 128,
            MultiplayerOverride = 256,
            AnimatedGel = 512,
            OnlyInDynamicEnvmap = 1024,
            IgnoreParentObject = 2048,
            DontShadowParent = 4096,
            IgnoreAllParents = 8192,
            MarchMilestoneHack = 16384,
            ForceLightInsideWorld = 32768,
            EnvironmentDoesntCastStencilShadows = 65536,
            ObjectsDontCastStencilShadows = 131072,
            FirstPersonFromCamera = 262144,
            TextureCameraGel = 524288,
            LightFramerateKiller = 1048576,
            AllowedInSplitScreen = 2097152,
            OnlyOnParentBipeds = 4194304,
        }
        public enum TypeOptions
        {
            Sphere = 0,
            Orthogonal = 1,
            Projective = 2,
            Pyramid = 3,
        }
        public enum ShadowTapBias
        {
            _3Tap = 0,
            Unused = 1,
            _1Tap = 2,
        }
        public enum InterpolationFlagsOptions
        {
            BlendInHsv = 1,
            MoreColors = 2,
        }
        public enum SpecularMaskOptions
        {
            Default = 0,
            NoneNoMask = 1,
            GelAlpha = 2,
            GelColor = 3,
        }
        public enum FalloffFunctionOptions
        {
            Default = 0,
            Narrow = 1,
            Broad = 2,
            VeryBroad = 3,
        }
        public enum DiffuseContrastOptions
        {
            DefaultLinear = 0,
            High = 1,
            Low = 2,
            VeryLow = 3,
        }
        public enum SpecularContrastOptions
        {
            DefaultOne = 0,
            HighLinear = 1,
            Low = 2,
            VeryLow = 3,
        }
        public enum FalloffGeometryOptions
        {
            Default = 0,
            Directional = 1,
            Spherical = 2,
        }
        public enum DefaultLightmapSettingOptions
        {
            DynamicOnly = 0,
            DynamicWithLightmaps = 1,
            LightmapsOnly = 2,
        }
        public enum FalloffFunction
        {
            Linear = 0,
            Late = 1,
            VeryLate = 2,
            Early = 3,
            VeryEarly = 4,
            Cosine = 5,
            Zero = 6,
            One = 7,
        }
        public enum IlluminationFadeOptions
        {
            FadeVeryFar = 0,
            FadeFar = 1,
            FadeMedium = 2,
            FadeClose = 3,
            FadeVeryClose = 4,
        }
        public enum ShadowFadeOptions
        {
            FadeVeryFar = 0,
            FadeFar = 1,
            FadeMedium = 2,
            FadeClose = 3,
            FadeVeryClose = 4,
        }
        public enum SpecularFadeOptions
        {
            FadeVeryFar = 0,
            FadeFar = 1,
            FadeMedium = 2,
            FadeClose = 3,
            FadeVeryClose = 4,
        }
        public enum FlagsOptions1
        {
            Synchronized = 1,
        }
    }
}
#pragma warning restore CS1591
