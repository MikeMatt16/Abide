#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Abide.Guerilla.Tags2
{
    using Abide.Guerilla.Types;
    using Abide.HaloLibrary;
    using System;
    
    [Abide.Guerilla.Tags.FieldSetAttribute(132, 4)]
    public class PlayerControlBlock
    {
        [Abide.Guerilla.Tags.FieldAttribute("magnetism friction#how much the crosshair slows over enemies", typeof(Single))]
        public Single MagnetismFriction;
        [Abide.Guerilla.Tags.FieldAttribute("magnetism adhesion#how much the crosshair sticks to enemies", typeof(Single))]
        public Single MagnetismAdhesion;
        [Abide.Guerilla.Tags.FieldAttribute("inconsequential target scale#scales magnetism level for inconsequential targets l" +
            "ike infection forms", typeof(Single))]
        public Single InconsequentialTargetScale;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(12)]
        public Byte[] EmptyString;
        [Abide.Guerilla.Tags.FieldAttribute("crosshair location#-1..1, 0 is middle of the screen", typeof(Vector2))]
        public Vector2 CrosshairLocation;
        [Abide.Guerilla.Tags.FieldAttribute("seconds to start#how long you must be pegged before you start sprinting", typeof(Single))]
        public Single SecondsToStart;
        [Abide.Guerilla.Tags.FieldAttribute("seconds to full speed#how long you must sprint before you reach top speed", typeof(Single))]
        public Single SecondsToFullSpeed;
        [Abide.Guerilla.Tags.FieldAttribute("decay rate#how fast being unpegged decays the timer (seconds per second)", typeof(Single))]
        public Single DecayRate;
        [Abide.Guerilla.Tags.FieldAttribute("full speed multiplier#how much faster we actually go when at full sprint", typeof(Single))]
        public Single FullSpeedMultiplier;
        [Abide.Guerilla.Tags.FieldAttribute("pegged magnitude#how far the stick needs to be pressed before being considered pe" +
            "gged", typeof(Single))]
        public Single PeggedMagnitude;
        [Abide.Guerilla.Tags.FieldAttribute("pegged angular threshold#how far off straight up (in degrees) we consider pegged", typeof(Single))]
        public Single PeggedAngularThreshold;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(8)]
        public Byte[] EmptyString1;
        [Abide.Guerilla.Tags.FieldAttribute("look default pitch rate:degrees", typeof(Single))]
        public Single LookDefaultPitchRate;
        [Abide.Guerilla.Tags.FieldAttribute("look default yaw rate:degrees", typeof(Single))]
        public Single LookDefaultYawRate;
        [Abide.Guerilla.Tags.FieldAttribute("look peg threshold [0,1]#magnitude of yaw for pegged acceleration to kick in", typeof(Single))]
        public Single LookPegThreshold01;
        [Abide.Guerilla.Tags.FieldAttribute("look yaw acceleration time:seconds#time for a pegged look to reach maximum effect" +
            "", typeof(Single))]
        public Single LookYawAccelerationTime;
        [Abide.Guerilla.Tags.FieldAttribute("look yaw acceleration scale#maximum effect of a pegged look (scales last value in" +
            " the look function below)", typeof(Single))]
        public Single LookYawAccelerationScale;
        [Abide.Guerilla.Tags.FieldAttribute("look pitch acceleration time:seconds#time for a pegged look to reach maximum effe" +
            "ct", typeof(Single))]
        public Single LookPitchAccelerationTime;
        [Abide.Guerilla.Tags.FieldAttribute("look pitch acceleration scale#maximum effect of a pegged look (scales last value " +
            "in the look function below)", typeof(Single))]
        public Single LookPitchAccelerationScale;
        [Abide.Guerilla.Tags.FieldAttribute("look autolevelling scale#1 is fast, 0 is none, >1 will probably be really fast", typeof(Single))]
        public Single LookAutolevellingScale;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(8)]
        public Byte[] EmptyString2;
        [Abide.Guerilla.Tags.FieldAttribute("gravity_scale", typeof(Single))]
        public Single GravityScale;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(2)]
        public Byte[] EmptyString3;
        [Abide.Guerilla.Tags.FieldAttribute("minimum autolevelling ticks#amount of time player needs to move and not look up o" +
            "r down for autolevelling to kick in", typeof(Int16))]
        public Int16 MinimumAutolevellingTicks;
        [Abide.Guerilla.Tags.FieldAttribute("minimum angle for vehicle flipping#0 means the vehicle\'s up vector is along the g" +
            "round, 90 means the up vector is pointing straight up:degrees", typeof(Single))]
        public Single MinimumAngleForVehicleFlipping;
        [Abide.Guerilla.Tags.FieldAttribute("look function", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("Look Function Block", 16, typeof(LookFunctionBlock))]
        public TagBlock LookFunction;
        [Abide.Guerilla.Tags.FieldAttribute("minimum action hold time:seconds#time that player needs to press ACTION to regist" +
            "er as a HOLD", typeof(Single))]
        public Single MinimumActionHoldTime;
    }
}
#pragma warning restore CS1591
