//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Abide.Tag.Cache.Generated
{
    using Abide.Tag;
    
    /// <summary>
    /// Represents the generated scenario_atmospheric_fog_palette tag block.
    /// </summary>
    public sealed class ScenarioAtmosphericFogPalette : Block
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ScenarioAtmosphericFogPalette"/> class.
        /// </summary>
        public ScenarioAtmosphericFogPalette()
        {
            this.Fields.Add(new StringIdField("Name^"));
            this.Fields.Add(new ExplanationField("ATMOSPHERIC FOG", ""));
            this.Fields.Add(new RealRgbColorField("Color"));
            this.Fields.Add(new RealField("Spread Distance:World Units#How far fog spreads into adjacent clusters"));
            this.Fields.Add(new PadField("", 4));
            this.Fields.Add(new RealFractionField("Maximum Density:[0,1]#Fog density clamps to this value."));
            this.Fields.Add(new RealField("Start Distance:World Units#Before this distance, there is no fog."));
            this.Fields.Add(new RealField("Opaque Distance:World Units#Fog becomes opaque (maximum density) at this distance" +
                        " from viewer."));
            this.Fields.Add(new ExplanationField("SECONDARY FOG", ""));
            this.Fields.Add(new RealRgbColorField("Color"));
            this.Fields.Add(new PadField("", 4));
            this.Fields.Add(new RealFractionField("Maximum Density:[0,1]#Fog density clamps to this value."));
            this.Fields.Add(new RealField("Start Distance:World Units#Before this distance, there is no fog."));
            this.Fields.Add(new RealField("Opaque Distance:World Units#Fog becomes opaque (maximum density) at this distance" +
                        " from viewer."));
            this.Fields.Add(new PadField("", 4));
            this.Fields.Add(new ExplanationField("PLANAR FOG OVERRIDE", "Planar fog, if present, is interpolated toward these values."));
            this.Fields.Add(new RealRgbColorField("Planar Color"));
            this.Fields.Add(new RealFractionField("Planar Max Density:[0,1]"));
            this.Fields.Add(new RealFractionField("Planar Override Amount:[0,1]"));
            this.Fields.Add(new RealField("Planar Min Distance Bias:World Units#Don\'t ask."));
            this.Fields.Add(new PadField("", 44));
            this.Fields.Add(new ExplanationField("PATCHY FOG", ""));
            this.Fields.Add(new RealRgbColorField("Patchy Color"));
            this.Fields.Add(new PadField("", 12));
            this.Fields.Add(new RealFractionBoundsField("Patchy Density:[0,1]"));
            this.Fields.Add(new RealBoundsField("Patchy Distance:World Units"));
            this.Fields.Add(new PadField("", 32));
            this.Fields.Add(new TagReferenceField("Patchy Fog", 1718641512));
            this.Fields.Add(new BlockField<ScenarioAtmosphericFogMixerBlock>("Mixers", 2));
            this.Fields.Add(new ExplanationField("BLOOM OVERRIDE", ""));
            this.Fields.Add(new RealFractionField("Amount:[0,1]"));
            this.Fields.Add(new RealFractionField("Threshold:[0,1]"));
            this.Fields.Add(new RealFractionField("Brightness:[0,1]"));
            this.Fields.Add(new RealField("Gamma Power"));
            this.Fields.Add(new ExplanationField("CAMERA IMMERSION OVERRIDE", ""));
            this.Fields.Add(new WordFlagsField("Camera Immersion Flags", "Disable Atmospheric Fog", "Disable Secondary Fog", "Disable Planar Fog", "Invert Planar Fog Priorities", "Disable Water"));
            this.Fields.Add(new PadField("", 2));
        }
        /// <summary>
        /// Gets and returns the name of the scenario_atmospheric_fog_palette tag block.
        /// </summary>
        public override string Name
        {
            get
            {
                return "scenario_atmospheric_fog_palette";
            }
        }
        /// <summary>
        /// Gets and returns the display name of the scenario_atmospheric_fog_palette tag block.
        /// </summary>
        public override string DisplayName
        {
            get
            {
                return "scenario_atmospheric_fog_palette";
            }
        }
        /// <summary>
        /// Gets and returns the maximum number of elements allowed of the scenario_atmospheric_fog_palette tag block.
        /// </summary>
        public override int MaximumElementCount
        {
            get
            {
                return 127;
            }
        }
        /// <summary>
        /// Gets and returns the alignment of the scenario_atmospheric_fog_palette tag block.
        /// </summary>
        public override int Alignment
        {
            get
            {
                return 4;
            }
        }
    }
}
