//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Abide.Tag.Cache.Generated
{
    using System;
    using Abide.HaloLibrary;
    using Abide.Tag;
    
    /// <summary>
    /// Represents the generated shader_pass_vertex_shader_constant_block tag block.
    /// </summary>
    public sealed class ShaderPassVertexShaderConstantBlock : Block
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ShaderPassVertexShaderConstantBlock"/> class.
        /// </summary>
        public ShaderPassVertexShaderConstantBlock()
        {
            this.Fields.Add(new StringIdField("Source Parameter"));
            this.Fields.Add(new EnumField("Scale by Texture Stage", "None", "Stage 0", "Stage 1", "Stage 2", "Stage 3"));
            this.Fields.Add(new EnumField("Register Bank", "Vn [0,15]", "Cn [0,12]"));
            this.Fields.Add(new ShortIntegerField("Register Index"));
            this.Fields.Add(new EnumField("Component Mask", "x (value)", "y (value)", "z (value)", "w (value)", "xyz/rgb (color)", "x (uniform scale)", "y (uniform scale)", "z (uniform scale)", "w (uniform scale)", "xy (2D scale)", "zw (2D scale)", "xy (2D translation)", "zw (2D translation)", "xyzw (2D simple xform)", "xyw Row 1 (2D affine xform)", "xyw Row 2 (2D affine xform)", "xyz (3D scale)", "xyz (3D translation)", "xyzw Row 1 (3D affine xform)", "xyzw Row 2 (3D affine xform)", "xyzw Row 3 (3D affine xform)"));
        }
        /// <summary>
        /// Gets and returns the name of the shader_pass_vertex_shader_constant_block tag block.
        /// </summary>
        public override string Name
        {
            get
            {
                return "shader_pass_vertex_shader_constant_block";
            }
        }
        /// <summary>
        /// Gets and returns the display name of the shader_pass_vertex_shader_constant_block tag block.
        /// </summary>
        public override string DisplayName
        {
            get
            {
                return "vs constant";
            }
        }
        /// <summary>
        /// Gets and returns the maximum number of elements allowed of the shader_pass_vertex_shader_constant_block tag block.
        /// </summary>
        public override int MaximumElementCount
        {
            get
            {
                return 32;
            }
        }
        /// <summary>
        /// Gets and returns the alignment of the shader_pass_vertex_shader_constant_block tag block.
        /// </summary>
        public override int Alignment
        {
            get
            {
                return 4;
            }
        }
    }
}
