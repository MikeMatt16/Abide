<ui:CustomBorderWindow x:Name="customBorderWindow" x:Class="Abide.Guerilla.Wpf.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Abide.Guerilla.Wpf"
        xmlns:vm="clr-namespace:Abide.Guerilla.Wpf.ViewModel"
        xmlns:ui="clr-namespace:Abide.Guerilla.Wpf.Ui"
        xmlns:tag="clr-namespace:Abide.Tag;assembly=Abide.Tag"
        xmlns:ctr="clr-namespace:Abide.Guerilla.Wpf.Controls"
        mc:Ignorable="d"
        Title="{Binding WindowTitle}" Height="800" Width="900" WindowState="Normal"
        ResizeMode="CanResizeWithGrip"
        SnapsToDevicePixels="True"
        DataContextChanged="CustomBorderWindow_DataContextChanged"
        Style="{StaticResource VisualStudioWindow}">
    <ui:CustomBorderWindow.InputBindings>
        <KeyBinding Modifiers="Ctrl" Key="N" Command="{Binding Path=NewFileCommand}"/>
        <KeyBinding Modifiers="Ctrl" Key="O" Command="{Binding Path=OpenFileCommand}"/>
        <KeyBinding Modifiers="Ctrl+Shift" Key="S" Command="{Binding Path=SaveAllCommand}"/>
        <KeyBinding Modifiers="Alt" Key="F4" Command="{Binding Path=ExitCommand}"/>
        <KeyBinding Modifiers="Ctrl" Key="S" Command="{Binding Path=SelectedFile.SaveFileCommand}"/>
        <KeyBinding Modifiers="Ctrl" Key="F4" Command="{Binding Path=SelectedFile.CloseFileCommand}"/>
    </ui:CustomBorderWindow.InputBindings>
    <ui:CustomBorderWindow.Resources>
        <BooleanToVisibilityConverter x:Key="boolToVisibility"/>
        <local:FileNameToShortStringConverter x:Key="fileToShortString"/>
    </ui:CustomBorderWindow.Resources>
    <ui:CustomBorderWindow.DataContext>
        <local:MainViewModel/>
    </ui:CustomBorderWindow.DataContext>
    <Grid SnapsToDevicePixels="True">
        <DockPanel>
            <Grid DockPanel.Dock="Top" Height="31">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="8"/>
                    <ColumnDefinition Width="24"/>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="102"/>
                </Grid.ColumnDefinitions>
                <Image Name="WindowIcon" Grid.Column="1" VerticalAlignment="Center"  HorizontalAlignment="Center" Height="24">
                    <Image.Style>
                        <Style TargetType="Image">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=customBorderWindow, Path=IsActive}" Value="True">
                                    <Setter Property="Source" Value="/Resources/window-active.png"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ElementName=customBorderWindow, Path=IsActive}" Value="False">
                                    <Setter Property="Source" Value="/Resources/window-inactive.png"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
                <TextBlock Grid.Column="2" Text="{Binding Title, ElementName=customBorderWindow}" 
                           VerticalAlignment="Center" HorizontalAlignment="Left" Padding="8">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=customBorderWindow, Path=IsActive}" Value="True">
                                    <Setter Property="Foreground" Value="#C7C7C7"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ElementName=customBorderWindow, Path=IsActive}" Value="False">
                                    <Setter Property="Foreground" Value="#818183"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
                <Grid Grid.Column="3">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="34"/>
                        <ColumnDefinition Width="34"/>
                        <ColumnDefinition Width="34"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="26"/>
                    </Grid.RowDefinitions>
                    <Grid.Resources>
                        <Style TargetType="Button">
                            <Setter Property="Foreground" Value="White"/>
                            <Setter Property="Focusable" Value="False"/>
                            <Setter Property="Background" Value="{StaticResource Background}"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Button">
                                        <Border Name="Border" BorderThickness="0" Width="Auto" Height="Auto" Background="Transparent">
                                            <Grid Width="10" Height="10">
                                                <ContentPresenter VerticalAlignment="Center"
                                                              HorizontalAlignment="Center"
                                                              ContentSource="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"/>
                                            </Grid>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="Border" Property="Background" Value="#3f3f41"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter TargetName="Border" Property="Background" Value="{StaticResource ActiveAccent}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Grid.Resources>
                    <Button x:Name="MinimizeCaptionButton" Grid.Row="0" Grid.Column="0" Command="{Binding MinimizeCommand, ElementName=customBorderWindow, Mode=OneWay}">
                        <Image Name="MinMaxImage" Source="/Resources/caption-minimize.png"/>
                    </Button>
                    <Button x:Name="MaximizeCaptionButton" Grid.Row="0" Grid.Column="1" Command="{Binding MaximizeRestoreCommand, ElementName=customBorderWindow, Mode=OneWay}">
                        <Image x:Name="MaximizeRestoreButtonImage" Source="/Resources/caption-maximize.png"/>
                    </Button>
                    <Button x:Name="CloseCaptionButton" Grid.Row="0" Grid.Column="2" Command="{Binding CloseCommand, ElementName=customBorderWindow, Mode=OneWay}">
                        <Image Source="/Resources/caption-close.png"/>
                    </Button>
                </Grid>
            </Grid>

            <Menu DockPanel.Dock="Top" IsMainMenu="True">
                <MenuItem Header="_File">
                    <MenuItem Header="_New Tag" Command="{Binding Path=NewFileCommand}" InputGestureText="Ctrl+N">
                        <MenuItem.Icon>
                            <Image Source="/Resources/new-file.png" Width="16" Height="16" Stretch="Fill"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="_Open Tag" Command="{Binding Path=OpenFileCommand}" InputGestureText="Ctrl+O">
                        <MenuItem.Icon>
                            <Image Source="/Resources/open-file.png" Width="16" Height="16" Stretch="Fill"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator/>
                    <MenuItem Header="_Close" Command="{Binding Path=SelectedFile.CloseFileCommand}" InputGestureText="Ctrl+F4"/>
                    <MenuItem Header="Close All" Command="{Binding Path=CloseAllCommand}"/>
                    <Separator/>
                    <MenuItem Header="_Save" Command="{Binding Path=SelectedFile.SaveFileCommand}" InputGestureText="Ctrl+S">
                        <MenuItem.Icon>
                            <Image Source="/Resources/save-file.png" Width="16" Height="16" Stretch="Fill"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Save As..." Command="{Binding Path=SaveAsCommand}"/>
                    <MenuItem Header="Save _All" Command="{Binding Path=SaveAllCommand}" InputGestureText="Ctrl+Shift+S"/>
                    <Separator/>
                    <MenuItem Header="_Exit" Command="{Binding Path=ExitCommand}" InputGestureText="Alt+F4"/>
                </MenuItem>
                <MenuItem Header="_Edit">
                    <MenuItem Header="_Undo" Command="Undo"/>
                    <MenuItem Header="_Redo" Command="Redo"/>
                    <Separator/>
                    <MenuItem Header="C_ut" Command="Cut"/>
                    <MenuItem Header="_Copy" Command="Copy"/>
                    <MenuItem Header="_Paste" Command="Paste"/>
                </MenuItem>
                <MenuItem Header="_Tools">
                    <MenuItem Header="C_onfigure" Command="{Binding Path=ConfigureCommand}">
                        <MenuItem.Icon>
                            <Image Source="/Resources/config.png" Width="16" Height="16" Stretch="Fill"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator/>
                    <MenuItem Header="_Decompile Map..." Command="{Binding Path=DecompileMapCommand}">
                        <MenuItem.Icon>
                            <Image Source="/Resources/decompile.png" Width="16" Height="16" Stretch="Fill"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="_Compiler" Command="{Binding Path=CompileMapCommand}">
                        <MenuItem.Icon>
                            <Image Source="/Resources/compile.png" Width="16" Height="16" Stretch="Fill"/>
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
            </Menu>

            <StatusBar DockPanel.Dock="Bottom" Background="{StaticResource ActiveAccent}" TextBlock.Foreground="{StaticResource Foreground}">
                <StatusBar.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="20"/>
                            </Grid.ColumnDefinitions>
                        </Grid>
                    </ItemsPanelTemplate>
                </StatusBar.ItemsPanel>
                <StatusBarItem Grid.Column="0">
                    <TextBlock Text="{Binding Status}"/>
                </StatusBarItem>
                <StatusBarItem Grid.Column="2">
                    <ProgressBar Value="{Binding Progress}" Visibility="{Binding ShowProgressBar, Converter={StaticResource boolToVisibility}}"
                                 Width="100" Height="14" HorizontalAlignment="Right"/>
                </StatusBarItem>
            </StatusBar>

            <Grid>
                <Grid.Resources>
                    <DataTemplate x:Key="ExplanationFieldDataTemplate" DataType="{x:Type vm:ExplanationFieldModel}">
                        <Grid Background="{StaticResource Background}" Margin="2">
                            <Border BorderThickness="1" BorderBrush="{StaticResource BackgroundLight}"/>
                            <StackPanel Orientation="Vertical" Margin="8" HorizontalAlignment="Left">
                                <TextBlock Text="{Binding Name}" FontWeight="Bold" FontSize="14"/>
                                <TextBlock Text="{Binding Explanation}" Visibility="{Binding HasExplanation,
                                    Converter={StaticResource boolToVisibility}, Mode=OneWay}" TextWrapping="Wrap"/>
                            </StackPanel>
                        </Grid>
                    </DataTemplate>

                    <DataTemplate x:Key="ValueFieldDataTemplate" DataType="{x:Type vm:ValueFieldModel}">
                        <Grid Margin="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="4"/>
                                <ColumnDefinition Width="300"/>
                                <ColumnDefinition Width="2"/>
                                <ColumnDefinition Width="{Binding Path=InputBoxWidth}"/>
                                <ColumnDefinition Width="2"/>
                                <ColumnDefinition />
                                <ColumnDefinition Width="4"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Grid.Column="1" VerticalAlignment="Center" Text="{Binding Path=Name, Mode=OneWay}"/>
                            <TextBox Grid.Column="3" Text="{Binding Path=Value, Mode=TwoWay}" ToolTip="{Binding Path=ToolTip}"/>
                            <TextBlock Grid.Column="5" VerticalAlignment="Center" Text="{Binding Path=Details}"/>
                        </Grid>
                    </DataTemplate>

                    <DataTemplate x:Key="EnumFieldDataTemplate" DataType="{x:Type vm:EnumFieldModel}">
                        <Grid Margin="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="4"/>
                                <ColumnDefinition Width="300"/>
                                <ColumnDefinition Width="2"/>
                                <ColumnDefinition Width="250"/>
                                <ColumnDefinition Width="2"/>
                                <ColumnDefinition />
                                <ColumnDefinition Width="4"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Grid.Column="1" VerticalAlignment="Center" Text="{Binding Path=Name}"/>
                            <ComboBox Grid.Column="3" ItemsSource="{Binding Path=Options}" SelectedIndex="{Binding Path=SelectedIndex}" ToolTip="{Binding Path=ToolTip}"/>
                            <TextBlock Grid.Column="5" VerticalAlignment="Center" Text="{Binding Path=Details}"/>
                        </Grid>
                    </DataTemplate>

                    <DataTemplate x:Key="FlagsFieldDataTemplate" DataType="{x:Type vm:FlagsFieldModel}">
                        <Grid Margin="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="4"/>
                                <ColumnDefinition Width="300"/>
                                <ColumnDefinition Width="2"/>
                                <ColumnDefinition Width="Auto" MinWidth="250"/>
                                <ColumnDefinition Width="2"/>
                                <ColumnDefinition />
                                <ColumnDefinition Width="4"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Grid.Column="1" Text="{Binding Path=Name}"/>
                            <ListBox Grid.Column="3" ItemsSource="{Binding Path=Flags}" MaxHeight="150">
                                <ListBox.Resources>
                                </ListBox.Resources>
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <CheckBox IsChecked="{Binding Path=Toggle}" ToolTip="{Binding Path=ToolTip}">
                                                <TextBlock Text="{Binding Path=Name}" Foreground="{StaticResource Foreground}"/>
                                            </CheckBox>
                                        </StackPanel>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                            <TextBlock Grid.Column="5" Text="{Binding Path=Details}"/>
                        </Grid>
                    </DataTemplate>

                    <DataTemplate x:Key="BoundsFieldDataTemplate" DataType="{x:Type vm:BoundsFieldModel}">
                        <Grid Margin="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="4"/>
                                <ColumnDefinition Width="300"/>
                                <ColumnDefinition Width="2"/>
                                <ColumnDefinition Width="80"/>
                                <ColumnDefinition Width="20"/>
                                <ColumnDefinition Width="80"/>
                                <ColumnDefinition Width="2"/>
                                <ColumnDefinition />
                                <ColumnDefinition Width="4"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Grid.Column="1" VerticalAlignment="Center" Text="{Binding Path=Name, Mode=OneWay}"/>
                            <TextBox Grid.Column="3" Text="{Binding Path=Min, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ToolTip="{Binding Path=ToolTip}"/>
                            <TextBlock Grid.Column="4" Text="to" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            <TextBox Grid.Column="5" Text="{Binding Path=Max, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ToolTip="{Binding Path=ToolTip}"/>
                            <TextBlock Grid.Column="7" VerticalAlignment="Center" Text="{Binding Path=Details}"/>
                        </Grid>
                    </DataTemplate>

                    <DataTemplate x:Key="Tuple2FieldDataTemplate" DataType="{x:Type vm:Tuple2FieldModel}">
                        <Grid Margin="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="4"/>
                                <ColumnDefinition Width="300"/>
                                <ColumnDefinition Width="2"/>
                                <ColumnDefinition Width="80"/>
                                <ColumnDefinition Width="2"/>
                                <ColumnDefinition Width="10"/>
                                <ColumnDefinition Width="2"/>
                                <ColumnDefinition Width="80"/>
                                <ColumnDefinition Width="2"/>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="4"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Grid.Column="1" VerticalAlignment="Center" Text="{Binding Path=Name}"/>
                            <TextBlock Grid.Column="1" VerticalAlignment="Center" Text="{Binding Path=Text1}" HorizontalAlignment="Right"/>
                            <TextBox Grid.Column="3" Text="{Binding Path=Value1, Mode=TwoWay}"/>
                            <TextBlock Grid.Column="5" VerticalAlignment="Center" Text="{Binding Path=Text2}" HorizontalAlignment="Right"/>
                            <TextBox Grid.Column="7" Text="{Binding Path=Value2, Mode=TwoWay}"/>
                            <TextBlock Grid.Column="9" VerticalAlignment="Center" Text="{Binding Path=Details}"/>
                        </Grid>
                    </DataTemplate>

                    <DataTemplate x:Key="Tuple3FieldDataTemplate" DataType="{x:Type vm:Tuple3FieldModel}">
                        <Grid Margin="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="4"/>
                                <ColumnDefinition Width="300"/>
                                <ColumnDefinition Width="2"/>
                                <ColumnDefinition Width="80"/>
                                <ColumnDefinition Width="2"/>
                                <ColumnDefinition Width="10"/>
                                <ColumnDefinition Width="2"/>
                                <ColumnDefinition Width="80"/>
                                <ColumnDefinition Width="2"/>
                                <ColumnDefinition Width="10"/>
                                <ColumnDefinition Width="2"/>
                                <ColumnDefinition Width="80"/>
                                <ColumnDefinition Width="2"/>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="4"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Grid.Column="1" VerticalAlignment="Center" Text="{Binding Path=Name}"/>
                            <TextBlock Grid.Column="1" VerticalAlignment="Center" Text="{Binding Path=Text1}" HorizontalAlignment="Right"/>
                            <TextBox Grid.Column="3" Text="{Binding Path=Value1, Mode=TwoWay}"/>
                            <TextBlock Grid.Column="5" VerticalAlignment="Center" Text="{Binding Path=Text2}" HorizontalAlignment="Right"/>
                            <TextBox Grid.Column="7" Text="{Binding Path=Value2, Mode=TwoWay}"/>
                            <TextBlock Grid.Column="9" VerticalAlignment="Center" Text="{Binding Path=Text3}" HorizontalAlignment="Right"/>
                            <TextBox Grid.Column="11" Text="{Binding Path=Value3, Mode=TwoWay}"/>
                            <TextBlock Grid.Column="13" VerticalAlignment="Center" Text="{Binding Path=Details}"/>
                        </Grid>
                    </DataTemplate>

                    <DataTemplate x:Key="Tuple4FieldDataTemplate" DataType="{x:Type vm:Tuple4FieldModel}">
                        <Grid Margin="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="4"/>
                                <ColumnDefinition Width="300"/>
                                <ColumnDefinition Width="2"/>
                                <ColumnDefinition Width="80"/>
                                <ColumnDefinition Width="2"/>
                                <ColumnDefinition Width="10"/>
                                <ColumnDefinition Width="2"/>
                                <ColumnDefinition Width="80"/>
                                <ColumnDefinition Width="2"/>
                                <ColumnDefinition Width="10"/>
                                <ColumnDefinition Width="2"/>
                                <ColumnDefinition Width="80"/>
                                <ColumnDefinition Width="2"/>
                                <ColumnDefinition Width="10"/>
                                <ColumnDefinition Width="2"/>
                                <ColumnDefinition Width="80"/>
                                <ColumnDefinition Width="2"/>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="2"/>
                                <ColumnDefinition Width="4"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Grid.Column="1" VerticalAlignment="Center" Text="{Binding Path=Name}"/>
                            <TextBlock Grid.Column="1" VerticalAlignment="Center" Text="{Binding Path=Text1}" HorizontalAlignment="Right"/>
                            <TextBox Grid.Column="3" Text="{Binding Path=Value1, Mode=TwoWay}"/>
                            <TextBlock Grid.Column="5" VerticalAlignment="Center" Text="{Binding Path=Text2}" HorizontalAlignment="Right"/>
                            <TextBox Grid.Column="7" Text="{Binding Path=Value2, Mode=TwoWay}"/>
                            <TextBlock Grid.Column="9" VerticalAlignment="Center" Text="{Binding Path=Text3}" HorizontalAlignment="Right"/>
                            <TextBox Grid.Column="11" Text="{Binding Path=Value3, Mode=TwoWay}"/>
                            <TextBlock Grid.Column="13" VerticalAlignment="Center" Text="{Binding Path=Text4}" HorizontalAlignment="Right"/>
                            <TextBox Grid.Column="15" Text="{Binding Path=Value4, Mode=TwoWay}"/>
                            <TextBlock Grid.Column="17" VerticalAlignment="Center" Text="{Binding Path=Details}"/>
                        </Grid>
                    </DataTemplate>

                    <DataTemplate x:Key="TagReferenceFieldDataTemplate" DataType="{x:Type vm:TagReferenceFieldModel}">
                        <Grid Margin="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="4"/>
                                <ColumnDefinition Width="300"/>
                                <ColumnDefinition Width="2"/>
                                <ColumnDefinition Width="250"/>
                                <ColumnDefinition Width="2"/>
                                <ColumnDefinition />
                                <ColumnDefinition Width="4"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Grid.Column="1" VerticalAlignment="Center" Text="{Binding Path=Name, Mode=OneWay}"/>
                            <TextBox Grid.Column="3" Text="{Binding Path=Value, ConverterParameter=45,
                                Converter={StaticResource fileToShortString}}" ToolTip="{Binding Path=Value}" IsReadOnly="True"/>
                            <StackPanel Grid.Column="5" Orientation="Horizontal">
                                <Button Content="..." Width="50" Margin="2,0,2,0" Command="{Binding Path=BrowseCommand}"/>
                                <Button Content="Open" Width="50" Margin="2,0,2,0" Command="{Binding Path=OpenCommand}"/>
                                <Button Content="Clear" Width="50" Margin="2,0,2,0" Command="{Binding Path=ClearCommand}"/>
                            </StackPanel>
                        </Grid>
                    </DataTemplate>

                    <DataTemplate x:Key="StructFieldDataTemplate" DataType="{x:Type vm:StructFieldModel}">
                        <Grid DataContext="{Binding TagBlock}">
                            <ItemsControl ItemsSource="{Binding Fields}" ItemTemplateSelector="{DynamicResource FieldTemplateSelector}"/>
                        </Grid>
                    </DataTemplate>

                    <DataTemplate x:Key="BlockFieldDataTemplate" DataType="{x:Type vm:BlockFieldModel}">
                        <Grid Background="{StaticResource BackgroundDark}" Margin="2">
                            <Border BorderBrush="{StaticResource BackgroundLight}" BorderThickness="1"/>
                            <StackPanel Orientation="Vertical" Margin="8">
                                <StackPanel Orientation="Vertical">
                                    <TextBlock Text="{Binding Path=TagField.Name}" VerticalAlignment="Center" FontWeight="Bold" FontSize="14" Margin="4,0,0,0"/>
                                    <StackPanel Orientation="Horizontal" Margin="0,4,0,0">
                                        <ToggleButton Command="{Binding Path=ExpandCommand}" Width="20" Height="20" VerticalAlignment="Center"
                                                      HorizontalAlignment="Center" IsChecked="{Binding Path=Expanded}"
                                                      Style="{StaticResource VisualStudioExpandCollapseToggleButton}"
                                                      ToolTip="{Binding Path=ExpandTooltip}"/>
                                        <ComboBox Width="350" ItemsSource="{Binding Path=BlockList}" SelectedIndex="{Binding Path=SelectedBlockIndex}"
                                                  IsEnabled="{Binding Path=HasBlocks}" Margin="4,0,0,0">
                                            <ComboBox.ItemTemplate>
                                                <DataTemplate>
                                                    <TextBlock Name="TagBlock" Text="{Binding Path=Name}"/>
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>
                                        </ComboBox>
                                        <Button Content="Add" Width="70" Margin="4,0,0,0" Command="{Binding Path=AddCommand}"
                                                ToolTip="Add a new tag block to the list."/>
                                        <Button Content="Insert" Width="70" Margin="4,0,0,0" Command="{Binding Path=InsertCommand}"
                                                ToolTip="Insert a new tag block before the currently selected block."/>
                                        <Button Content="Duplicate" Width="70" Margin="4,0,0,0" Command="{Binding Path=DuplicateCommand}"
                                                ToolTip="Insert a clone of the currently selected tag block before the selected tag block."/>
                                        <Button Content="Delete" Width="70" Margin="4,0,0,0" Command="{Binding Path=DeleteCommand}"
                                                ToolTip="Deletes the currently selected tag block."/>
                                        <Button Content="Delete All" Width="70" Margin="4,0,0,0" Command="{Binding Path=DeleteAllCommand}"
                                                ToolTip="Deletes all of the tag blocks."/>
                                    </StackPanel>
                                    <Grid Visibility="{Binding Expanded, Converter={StaticResource boolToVisibility}}">
                                        <ItemsControl ItemsSource="{Binding SelectedTagBlockModel.Fields}"
                                                      ItemTemplateSelector="{DynamicResource FieldTemplateSelector}"/>
                                    </Grid>
                                </StackPanel>
                            </StackPanel>
                        </Grid>
                    </DataTemplate>

                    <vm:FieldDataTemplateSelector x:Key="FieldTemplateSelector"
                                                  ExplanationFieldDataTemplate="{StaticResource ExplanationFieldDataTemplate}"
                                                  ValueFieldDataTemplate="{StaticResource ValueFieldDataTemplate}"
                                                  EnumFieldDataTemplate="{StaticResource EnumFieldDataTemplate}"
                                                  FlagsFieldDataTemplate="{StaticResource FlagsFieldDataTemplate}"
                                                  BoundsFieldDataTemplate="{StaticResource BoundsFieldDataTemplate}"
                                                  Tuple2FieldDataTemplate="{StaticResource Tuple2FieldDataTemplate}"
                                                  Tuple3FieldDataTemplate="{StaticResource Tuple3FieldDataTemplate}"
                                                  Tuple4FieldDataTemplate="{StaticResource Tuple4FieldDataTemplate}"
                                                  TagReferenceFieldDataTemplate="{StaticResource TagReferenceFieldDataTemplate}"
                                                  StructFieldDataTemplate="{StaticResource StructFieldDataTemplate}"
                                                  BlockFieldDataTemplate="{StaticResource BlockFieldDataTemplate}"/>

                    <DataTemplate x:Key="TagBlockDataTemplate" DataType="{x:Type vm:TagBlockModel}">
                        <ItemsControl ItemsSource="{Binding Fields}" ItemTemplateSelector="{StaticResource FieldTemplateSelector}"/>
                    </DataTemplate>

                    <DataTemplate x:Key="TagFileTemplate" DataType="{x:Type vm:TagFileModel}">
                        <ScrollViewer VerticalScrollBarVisibility="Auto">
                            <ItemsControl ItemsSource="{Binding TagBlocks}" ItemTemplate="{StaticResource TagBlockDataTemplate}"/>
                        </ScrollViewer>
                    </DataTemplate>

                    <vm:FileDataTemplateSelector x:Key="FileTemplateSelector" TagFileTemplate="{StaticResource TagFileTemplate}"/>
                </Grid.Resources>
                <TabControl x:Name="mainTabControl" ItemsSource="{Binding Path=Files, Mode=TwoWay}"
                            SelectedItem="{Binding Path=SelectedFile}" ContentTemplateSelector="{StaticResource FileTemplateSelector}">
                    <TabControl.ItemTemplate>
                        <DataTemplate>
                            <Grid ToolTip="{Binding Path=FileName}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="4"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="15"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Text="{Binding DisplayName}" TextTrimming="CharacterEllipsis"/>
                                <TextBlock Grid.Column="1" Text="*" Visibility="{Binding Path=IsDirty, Converter={StaticResource boolToVisibility}, Mode=TwoWay}"/>
                                <Button Grid.Column="4" DataContext="{Binding Mode=OneWay}" Command="{Binding Path=CloseFileCommand}"
                                    Style="{StaticResource VisualStudioTabCloseButton}" ToolTip="Close (Ctrl+F4)"/>
                            </Grid>
                        </DataTemplate>
                    </TabControl.ItemTemplate>
                </TabControl>
            </Grid>
        </DockPanel>
    </Grid>

    <!--<ui:CustomBorderWindow.Triggers>
        <Trigger Property="WindowState" Value="Maximized">
            <Setter TargetName="MaximizeRestoreButtonImage" Property="Source" Value=""/>
        </Trigger>
    </ui:CustomBorderWindow.Triggers>-->
</ui:CustomBorderWindow>
