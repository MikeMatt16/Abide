//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Abide.Tag.Generated
{
    using Abide.Tag;
    using System.IO;
    
    /// <summary>
    /// Represents the generated animation_transition_block tag block.
    /// </summary>
    public sealed class AnimationTransitionBlock : Block
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AnimationTransitionBlock"/> class.
        /// </summary>
        public AnimationTransitionBlock()
        {
            this.Fields.Add(new StringIdField("full name^#name of the mode & state of the source"));
            this.Fields.Add(new StructField<AnimationTransitionStateStructBlock>("state info"));
            this.Fields.Add(new BlockField<AnimationTransitionDestinationBlock>("destinations|AABBCC", 32));
        }
        /// <summary>
        /// Gets and returns the name of the animation_transition_block tag block.
        /// </summary>
        public override string Name
        {
            get
            {
                return "animation_transition_block";
            }
        }
        /// <summary>
        /// Gets and returns the display name of the animation_transition_block tag block.
        /// </summary>
        public override string DisplayName
        {
            get
            {
                return "animation_transition_block";
            }
        }
        /// <summary>
        /// Gets and returns the maximum number of elements allowed of the animation_transition_block tag block.
        /// </summary>
        public override int MaximumElementCount
        {
            get
            {
                return 256;
            }
        }
        /// <summary>
        /// Gets and returns the alignment of the animation_transition_block tag block.
        /// </summary>
        public override int Alignment
        {
            get
            {
                return 4;
            }
        }
        /// <summary>
        /// Writes the animation_transition_block tag block using the specified binary writer.
        /// </summary>
        // <param name="writer">The <see cref="BinaryWriter"/> used to write the animation_transition_block tag block.</param>
        public override void Write(BinaryWriter writer)
        {
            // Invoke base write procedure.
            base.Write(writer);
            // Post-write the tag blocks.
            ((BlockField<AnimationTransitionDestinationBlock>)(this.Fields[2])).WriteChildren(writer);
        }
    }
}
