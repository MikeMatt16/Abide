//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Abide.Tag.Generated
{
    using Abide.Tag;
    using System.IO;
    
    /// <summary>
    /// Represents the generated environment_object_refs tag block.
    /// </summary>
    public sealed class EnvironmentObjectRefs : Block
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EnvironmentObjectRefs"/> class.
        /// </summary>
        public EnvironmentObjectRefs()
        {
            this.Fields.Add(new WordFlagsField("flags", "mobile"));
            this.Fields.Add(new PadField("", 2));
            this.Fields.Add(new LongIntegerField("first sector*"));
            this.Fields.Add(new LongIntegerField("last sector*"));
            this.Fields.Add(new BlockField<EnvironmentObjectBspRefs>("bsps*", 1024));
            this.Fields.Add(new BlockField<EnvironmentObjectNodes>("nodes*", 255));
        }
        /// <summary>
        /// Gets and returns the name of the environment_object_refs tag block.
        /// </summary>
        public override string Name
        {
            get
            {
                return "environment_object_refs";
            }
        }
        /// <summary>
        /// Gets and returns the display name of the environment_object_refs tag block.
        /// </summary>
        public override string DisplayName
        {
            get
            {
                return "environment_object_refs";
            }
        }
        /// <summary>
        /// Gets and returns the maximum number of elements allowed of the environment_object_refs tag block.
        /// </summary>
        public override int MaximumElementCount
        {
            get
            {
                return 2000;
            }
        }
        /// <summary>
        /// Gets and returns the alignment of the environment_object_refs tag block.
        /// </summary>
        public override int Alignment
        {
            get
            {
                return 4;
            }
        }
        /// <summary>
        /// Writes the environment_object_refs tag block using the specified binary writer.
        /// </summary>
        // <param name="writer">The <see cref="BinaryWriter"/> used to write the environment_object_refs tag block.</param>
        public override void Write(BinaryWriter writer)
        {
            // Invoke base write procedure.
            base.Write(writer);
            // Post-write the tag blocks.
            ((BlockField<EnvironmentObjectBspRefs>)(this.Fields[4])).WriteChildren(writer);
            ((BlockField<EnvironmentObjectNodes>)(this.Fields[5])).WriteChildren(writer);
        }
    }
}
