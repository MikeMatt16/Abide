//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Abide.Tag.Generated
{
    using Abide.Tag;
    
    /// <summary>
    /// Represents the generated interface_tag_references tag block.
    /// </summary>
    public sealed class InterfaceTagReferences : Block
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="InterfaceTagReferences"/> class.
        /// </summary>
        public InterfaceTagReferences()
        {
            this.Fields.Add(new TagReferenceField("obsolete1"));
            this.Fields.Add(new TagReferenceField("obsolete2"));
            this.Fields.Add(new TagReferenceField("screen color table"));
            this.Fields.Add(new TagReferenceField("hud color table"));
            this.Fields.Add(new TagReferenceField("editor color table"));
            this.Fields.Add(new TagReferenceField("dialog color table"));
            this.Fields.Add(new TagReferenceField("hud globals"));
            this.Fields.Add(new TagReferenceField("motion sensor sweep bitmap"));
            this.Fields.Add(new TagReferenceField("motion sensor sweep bitmap mask"));
            this.Fields.Add(new TagReferenceField("multiplayer hud bitmap"));
            this.Fields.Add(new TagReferenceField(""));
            this.Fields.Add(new TagReferenceField("hud digits definition"));
            this.Fields.Add(new TagReferenceField("motion sensor blip bitmap"));
            this.Fields.Add(new TagReferenceField("interface goo map1"));
            this.Fields.Add(new TagReferenceField("interface goo map2"));
            this.Fields.Add(new TagReferenceField("interface goo map3"));
            this.Fields.Add(new TagReferenceField("mainmenu ui globals"));
            this.Fields.Add(new TagReferenceField("singleplayer ui globals"));
            this.Fields.Add(new TagReferenceField("multiplayer ui globals"));
        }
        /// <summary>
        /// Gets and returns the name of the interface_tag_references tag block.
        /// </summary>
        public override string Name
        {
            get
            {
                return "interface_tag_references";
            }
        }
        /// <summary>
        /// Gets and returns the display name of the interface_tag_references tag block.
        /// </summary>
        public override string DisplayName
        {
            get
            {
                return "interface_tag_references";
            }
        }
        /// <summary>
        /// Gets and returns the maximum number of elements allowed of the interface_tag_references tag block.
        /// </summary>
        public override int MaximumElementCount
        {
            get
            {
                return 1;
            }
        }
        /// <summary>
        /// Gets and returns the alignment of the interface_tag_references tag block.
        /// </summary>
        public override int Alignment
        {
            get
            {
                return 4;
            }
        }
    }
}
