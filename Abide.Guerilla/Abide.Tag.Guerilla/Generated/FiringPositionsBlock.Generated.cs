//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Abide.Tag.Guerilla.Generated
{
    using Abide.Tag;
    
    /// <summary>
    /// Represents the generated firing_positions_block tag block.
    /// </summary>
    public sealed class FiringPositionsBlock : Block
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="FiringPositionsBlock"/> class.
        /// </summary>
        public FiringPositionsBlock()
        {
            this.Fields.Add(new ExplanationField("CONTROLS~", "Ctrl-N: Creates a new area and assigns it to the current selection of firing poin" +
                        "ts."));
            this.Fields.Add(new RealPoint3dField("position (local)"));
            this.Fields.Add(new ShortIntegerField("reference frame"));
            this.Fields.Add(new WordFlagsField("flags*", "open", "partial", "closed", "mobile", "wall lean", "perch", "ground point", "dynamic cover point"));
            this.Fields.Add(new ShortBlockIndexField("area^"));
            this.Fields.Add(new ShortIntegerField("cluster index*"));
            this.Fields.Add(new SkipField("", 4));
            this.Fields.Add(new EulerAngles2dField("normal"));
        }
        /// <summary>
        /// Gets and returns the name of the firing_positions_block tag block.
        /// </summary>
        public override string Name
        {
            get
            {
                return "firing_positions_block";
            }
        }
        /// <summary>
        /// Gets and returns the display name of the firing_positions_block tag block.
        /// </summary>
        public override string DisplayName
        {
            get
            {
                return "firing_positions_block";
            }
        }
        /// <summary>
        /// Gets and returns the maximum number of elements allowed of the firing_positions_block tag block.
        /// </summary>
        public override int MaximumElementCount
        {
            get
            {
                return 512;
            }
        }
        /// <summary>
        /// Gets and returns the alignment of the firing_positions_block tag block.
        /// </summary>
        public override int Alignment
        {
            get
            {
                return 4;
            }
        }
    }
}
