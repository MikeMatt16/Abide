//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Abide.Tag.Guerilla.Generated
{
    using Abide.Tag;
    
    /// <summary>
    /// Represents the generated item_block tag block.
    /// </summary>
    public sealed class ItemBlock : Block
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ItemBlock"/> class.
        /// </summary>
        public ItemBlock()
        {
            this.Fields.Add(new ExplanationField("$$$ ITEM $$$", ""));
            this.Fields.Add(new LongFlagsField("flags", "always maintains z up", "destroyed by explosions", "unaffected by gravity"));
            this.Fields.Add(new ShortIntegerField("OLD message index"));
            this.Fields.Add(new ShortIntegerField("sort order"));
            this.Fields.Add(new RealField("multiplayer on-ground scale"));
            this.Fields.Add(new RealField("campaign on-ground scale"));
            this.Fields.Add(new ExplanationField("NEW hud messages", "everything you need to display stuff"));
            this.Fields.Add(new StringIdField("pickup message"));
            this.Fields.Add(new StringIdField("swap message"));
            this.Fields.Add(new StringIdField("pickup or dual msg"));
            this.Fields.Add(new StringIdField("swap or dual msg"));
            this.Fields.Add(new StringIdField("dual-only msg"));
            this.Fields.Add(new StringIdField("picked up msg"));
            this.Fields.Add(new StringIdField("singluar quantity msg"));
            this.Fields.Add(new StringIdField("plural quantity msg"));
            this.Fields.Add(new StringIdField("switch-to msg"));
            this.Fields.Add(new StringIdField("switch-to from ai msg"));
            this.Fields.Add(new TagReferenceField("UNUSED*", 1718579060));
            this.Fields.Add(new TagReferenceField("collision sound", 1936614433));
            this.Fields.Add(new BlockField<PredictedBitmapsBlock>("predicted bitmaps", 8));
            this.Fields.Add(new TagReferenceField("detonation damage effect", 1785754657));
            this.Fields.Add(new RealBoundsField("detonation delay:seconds"));
            this.Fields.Add(new TagReferenceField("detonating effect", 1701209701));
            this.Fields.Add(new TagReferenceField("detonation effect", 1701209701));
        }
        /// <summary>
        /// Gets and returns the name of the item_block tag block.
        /// </summary>
        public override string Name
        {
            get
            {
                return "item_block";
            }
        }
        /// <summary>
        /// Gets and returns the display name of the item_block tag block.
        /// </summary>
        public override string DisplayName
        {
            get
            {
                return "item";
            }
        }
        /// <summary>
        /// Gets and returns the maximum number of elements allowed of the item_block tag block.
        /// </summary>
        public override int MaximumElementCount
        {
            get
            {
                return 1;
            }
        }
        /// <summary>
        /// Gets and returns the alignment of the item_block tag block.
        /// </summary>
        public override int Alignment
        {
            get
            {
                return 4;
            }
        }
    }
}
