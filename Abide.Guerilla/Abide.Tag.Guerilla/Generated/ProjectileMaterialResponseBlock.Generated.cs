//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Abide.Tag.Guerilla.Generated
{
    using System;
    using Abide.HaloLibrary;
    using Abide.Tag;
    
    /// <summary>
    /// Represents the generated projectile_material_response_block tag block.
    /// </summary>
    public sealed class ProjectileMaterialResponseBlock : Block
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ProjectileMaterialResponseBlock"/> class.
        /// </summary>
        public ProjectileMaterialResponseBlock()
        {
            this.Fields.Add(new WordFlagsField("flags", "cannot be overpenetrated"));
            this.Fields.Add(new ExplanationField("default result", "(if the potential result, below, fails to happen)"));
            this.Fields.Add(new EnumField("response", "impact (detonate)", "fizzle", "overpenetrate", "attach", "bounce", "bounce (dud)", "fizzle (ricochet)"));
            this.Fields.Add(new TagReferenceField("DO NOT USE (OLD effect)", 1701209701));
            this.Fields.Add(new StringIdField("material name"));
            this.Fields.Add(new SkipField("", 4));
            this.Fields.Add(new ExplanationField("potential result", ""));
            this.Fields.Add(new EnumField("response", "impact (detonate)", "fizzle", "overpenetrate", "attach", "bounce", "bounce (dud)", "fizzle (ricochet)"));
            this.Fields.Add(new WordFlagsField("flags", "only against units", "never against units"));
            this.Fields.Add(new RealFractionField("chance fraction:[0,1]"));
            this.Fields.Add(new AngleBoundsField("between:degrees"));
            this.Fields.Add(new RealBoundsField("and:world units per second"));
            this.Fields.Add(new TagReferenceField("DO NOT USE (OLD effect)", 1701209701));
            this.Fields.Add(new ExplanationField("misc", ""));
            this.Fields.Add(new EnumField("scale effects by", "damage", "angle"));
            this.Fields.Add(new PadField("", 2));
            this.Fields.Add(new AngleField("angular noise:degrees#the angle of incidence is randomly perturbed by at most thi" +
                        "s amount to simulate irregularity."));
            this.Fields.Add(new RealField("velocity noise:world units per second#the velocity is randomly perturbed by at mo" +
                        "st this amount to simulate irregularity."));
            this.Fields.Add(new TagReferenceField("DO NOT USE (OLD detonation effect)", 1701209701));
            this.Fields.Add(new ExplanationField("penetration", ""));
            this.Fields.Add(new RealField("initial friction#the fraction of the projectile\'s velocity lost on penetration"));
            this.Fields.Add(new RealField("maximum distance#the maximum distance the projectile can travel through on object" +
                        " of this material"));
            this.Fields.Add(new ExplanationField("reflection", ""));
            this.Fields.Add(new RealField("parallel friction#the fraction of the projectile\'s velocity parallel to the surfa" +
                        "ce lost on impact"));
            this.Fields.Add(new RealField("perpendicular friction#the fraction of the projectile\'s velocity perpendicular to" +
                        " the surface lost on impact"));
        }
        /// <summary>
        /// Gets and returns the name of the projectile_material_response_block tag block.
        /// </summary>
        public override string Name
        {
            get
            {
                return "projectile_material_response_block";
            }
        }
        /// <summary>
        /// Gets and returns the display name of the projectile_material_response_block tag block.
        /// </summary>
        public override string DisplayName
        {
            get
            {
                return "projectile_material_response_block";
            }
        }
        /// <summary>
        /// Gets and returns the maximum number of elements allowed of the projectile_material_response_block tag block.
        /// </summary>
        public override int MaximumElementCount
        {
            get
            {
                return 200;
            }
        }
        /// <summary>
        /// Gets and returns the alignment of the projectile_material_response_block tag block.
        /// </summary>
        public override int Alignment
        {
            get
            {
                return 4;
            }
        }
    }
}
