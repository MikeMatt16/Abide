//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Abide.Tag.Guerilla.Generated
{
    using System;
    using Abide.HaloLibrary;
    using Abide.Tag;
    
    /// <summary>
    /// Represents the generated character_physics_struct_block tag block.
    /// </summary>
    public sealed class CharacterPhysicsStructBlock : Block
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CharacterPhysicsStructBlock"/> class.
        /// </summary>
        public CharacterPhysicsStructBlock()
        {
            this.Fields.Add(new LongFlagsField("flags", "centered_at_origin", "shape spherical", "use player physics", "climb any surface", "flying", "not physical", "dead character collision group"));
            this.Fields.Add(new RealField("height standing"));
            this.Fields.Add(new RealField("height crouching"));
            this.Fields.Add(new RealField("radius"));
            this.Fields.Add(new RealField("mass"));
            this.Fields.Add(new StringIdField("living material name#collision material used when character is alive"));
            this.Fields.Add(new StringIdField("dead material name#collision material used when character is dead"));
            this.Fields.Add(new PadField("", 4));
            this.Fields.Add(new BlockField<SpheresBlock>("dead sphere shapes", 1024));
            this.Fields.Add(new BlockField<PillsBlock>("pill shapes", 1024));
            this.Fields.Add(new BlockField<SpheresBlock>("sphere shapes", 1024));
            this.Fields.Add(new ExplanationField("ground", ""));
            this.Fields.Add(new StructField<CharacterPhysicsGroundStructBlock>("ground physics"));
            this.Fields.Add(new ExplanationField("flying", ""));
            this.Fields.Add(new StructField<CharacterPhysicsFlyingStructBlock>("flying physics"));
            this.Fields.Add(new ExplanationField("dead", ""));
            this.Fields.Add(new StructField<CharacterPhysicsDeadStructBlock>("dead physics"));
            this.Fields.Add(new ExplanationField("sentinel", ""));
            this.Fields.Add(new StructField<CharacterPhysicsSentinelStructBlock>("sentinel physics"));
        }
        /// <summary>
        /// Gets and returns the name of the character_physics_struct_block tag block.
        /// </summary>
        public override string Name
        {
            get
            {
                return "character_physics_struct_block";
            }
        }
        /// <summary>
        /// Gets and returns the display name of the character_physics_struct_block tag block.
        /// </summary>
        public override string DisplayName
        {
            get
            {
                return "character_physics_struct";
            }
        }
        /// <summary>
        /// Gets and returns the maximum number of elements allowed of the character_physics_struct_block tag block.
        /// </summary>
        public override int MaximumElementCount
        {
            get
            {
                return 1;
            }
        }
        /// <summary>
        /// Gets and returns the alignment of the character_physics_struct_block tag block.
        /// </summary>
        public override int Alignment
        {
            get
            {
                return 4;
            }
        }
    }
}
