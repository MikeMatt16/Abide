//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Abide.Tag.Guerilla.Generated
{
    using Abide.Tag;
    
    /// <summary>
    /// Represents the generated creature_block tag block.
    /// </summary>
    public sealed class CreatureBlock : Block
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CreatureBlock"/> class.
        /// </summary>
        public CreatureBlock()
        {
            this.Fields.Add(new ExplanationField("$$$ CREATURE $$$", ""));
            this.Fields.Add(new LongFlagsField("flags", "unused", "infection form", "immune to falling damage", "rotate while airborne", "zapped by shields", "attach upon impact", "not on motion sensor"));
            this.Fields.Add(new EnumField("default team", "default", "player", "human", "covenant", "flood", "sentinel", "heretic", "prophet", "unused8", "unused9", "unused10", "unused11", "unused12", "unused13", "unused14", "unused15"));
            this.Fields.Add(new EnumField("motion sensor blip size", "medium", "small", "large"));
            this.Fields.Add(new AngleField("turning velocity maximum:degrees per second"));
            this.Fields.Add(new AngleField("turning acceleration maximum:degrees per second squared"));
            this.Fields.Add(new RealFractionField("casual turning modifier:[0,1]"));
            this.Fields.Add(new RealField("autoaim width:world units"));
            this.Fields.Add(new StructField<CharacterPhysicsStructBlock>("physics"));
            this.Fields.Add(new TagReferenceField("impact damage", "jpt!"));
            this.Fields.Add(new TagReferenceField("impact shield damage#if not specified, uses \'impact damage\'", "jpt!"));
            this.Fields.Add(new ExplanationField("death and destruction", ""));
            this.Fields.Add(new RealBoundsField("destroy after death time:seconds#if non-zero, the creature will destroy itself up" +
                        "on death after this much time"));
        }
        /// <summary>
        /// Gets and returns the name of the creature_block tag block.
        /// </summary>
        public override string Name
        {
            get
            {
                return "creature_block";
            }
        }
        /// <summary>
        /// Gets and returns the display name of the creature_block tag block.
        /// </summary>
        public override string DisplayName
        {
            get
            {
                return "creature";
            }
        }
        /// <summary>
        /// Gets and returns the maximum number of elements allowed of the creature_block tag block.
        /// </summary>
        public override int MaximumElementCount
        {
            get
            {
                return 1;
            }
        }
        /// <summary>
        /// Gets and returns the alignment of the creature_block tag block.
        /// </summary>
        public override int Alignment
        {
            get
            {
                return 4;
            }
        }
    }
}
