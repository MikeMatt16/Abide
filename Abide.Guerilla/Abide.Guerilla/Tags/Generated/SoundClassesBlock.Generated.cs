#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Abide.Guerilla.Tags
{
    using Abide.Guerilla.Types;
    using Abide.HaloLibrary;
    using System;
    
    [Abide.Guerilla.Tags.FieldSetAttribute(12, 4)]
    [Abide.Guerilla.Tags.TagGroupAttribute("sound_classes", 1936614252u, 4294967293u, typeof(SoundClassesBlock))]
    public sealed class SoundClassesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
    {
        [Abide.Guerilla.Tags.FieldAttribute("sound classes", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("sound_class_block", 54, typeof(SoundClassBlock))]
        public TagBlock SoundClasses;
        public int Size
        {
            get
            {
                return 12;
            }
        }
        public void Initialize()
        {
        }
        public void Read(System.IO.BinaryReader reader)
        {
        }
        public void Write(System.IO.BinaryWriter writer)
        {
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(92, 4)]
        public sealed class SoundClassBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("max sounds per tag [1,16]#maximum number of sounds playing per individual sound t" +
                "ag", typeof(Int16))]
            public Int16 MaxSoundsPerTag116;
            [Abide.Guerilla.Tags.FieldAttribute("max sounds per object [1,16]#maximum number of sounds of this type playing on an " +
                "object", typeof(Int16))]
            public Int16 MaxSoundsPerObject116;
            [Abide.Guerilla.Tags.FieldAttribute("preemption time:ms#replaces other instances after this many milliseconds", typeof(Int32))]
            public Int32 PreemptionTime;
            [Abide.Guerilla.Tags.FieldAttribute("internal flags*", typeof(Int16))]
            [Abide.Guerilla.Tags.OptionsAttribute(typeof(InternalFlagsOptions), true)]
            public Int16 InternalFlags;
            [Abide.Guerilla.Tags.FieldAttribute("flags", typeof(Int16))]
            [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
            public Int16 Flags;
            [Abide.Guerilla.Tags.FieldAttribute("priority*", typeof(Int16))]
            public Int16 Priority;
            [Abide.Guerilla.Tags.FieldAttribute("cache miss mode*", typeof(Int16))]
            [Abide.Guerilla.Tags.OptionsAttribute(typeof(CacheMissModeOptions), false)]
            public Int16 CacheMissMode;
            [Abide.Guerilla.Tags.FieldAttribute("reverb gain:dB#how much reverb applies to this sound class", typeof(Single))]
            public Single ReverbGain;
            [Abide.Guerilla.Tags.FieldAttribute("override speaker gain:dB", typeof(Single))]
            public Single OverrideSpeakerGain;
            [Abide.Guerilla.Tags.FieldAttribute("cutscene ducking:dB", typeof(Single))]
            public Single CutsceneDucking;
            [Abide.Guerilla.Tags.FieldAttribute("cutscene ducking fade in time:seconds", typeof(Single))]
            public Single CutsceneDuckingFadeInTime;
            [Abide.Guerilla.Tags.FieldAttribute("cutscene ducking sustain time:seconds#how long this lasts after the cutscene ends" +
                "", typeof(Single))]
            public Single CutsceneDuckingSustainTime;
            [Abide.Guerilla.Tags.FieldAttribute("cutscene ducking fade out time:seconds", typeof(Single))]
            public Single CutsceneDuckingFadeOutTime;
            [Abide.Guerilla.Tags.FieldAttribute("scripted dialog ducking:dB", typeof(Single))]
            public Single ScriptedDialogDucking;
            [Abide.Guerilla.Tags.FieldAttribute("scripted dialog ducking fade in time:seconds", typeof(Single))]
            public Single ScriptedDialogDuckingFadeInTime;
            [Abide.Guerilla.Tags.FieldAttribute("scripted dialog ducking sustain time:seconds#how long this lasts after the script" +
                "ed dialog ends", typeof(Single))]
            public Single ScriptedDialogDuckingSustainTime;
            [Abide.Guerilla.Tags.FieldAttribute("scripted dialog ducking fade out time:seconds", typeof(Single))]
            public Single ScriptedDialogDuckingFadeOutTime;
            [Abide.Guerilla.Tags.FieldAttribute("doppler factor", typeof(Single))]
            public Single DopplerFactor;
            [Abide.Guerilla.Tags.FieldAttribute("stereo playback type", typeof(Byte))]
            [Abide.Guerilla.Tags.OptionsAttribute(typeof(StereoPlaybackTypeOptions), false)]
            public Byte StereoPlaybackType;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(3)]
            public Byte[] EmptyString;
            [Abide.Guerilla.Tags.FieldAttribute("transmission multiplier", typeof(Single))]
            public Single TransmissionMultiplier;
            [Abide.Guerilla.Tags.FieldAttribute("obstruction max bend", typeof(Single))]
            public Single ObstructionMaxBend;
            [Abide.Guerilla.Tags.FieldAttribute("occlusion max bend", typeof(Single))]
            public Single OcclusionMaxBend;
            public int Size
            {
                get
                {
                    return 92;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            public enum InternalFlagsOptions
            {
                Valid = 1,
                IsSpeech = 2,
                Scripted = 4,
                StopsWithObject = 8,
                Unused = 16,
                ValidDopplerFactor = 32,
                ValidObstructionFactor = 64,
                Multilingual = 128,
            }
            public enum FlagsOptions
            {
                PlaysDuringPause = 1,
                DryStereoMix = 2,
                NoObjectObstruction = 4,
                UseCenterSpeakerUnspatialized = 8,
                SendMonoToLfe = 16,
                Deterministic = 32,
                UseHugeTransmission = 64,
                AlwaysUseSpeakers = 128,
                DontStripFromMainMenu = 256,
                IgnoreStereoHeadroom = 512,
                LoopFadeOutIsLinear = 1024,
                StopWhenObjectDies = 2048,
                AllowCacheFileEditing = 4096,
            }
            public enum CacheMissModeOptions
            {
                Discard = 0,
                Postpone = 1,
            }
            public enum StereoPlaybackTypeOptions
            {
                FirstPerson = 0,
                Ambient = 1,
            }
        }
    }
}
#pragma warning restore CS1591
