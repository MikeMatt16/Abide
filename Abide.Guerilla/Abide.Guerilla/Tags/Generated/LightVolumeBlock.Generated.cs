#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Abide.Guerilla.Tags
{
    using Abide.Guerilla.Types;
    using Abide.HaloLibrary;
    using System;
    
    [Abide.Guerilla.Tags.FieldSetAttribute(20, 4)]
    [Abide.Guerilla.Tags.TagGroupAttribute("light_volume", 1296519986u, 4294967293u, typeof(LightVolumeBlock))]
    public sealed class LightVolumeBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
    {
        [Abide.Guerilla.Tags.FieldAttribute("falloff distance from camera:world units", typeof(Single))]
        public Single FalloffDistanceFromCamera;
        [Abide.Guerilla.Tags.FieldAttribute("cutoff distance from camera:world units", typeof(Single))]
        public Single CutoffDistanceFromCamera;
        [Abide.Guerilla.Tags.FieldAttribute("volumes", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("volume", 16, typeof(LightVolumeVolumeBlock))]
        public TagBlock Volumes;
        public int Size
        {
            get
            {
                return 20;
            }
        }
        public void Initialize()
        {
        }
        public void Read(System.IO.BinaryReader reader)
        {
        }
        public void Write(System.IO.BinaryWriter writer)
        {
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(188, 4)]
        public sealed class LightVolumeVolumeBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("flags", typeof(Int32))]
            [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
            public Int32 Flags;
            [Abide.Guerilla.Tags.FieldAttribute("bitmap", typeof(TagReference))]
            public TagReference Bitmap;
            [Abide.Guerilla.Tags.FieldAttribute("sprite count:[4,256]", typeof(Int32))]
            public Int32 SpriteCount;
            [Abide.Guerilla.Tags.FieldAttribute("offset function", typeof(ScalarFunctionStructBlock))]
            public ScalarFunctionStructBlock OffsetFunction;
            [Abide.Guerilla.Tags.FieldAttribute("radius function", typeof(ScalarFunctionStructBlock))]
            public ScalarFunctionStructBlock RadiusFunction;
            [Abide.Guerilla.Tags.FieldAttribute("brightness function", typeof(ScalarFunctionStructBlock))]
            public ScalarFunctionStructBlock BrightnessFunction;
            [Abide.Guerilla.Tags.FieldAttribute("color function", typeof(ColorFunctionStructBlock))]
            public ColorFunctionStructBlock ColorFunction;
            [Abide.Guerilla.Tags.FieldAttribute("facing function", typeof(ScalarFunctionStructBlock))]
            public ScalarFunctionStructBlock FacingFunction;
            [Abide.Guerilla.Tags.FieldAttribute("aspect", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("aspect", 1, typeof(LightVolumeAspectBlock))]
            public TagBlock Aspect;
            [Abide.Guerilla.Tags.FieldAttribute("radius frac min*:[0.00390625, 1.0]", typeof(Single))]
            public Single RadiusFracMin;
            [Abide.Guerilla.Tags.FieldAttribute("DEPRECATED!! x-step exponent*:[0.5, 0.875]", typeof(Single))]
            public Single DeprecatedXStepExponent;
            [Abide.Guerilla.Tags.FieldAttribute("DEPRECATED!! x-buffer length*:[32, 512]", typeof(Int32))]
            public Int32 DeprecatedXBufferLength;
            [Abide.Guerilla.Tags.FieldAttribute("x-buffer spacing*:[1, 256]", typeof(Int32))]
            public Int32 XBufferSpacing;
            [Abide.Guerilla.Tags.FieldAttribute("x-buffer min iterations*:[1, 256]", typeof(Int32))]
            public Int32 XBufferMinIterations;
            [Abide.Guerilla.Tags.FieldAttribute("x-buffer max iterations*:[1, 256]", typeof(Int32))]
            public Int32 XBufferMaxIterations;
            [Abide.Guerilla.Tags.FieldAttribute("x-delta max error*:[0.001, 0.1]", typeof(Single))]
            public Single XDeltaMaxError;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString6;
            [Abide.Guerilla.Tags.FieldAttribute("*", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("light_volume_runtime_offset_block", 256, typeof(LightVolumeRuntimeOffsetBlock))]
            public TagBlock EmptyString7;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(48)]
            public Byte[] EmptyString8;
            public int Size
            {
                get
                {
                    return 188;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(36, 4)]
            public sealed class LightVolumeAspectBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("along axis", typeof(ScalarFunctionStructBlock))]
                public ScalarFunctionStructBlock AlongAxis;
                [Abide.Guerilla.Tags.FieldAttribute("away from axis", typeof(ScalarFunctionStructBlock))]
                public ScalarFunctionStructBlock AwayFromAxis;
                [Abide.Guerilla.Tags.FieldAttribute("parallel scale", typeof(Single))]
                public Single ParallelScale1;
                [Abide.Guerilla.Tags.FieldAttribute("parallel threshold angle:degrees", typeof(Single))]
                public Single ParallelThresholdAngle;
                [Abide.Guerilla.Tags.FieldAttribute("parallel exponent", typeof(Single))]
                public Single ParallelExponent;
                public int Size
                {
                    get
                    {
                        return 36;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(12, 4)]
                public sealed class ScalarFunctionStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("function", typeof(MappingFunctionBlock))]
                    public MappingFunctionBlock Function1;
                    public int Size
                    {
                        get
                        {
                            return 12;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(12, 4)]
                    public sealed class MappingFunctionBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("data", typeof(TagBlock))]
                        [Abide.Guerilla.Tags.BlockAttribute("byte_block", 1024, typeof(ByteBlock))]
                        public TagBlock Data;
                        public int Size
                        {
                            get
                            {
                                return 12;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                        [Abide.Guerilla.Tags.FieldSetAttribute(1, 4)]
                        public sealed class ByteBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("Value", typeof(Byte))]
                            public Byte Value;
                            public int Size
                            {
                                get
                                {
                                    return 1;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                        }
                    }
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(8, 4)]
            public sealed class LightVolumeRuntimeOffsetBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Vector2))]
                public Vector2 EmptyString;
                public int Size
                {
                    get
                    {
                        return 8;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(12, 4)]
            public sealed class ScalarFunctionStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("function", typeof(MappingFunctionBlock))]
                public MappingFunctionBlock Function1;
                public int Size
                {
                    get
                    {
                        return 12;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(12, 4)]
                public sealed class MappingFunctionBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("data", typeof(TagBlock))]
                    [Abide.Guerilla.Tags.BlockAttribute("byte_block", 1024, typeof(ByteBlock))]
                    public TagBlock Data;
                    public int Size
                    {
                        get
                        {
                            return 12;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(1, 4)]
                    public sealed class ByteBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Value", typeof(Byte))]
                        public Byte Value;
                        public int Size
                        {
                            get
                            {
                                return 1;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(12, 4)]
            public sealed class ColorFunctionStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("function", typeof(MappingFunctionBlock))]
                public MappingFunctionBlock Function1;
                public int Size
                {
                    get
                    {
                        return 12;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(12, 4)]
                public sealed class MappingFunctionBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("data", typeof(TagBlock))]
                    [Abide.Guerilla.Tags.BlockAttribute("byte_block", 1024, typeof(ByteBlock))]
                    public TagBlock Data;
                    public int Size
                    {
                        get
                        {
                            return 12;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(1, 4)]
                    public sealed class ByteBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Value", typeof(Byte))]
                        public Byte Value;
                        public int Size
                        {
                            get
                            {
                                return 1;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                }
            }
            public enum FlagsOptions
            {
                ForceLinearRadiusFunction = 1,
                ForceLinearOffset = 2,
                ForceDifferentialEvaluation = 4,
                Fuzzy = 8,
                NotScaledByEventDuration = 16,
                ScaledByMarker = 32,
            }
        }
    }
}
#pragma warning restore CS1591
