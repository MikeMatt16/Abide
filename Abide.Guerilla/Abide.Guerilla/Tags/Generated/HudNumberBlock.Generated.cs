#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Abide.Guerilla.Tags
{
    using Abide.Guerilla.Types;
    using Abide.HaloLibrary;
    using System;
    using System.IO;
    
    [FieldSetAttribute(100, 4)]
    [TagGroupAttribute("hud_number", 1752523811u, 4294967293u, typeof(HudNumberBlock))]
    public sealed class HudNumberBlock : AbideTagBlock
    {
        [FieldAttribute("digits bitmap", typeof(TagReference))]
        public TagReference DigitsBitmap;
        [FieldAttribute("bitmap digit width", typeof(Byte))]
        public Byte BitmapDigitWidth;
        [FieldAttribute("screen digit width", typeof(Byte))]
        public Byte ScreenDigitWidth;
        [FieldAttribute("x offset", typeof(Byte))]
        public Byte XOffset;
        [FieldAttribute("y offset", typeof(Byte))]
        public Byte YOffset;
        [FieldAttribute("decimal point width", typeof(Byte))]
        public Byte DecimalPointWidth;
        [FieldAttribute("colon width", typeof(Byte))]
        public Byte ColonWidth;
        [FieldAttribute("", typeof(Byte[]))]
        [PaddingAttribute(2)]
        public Byte[] EmptyString;
        [FieldAttribute("", typeof(Byte[]))]
        [PaddingAttribute(76)]
        public Byte[] EmptyString1;
        public override int Size
        {
            get
            {
                return 100;
            }
        }
        public override void Initialize()
        {
            this.DigitsBitmap = TagReference.Null;
            this.BitmapDigitWidth = 0;
            this.ScreenDigitWidth = 0;
            this.XOffset = 0;
            this.YOffset = 0;
            this.DecimalPointWidth = 0;
            this.ColonWidth = 0;
            this.EmptyString = new byte[2];
            this.EmptyString1 = new byte[76];
        }
        public override void Read(BinaryReader reader)
        {
            this.DigitsBitmap = reader.Read<TagReference>();
            this.BitmapDigitWidth = reader.ReadByte();
            this.ScreenDigitWidth = reader.ReadByte();
            this.XOffset = reader.ReadByte();
            this.YOffset = reader.ReadByte();
            this.DecimalPointWidth = reader.ReadByte();
            this.ColonWidth = reader.ReadByte();
            this.EmptyString = reader.ReadBytes(2);
            this.EmptyString1 = reader.ReadBytes(76);
        }
        public override void Write(BinaryWriter writer)
        {
        }
    }
}
#pragma warning restore CS1591
