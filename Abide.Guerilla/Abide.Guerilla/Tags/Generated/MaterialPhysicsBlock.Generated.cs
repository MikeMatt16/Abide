#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Abide.Guerilla.Tags
{
    using Abide.Guerilla.Types;
    using Abide.HaloLibrary;
    using System;
    
    [Abide.Guerilla.Tags.FieldSetAttribute(20, 4)]
    [Abide.Guerilla.Tags.TagGroupAttribute("material_physics", 1836082292u, 4294967293u, typeof(MaterialPhysicsBlock))]
    public sealed class MaterialPhysicsBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
    {
        [Abide.Guerilla.Tags.FieldAttribute("ground friction scale#fraction of original velocity parallel to the ground after " +
            "one tick", typeof(Single))]
        public Single GroundFrictionScale;
        [Abide.Guerilla.Tags.FieldAttribute("ground friction normal k1 scale#cosine of angle at which friction falls off", typeof(Single))]
        public Single GroundFrictionNormalK1Scale;
        [Abide.Guerilla.Tags.FieldAttribute("ground friction normal k0 scale#cosine of angle at which friction is zero", typeof(Single))]
        public Single GroundFrictionNormalK0Scale;
        [Abide.Guerilla.Tags.FieldAttribute("ground depth scale#depth a point mass rests in the ground", typeof(Single))]
        public Single GroundDepthScale;
        [Abide.Guerilla.Tags.FieldAttribute("ground damp fraction scale#fraction of original velocity perpendicular to the gro" +
            "und after one tick", typeof(Single))]
        public Single GroundDampFractionScale;
        public int Size
        {
            get
            {
                return 20;
            }
        }
        public void Initialize()
        {
        }
        public void Read(System.IO.BinaryReader reader)
        {
        }
        public void Write(System.IO.BinaryWriter writer)
        {
        }
    }
}
#pragma warning restore CS1591
