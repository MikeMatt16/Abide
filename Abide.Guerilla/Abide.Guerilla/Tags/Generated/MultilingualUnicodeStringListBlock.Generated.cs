#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Abide.Guerilla.Tags
{
    using Abide.Guerilla.Types;
    using Abide.HaloLibrary;
    using System;
    using System.IO;
    
    [FieldSetAttribute(68, 4)]
    [TagGroupAttribute("multilingual_unicode_string_list", 1970170211u, 4294967293u, typeof(MultilingualUnicodeStringListBlock))]
    public sealed class MultilingualUnicodeStringListBlock : AbideTagBlock
    {
        private DataList stringDataUtf8List = new DataList(18874368);
        private TagBlockList<MultilingualUnicodeStringReferenceBlock> stringReferencesList = new TagBlockList<MultilingualUnicodeStringReferenceBlock>(9216);
        [FieldAttribute("string references", typeof(TagBlock))]
        [BlockAttribute("multilingual_unicode_string_reference_block", 9216, typeof(MultilingualUnicodeStringReferenceBlock))]
        public TagBlock StringReferences;
        [FieldAttribute("string data utf8", typeof(TagBlock))]
        [DataAttribute(18874368)]
        public TagBlock StringDataUtf8;
        [FieldAttribute("", typeof(Byte[]))]
        [PaddingAttribute(36)]
        public Byte[] EmptyString;
        public DataList StringDataUtf8List
        {
            get
            {
                return this.stringDataUtf8List;
            }
        }
        public TagBlockList<MultilingualUnicodeStringReferenceBlock> StringReferencesList
        {
            get
            {
                return this.stringReferencesList;
            }
        }
        public override int Size
        {
            get
            {
                return 68;
            }
        }
        public override void Initialize()
        {
            this.stringDataUtf8List.Clear();
            this.stringReferencesList.Clear();
            this.StringReferences = TagBlock.Zero;
            this.StringDataUtf8 = TagBlock.Zero;
            this.EmptyString = new byte[36];
        }
        public override void Read(BinaryReader reader)
        {
            this.StringReferences = reader.ReadInt64();
            this.stringReferencesList.Read(reader, this.StringReferences);
            this.StringDataUtf8 = reader.ReadInt64();
            this.EmptyString = reader.ReadBytes(36);
        }
        public override void Write(BinaryWriter writer)
        {
        }
        [FieldSetAttribute(40, 4)]
        public sealed class MultilingualUnicodeStringReferenceBlock : AbideTagBlock
        {
            [FieldAttribute("string id", typeof(StringId))]
            public StringId StringId;
            [FieldAttribute("english offset", typeof(Int32))]
            public Int32 EnglishOffset;
            [FieldAttribute("japanese offset", typeof(Int32))]
            public Int32 JapaneseOffset;
            [FieldAttribute("german offset", typeof(Int32))]
            public Int32 GermanOffset;
            [FieldAttribute("french offset", typeof(Int32))]
            public Int32 FrenchOffset;
            [FieldAttribute("spanish offset", typeof(Int32))]
            public Int32 SpanishOffset;
            [FieldAttribute("italian offset", typeof(Int32))]
            public Int32 ItalianOffset;
            [FieldAttribute("korean offset", typeof(Int32))]
            public Int32 KoreanOffset;
            [FieldAttribute("chinese offset", typeof(Int32))]
            public Int32 ChineseOffset;
            [FieldAttribute("portuguese offset", typeof(Int32))]
            public Int32 PortugueseOffset;
            public override int Size
            {
                get
                {
                    return 40;
                }
            }
            public override void Initialize()
            {
                this.StringId = StringId.Zero;
                this.EnglishOffset = 0;
                this.JapaneseOffset = 0;
                this.GermanOffset = 0;
                this.FrenchOffset = 0;
                this.SpanishOffset = 0;
                this.ItalianOffset = 0;
                this.KoreanOffset = 0;
                this.ChineseOffset = 0;
                this.PortugueseOffset = 0;
            }
            public override void Read(BinaryReader reader)
            {
                this.StringId = reader.ReadInt32();
                this.EnglishOffset = reader.ReadInt32();
                this.JapaneseOffset = reader.ReadInt32();
                this.GermanOffset = reader.ReadInt32();
                this.FrenchOffset = reader.ReadInt32();
                this.SpanishOffset = reader.ReadInt32();
                this.ItalianOffset = reader.ReadInt32();
                this.KoreanOffset = reader.ReadInt32();
                this.ChineseOffset = reader.ReadInt32();
                this.PortugueseOffset = reader.ReadInt32();
            }
            public override void Write(BinaryWriter writer)
            {
            }
        }
    }
}
#pragma warning restore CS1591
