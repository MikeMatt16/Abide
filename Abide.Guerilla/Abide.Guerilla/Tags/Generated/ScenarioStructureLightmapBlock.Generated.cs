#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Abide.Guerilla.Tags
{
    using Abide.Guerilla.Types;
    using Abide.HaloLibrary;
    using System;
    
    [Abide.Guerilla.Tags.FieldSetAttribute(268, 4)]
    [Abide.Guerilla.Tags.TagGroupAttribute("scenario_structure_lightmap", 1819569520u, 4294967293u, typeof(ScenarioStructureLightmapBlock))]
    public sealed class ScenarioStructureLightmapBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
    {
        [Abide.Guerilla.Tags.FieldAttribute("search distance lower bound", typeof(Single))]
        public Single SearchDistanceLowerBound;
        [Abide.Guerilla.Tags.FieldAttribute("search distance upper bound", typeof(Single))]
        public Single SearchDistanceUpperBound;
        [Abide.Guerilla.Tags.FieldAttribute("luminels per world unit", typeof(Single))]
        public Single LuminelsPerWorldUnit;
        [Abide.Guerilla.Tags.FieldAttribute("output white reference", typeof(Single))]
        public Single OutputWhiteReference;
        [Abide.Guerilla.Tags.FieldAttribute("output black reference", typeof(Single))]
        public Single OutputBlackReference;
        [Abide.Guerilla.Tags.FieldAttribute("output schlick parameter", typeof(Single))]
        public Single OutputSchlickParameter;
        [Abide.Guerilla.Tags.FieldAttribute("diffuse map scale", typeof(Single))]
        public Single DiffuseMapScale;
        [Abide.Guerilla.Tags.FieldAttribute("sun scale", typeof(Single))]
        public Single SunScale;
        [Abide.Guerilla.Tags.FieldAttribute("sky scale", typeof(Single))]
        public Single SkyScale;
        [Abide.Guerilla.Tags.FieldAttribute("indirect scale", typeof(Single))]
        public Single IndirectScale;
        [Abide.Guerilla.Tags.FieldAttribute("prt scale", typeof(Single))]
        public Single PrtScale;
        [Abide.Guerilla.Tags.FieldAttribute("surface light scale", typeof(Single))]
        public Single SurfaceLightScale;
        [Abide.Guerilla.Tags.FieldAttribute("scenario light scale", typeof(Single))]
        public Single ScenarioLightScale;
        [Abide.Guerilla.Tags.FieldAttribute("lightprobe interpolation overide", typeof(Single))]
        public Single LightprobeInterpolationOveride;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(72)]
        public Byte[] EmptyString;
        [Abide.Guerilla.Tags.FieldAttribute("lightmap groups", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("structure_lightmap_group_block", 256, typeof(StructureLightmapGroupBlock))]
        public TagBlock LightmapGroups;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(12)]
        public Byte[] EmptyString1;
        [Abide.Guerilla.Tags.FieldAttribute("errors*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("error report category", 64, typeof(GlobalErrorReportCategoriesBlock))]
        public TagBlock Errors;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(104)]
        public Byte[] EmptyString2;
        public int Size
        {
            get
            {
                return 268;
            }
        }
        public void Initialize()
        {
        }
        public void Read(System.IO.BinaryReader reader)
        {
        }
        public void Write(System.IO.BinaryWriter writer)
        {
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(156, 4)]
        public sealed class StructureLightmapGroupBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("type", typeof(Int16))]
            [Abide.Guerilla.Tags.OptionsAttribute(typeof(TypeOptions), false)]
            public Int16 Type;
            [Abide.Guerilla.Tags.FieldAttribute("flags", typeof(Int16))]
            [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
            public Int16 Flags;
            [Abide.Guerilla.Tags.FieldAttribute("structure checksum", typeof(Int32))]
            public Int32 StructureChecksum;
            [Abide.Guerilla.Tags.FieldAttribute("section palette", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("structure_lightmap_palette_color_block", 128, typeof(StructureLightmapPaletteColorBlock))]
            public TagBlock SectionPalette;
            [Abide.Guerilla.Tags.FieldAttribute("writable palettes", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("structure_lightmap_palette_color_block", 128, typeof(StructureLightmapPaletteColorBlock))]
            public TagBlock WritablePalettes;
            [Abide.Guerilla.Tags.FieldAttribute("bitmap group", typeof(TagReference))]
            public TagReference BitmapGroup;
            [Abide.Guerilla.Tags.FieldAttribute("clusters", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("lightmap_geometry_section_block", 512, typeof(LightmapGeometrySectionBlock))]
            public TagBlock Clusters;
            [Abide.Guerilla.Tags.FieldAttribute("cluster render info", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("lightmap_geometry_render_info_block", 1024, typeof(LightmapGeometryRenderInfoBlock))]
            public TagBlock ClusterRenderInfo;
            [Abide.Guerilla.Tags.FieldAttribute("poop definitions", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("lightmap_geometry_section_block", 512, typeof(LightmapGeometrySectionBlock))]
            public TagBlock PoopDefinitions;
            [Abide.Guerilla.Tags.FieldAttribute("lighting environments*", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("structure_lightmap_lighting_environment_block", 1024, typeof(StructureLightmapLightingEnvironmentBlock))]
            public TagBlock LightingEnvironments;
            [Abide.Guerilla.Tags.FieldAttribute("geometry buckets", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("lightmap_vertex_buffer_bucket_block", 1024, typeof(LightmapVertexBufferBucketBlock))]
            public TagBlock GeometryBuckets;
            [Abide.Guerilla.Tags.FieldAttribute("instance render info", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("lightmap_geometry_render_info_block", 1024, typeof(LightmapGeometryRenderInfoBlock))]
            public TagBlock InstanceRenderInfo;
            [Abide.Guerilla.Tags.FieldAttribute("instance bucket refs", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("lightmap_instance_bucket_reference_block", 2000, typeof(LightmapInstanceBucketReferenceBlock))]
            public TagBlock InstanceBucketRefs;
            [Abide.Guerilla.Tags.FieldAttribute("scenery object info", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("lightmap_scenery_object_info_block", 2000, typeof(LightmapSceneryObjectInfoBlock))]
            public TagBlock SceneryObjectInfo;
            [Abide.Guerilla.Tags.FieldAttribute("scenery object bucket refs", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("lightmap_instance_bucket_reference_block", 2000, typeof(LightmapInstanceBucketReferenceBlock))]
            public TagBlock SceneryObjectBucketRefs;
            public int Size
            {
                get
                {
                    return 156;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(1024, 64)]
            public sealed class StructureLightmapPaletteColorBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("FIRST palette color*", typeof(Int32))]
                public Int32 FirstPaletteColor;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(1020)]
                public Byte[] EmptyString;
                public int Size
                {
                    get
                    {
                        return 1024;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(96, 4)]
            public sealed class LightmapGeometrySectionBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("geometry info", typeof(GlobalGeometrySectionInfoStructBlock))]
                public GlobalGeometrySectionInfoStructBlock GeometryInfo;
                [Abide.Guerilla.Tags.FieldAttribute("geometry block info", typeof(GlobalGeometryBlockInfoStructBlock))]
                public GlobalGeometryBlockInfoStructBlock GeometryBlockInfo;
                [Abide.Guerilla.Tags.FieldAttribute("cache data", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("lightmap_geometry_section_cache_data_block", 1, typeof(LightmapGeometrySectionCacheDataBlock))]
                public TagBlock CacheData;
                public int Size
                {
                    get
                    {
                        return 96;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(108, 4)]
                public sealed class LightmapGeometrySectionCacheDataBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("geometry", typeof(GlobalGeometrySectionStructBlock))]
                    public GlobalGeometrySectionStructBlock Geometry;
                    public int Size
                    {
                        get
                        {
                            return 108;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(108, 4)]
                    public sealed class GlobalGeometrySectionStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Parts*", typeof(TagBlock))]
                        [Abide.Guerilla.Tags.BlockAttribute("part", 255, typeof(GlobalGeometryPartBlockNew))]
                        public TagBlock Parts;
                        [Abide.Guerilla.Tags.FieldAttribute("Subparts*", typeof(TagBlock))]
                        [Abide.Guerilla.Tags.BlockAttribute("subparts", 32768, typeof(GlobalSubpartsBlock))]
                        public TagBlock Subparts;
                        [Abide.Guerilla.Tags.FieldAttribute("Visibility Bounds*", typeof(TagBlock))]
                        [Abide.Guerilla.Tags.BlockAttribute("visibility bounds", 32768, typeof(GlobalVisibilityBoundsBlock))]
                        public TagBlock VisibilityBounds;
                        [Abide.Guerilla.Tags.FieldAttribute("Raw Vertices*", typeof(TagBlock))]
                        [Abide.Guerilla.Tags.BlockAttribute("vertex", 32767, typeof(GlobalGeometrySectionRawVertexBlock))]
                        public TagBlock RawVertices;
                        [Abide.Guerilla.Tags.FieldAttribute("Strip Indices*", typeof(TagBlock))]
                        [Abide.Guerilla.Tags.BlockAttribute("index", 65535, typeof(GlobalGeometrySectionStripIndexBlock))]
                        public TagBlock StripIndices;
                        [Abide.Guerilla.Tags.FieldAttribute("mopp Reorder Table*", typeof(TagBlock))]
                        [Abide.Guerilla.Tags.BlockAttribute("index", 65535, typeof(GlobalGeometrySectionStripIndexBlock))]
                        public TagBlock MoppReorderTable;
                        [Abide.Guerilla.Tags.FieldAttribute("Vertex Buffers*", typeof(TagBlock))]
                        [Abide.Guerilla.Tags.BlockAttribute("vertex buffer", 512, typeof(GlobalGeometrySectionVertexBufferBlock))]
                        public TagBlock VertexBuffers;
                        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                        [Abide.Guerilla.Tags.PaddingAttribute(4)]
                        public Byte[] EmptyString;
                        public int Size
                        {
                            get
                            {
                                return 108;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                        [Abide.Guerilla.Tags.FieldSetAttribute(72, 4)]
                        public sealed class GlobalGeometryPartBlockNew : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("Type*", typeof(Int16))]
                            [Abide.Guerilla.Tags.OptionsAttribute(typeof(TypeOptions), false)]
                            public Int16 Type;
                            [Abide.Guerilla.Tags.FieldAttribute("Flags*", typeof(Int16))]
                            [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
                            public Int16 Flags;
                            [Abide.Guerilla.Tags.FieldAttribute("Material*", typeof(Int16))]
                            public Int16 Material;
                            [Abide.Guerilla.Tags.FieldAttribute("Strip Start Index*", typeof(Int16))]
                            public Int16 StripStartIndex;
                            [Abide.Guerilla.Tags.FieldAttribute("Strip Length*", typeof(Int16))]
                            public Int16 StripLength;
                            [Abide.Guerilla.Tags.FieldAttribute("First Subpart Index*", typeof(Int16))]
                            public Int16 FirstSubpartIndex;
                            [Abide.Guerilla.Tags.FieldAttribute("Subpart Count*", typeof(Int16))]
                            public Int16 SubpartCount;
                            [Abide.Guerilla.Tags.FieldAttribute("Max Nodes/Vertex*", typeof(Byte))]
                            public Byte MaxNodesvertex;
                            [Abide.Guerilla.Tags.FieldAttribute("Contributing Compound Node Count*", typeof(Byte))]
                            public Byte ContributingCompoundNodeCount;
                            [Abide.Guerilla.Tags.FieldAttribute("Position*", typeof(Vector3))]
                            public Vector3 Position;
                            [Abide.Guerilla.Tags.FieldAttribute("Node Indices*", typeof(NodeIndicesElement[]))]
                            [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeIndicesElement))]
                            public NodeIndicesElement[] NodeIndices;
                            [Abide.Guerilla.Tags.FieldAttribute("Node Weights*", typeof(NodeWeightsElement[]))]
                            [Abide.Guerilla.Tags.ArrayAttribute(3, typeof(NodeWeightsElement))]
                            public NodeWeightsElement[] NodeWeights;
                            [Abide.Guerilla.Tags.FieldAttribute("lod mipmap magic number*", typeof(Single))]
                            public Single LodMipmapMagicNumber;
                            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                            [Abide.Guerilla.Tags.PaddingAttribute(24)]
                            public Byte[] EmptyString;
                            public int Size
                            {
                                get
                                {
                                    return 72;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                            public sealed class NodeIndicesElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                            {
                                [Abide.Guerilla.Tags.FieldAttribute("Node Index*", typeof(Byte))]
                                public Byte NodeIndex;
                                public int Size
                                {
                                    get
                                    {
                                        return 0;
                                    }
                                }
                                public void Initialize()
                                {
                                }
                                public void Read(System.IO.BinaryReader reader)
                                {
                                }
                                public void Write(System.IO.BinaryWriter writer)
                                {
                                }
                            }
                            public sealed class NodeWeightsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                            {
                                [Abide.Guerilla.Tags.FieldAttribute("Node Weight*", typeof(Single))]
                                public Single NodeWeight;
                                public int Size
                                {
                                    get
                                    {
                                        return 0;
                                    }
                                }
                                public void Initialize()
                                {
                                }
                                public void Read(System.IO.BinaryReader reader)
                                {
                                }
                                public void Write(System.IO.BinaryWriter writer)
                                {
                                }
                            }
                            public enum TypeOptions
                            {
                                NotDrawn = 0,
                                OpaqueShadowOnly = 1,
                                OpaqueShadowCasting = 2,
                                OpaqueNonshadowing = 3,
                                Transparent = 4,
                                LightmapOnly = 5,
                            }
                            public enum FlagsOptions
                            {
                                Decalable = 1,
                                NewPartTypes = 2,
                                DislikesPhotons = 4,
                                OverrideTriangleList = 8,
                                IgnoredByLightmapper = 16,
                            }
                        }
                        [Abide.Guerilla.Tags.FieldSetAttribute(8, 4)]
                        public sealed class GlobalSubpartsBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("indices_start_index*", typeof(Int16))]
                            public Int16 IndicesStartIndex;
                            [Abide.Guerilla.Tags.FieldAttribute("indices_length*", typeof(Int16))]
                            public Int16 IndicesLength;
                            [Abide.Guerilla.Tags.FieldAttribute("visibility_bounds_index*", typeof(Int16))]
                            public Int16 VisibilityBoundsIndex;
                            [Abide.Guerilla.Tags.FieldAttribute("Part Index*", typeof(Int16))]
                            public Int16 PartIndex;
                            public int Size
                            {
                                get
                                {
                                    return 8;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                        }
                        [Abide.Guerilla.Tags.FieldSetAttribute(20, 4)]
                        public sealed class GlobalVisibilityBoundsBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("Position x*", typeof(Single))]
                            public Single PositionX;
                            [Abide.Guerilla.Tags.FieldAttribute("Position y*", typeof(Single))]
                            public Single PositionY;
                            [Abide.Guerilla.Tags.FieldAttribute("Position z*", typeof(Single))]
                            public Single PositionZ;
                            [Abide.Guerilla.Tags.FieldAttribute("Radius*", typeof(Single))]
                            public Single Radius;
                            [Abide.Guerilla.Tags.FieldAttribute("Node 0*", typeof(Byte))]
                            public Byte Node0;
                            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                            [Abide.Guerilla.Tags.PaddingAttribute(3)]
                            public Byte[] EmptyString;
                            public int Size
                            {
                                get
                                {
                                    return 20;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                        }
                        [Abide.Guerilla.Tags.FieldSetAttribute(196, 4)]
                        public sealed class GlobalGeometrySectionRawVertexBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("Position*", typeof(Vector3))]
                            public Vector3 Position;
                            [Abide.Guerilla.Tags.FieldAttribute("Node Indices (OLD)*", typeof(NodeIndicesOldElement[]))]
                            [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeIndicesOldElement))]
                            public NodeIndicesOldElement[] NodeIndicesOld;
                            [Abide.Guerilla.Tags.FieldAttribute("Node Weights*", typeof(NodeWeightsElement[]))]
                            [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeWeightsElement))]
                            public NodeWeightsElement[] NodeWeights;
                            [Abide.Guerilla.Tags.FieldAttribute("Node Indices (NEW)*", typeof(NodeIndicesNewElement[]))]
                            [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeIndicesNewElement))]
                            public NodeIndicesNewElement[] NodeIndicesNew;
                            [Abide.Guerilla.Tags.FieldAttribute("Use New Node Indices*", typeof(Int32))]
                            public Int32 UseNewNodeIndices;
                            [Abide.Guerilla.Tags.FieldAttribute("Adjusted Compound Node Index*", typeof(Int32))]
                            public Int32 AdjustedCompoundNodeIndex;
                            [Abide.Guerilla.Tags.FieldAttribute("texcoord*", typeof(Vector2))]
                            public Vector2 Texcoord;
                            [Abide.Guerilla.Tags.FieldAttribute("Normal*", typeof(Vector3))]
                            public Vector3 Normal;
                            [Abide.Guerilla.Tags.FieldAttribute("Binormal*", typeof(Vector3))]
                            public Vector3 Binormal;
                            [Abide.Guerilla.Tags.FieldAttribute("Tangent*", typeof(Vector3))]
                            public Vector3 Tangent;
                            [Abide.Guerilla.Tags.FieldAttribute("Anisotropic Binormal*", typeof(Vector3))]
                            public Vector3 AnisotropicBinormal;
                            [Abide.Guerilla.Tags.FieldAttribute("Secondary texcoord*", typeof(Vector2))]
                            public Vector2 SecondaryTexcoord;
                            [Abide.Guerilla.Tags.FieldAttribute("Primary Lightmap Color", typeof(ColorRgbF))]
                            public ColorRgbF PrimaryLightmapColor;
                            [Abide.Guerilla.Tags.FieldAttribute("Primary Lightmap texcoord", typeof(Vector2))]
                            public Vector2 PrimaryLightmapTexcoord;
                            [Abide.Guerilla.Tags.FieldAttribute("Primary Lightmap Incident Direction", typeof(Vector3))]
                            public Vector3 PrimaryLightmapIncidentDirection;
                            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                            [Abide.Guerilla.Tags.PaddingAttribute(12)]
                            public Byte[] EmptyString;
                            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                            [Abide.Guerilla.Tags.PaddingAttribute(8)]
                            public Byte[] EmptyString1;
                            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                            [Abide.Guerilla.Tags.PaddingAttribute(12)]
                            public Byte[] EmptyString2;
                            public int Size
                            {
                                get
                                {
                                    return 196;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                            public sealed class NodeIndicesOldElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                            {
                                [Abide.Guerilla.Tags.FieldAttribute("Node Index (OLD)*", typeof(Int32))]
                                public Int32 NodeIndexOld;
                                public int Size
                                {
                                    get
                                    {
                                        return 0;
                                    }
                                }
                                public void Initialize()
                                {
                                }
                                public void Read(System.IO.BinaryReader reader)
                                {
                                }
                                public void Write(System.IO.BinaryWriter writer)
                                {
                                }
                            }
                            public sealed class NodeWeightsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                            {
                                [Abide.Guerilla.Tags.FieldAttribute("node_weight*", typeof(Single))]
                                public Single NodeWeight;
                                public int Size
                                {
                                    get
                                    {
                                        return 0;
                                    }
                                }
                                public void Initialize()
                                {
                                }
                                public void Read(System.IO.BinaryReader reader)
                                {
                                }
                                public void Write(System.IO.BinaryWriter writer)
                                {
                                }
                            }
                            public sealed class NodeIndicesNewElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                            {
                                [Abide.Guerilla.Tags.FieldAttribute("Node Index (NEW)*", typeof(Int32))]
                                public Int32 NodeIndexNew;
                                public int Size
                                {
                                    get
                                    {
                                        return 0;
                                    }
                                }
                                public void Initialize()
                                {
                                }
                                public void Read(System.IO.BinaryReader reader)
                                {
                                }
                                public void Write(System.IO.BinaryWriter writer)
                                {
                                }
                            }
                        }
                        [Abide.Guerilla.Tags.FieldSetAttribute(2, 4)]
                        public sealed class GlobalGeometrySectionStripIndexBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("Index*", typeof(Int16))]
                            public Int16 Index;
                            public int Size
                            {
                                get
                                {
                                    return 2;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                        }
                        [Abide.Guerilla.Tags.FieldSetAttribute(32, 4)]
                        public sealed class GlobalGeometrySectionVertexBufferBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            public int Size
                            {
                                get
                                {
                                    return 32;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                        }
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(44, 4)]
                public sealed class GlobalGeometrySectionInfoStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("Total Vertex Count*", typeof(Int16))]
                    public Int16 TotalVertexCount;
                    [Abide.Guerilla.Tags.FieldAttribute("Total Triangle Count*", typeof(Int16))]
                    public Int16 TotalTriangleCount;
                    [Abide.Guerilla.Tags.FieldAttribute("Total Part Count*", typeof(Int16))]
                    public Int16 TotalPartCount;
                    [Abide.Guerilla.Tags.FieldAttribute("Shadow-Casting Triangle Count*", typeof(Int16))]
                    public Int16 ShadowCastingTriangleCount;
                    [Abide.Guerilla.Tags.FieldAttribute("Shadow-Casting Part Count*", typeof(Int16))]
                    public Int16 ShadowCastingPartCount;
                    [Abide.Guerilla.Tags.FieldAttribute("Opaque Point Count*", typeof(Int16))]
                    public Int16 OpaquePointCount;
                    [Abide.Guerilla.Tags.FieldAttribute("Opaque Vertex Count*", typeof(Int16))]
                    public Int16 OpaqueVertexCount;
                    [Abide.Guerilla.Tags.FieldAttribute("Opaque Part Count*", typeof(Int16))]
                    public Int16 OpaquePartCount;
                    [Abide.Guerilla.Tags.FieldAttribute("Opaque Max Nodes/Vertex*", typeof(Byte))]
                    public Byte OpaqueMaxNodesvertex;
                    [Abide.Guerilla.Tags.FieldAttribute("Transparent Max Nodes/Vertex*", typeof(Byte))]
                    public Byte TransparentMaxNodesvertex;
                    [Abide.Guerilla.Tags.FieldAttribute("Shadow-Casting Rigid Triangle Count*", typeof(Int16))]
                    public Int16 ShadowCastingRigidTriangleCount;
                    [Abide.Guerilla.Tags.FieldAttribute("Geometry Classification*", typeof(Int16))]
                    [Abide.Guerilla.Tags.OptionsAttribute(typeof(GeometryClassificationOptions), false)]
                    public Int16 GeometryClassification;
                    [Abide.Guerilla.Tags.FieldAttribute("Geometry Compression Flags*", typeof(Int16))]
                    [Abide.Guerilla.Tags.OptionsAttribute(typeof(GeometryCompressionFlagsOptions), true)]
                    public Int16 GeometryCompressionFlags;
                    [Abide.Guerilla.Tags.FieldAttribute("EMPTY STRING", typeof(TagBlock))]
                    [Abide.Guerilla.Tags.BlockAttribute("compression info", 1, typeof(GlobalGeometryCompressionInfoBlock))]
                    public TagBlock EmptyString;
                    [Abide.Guerilla.Tags.FieldAttribute("Hardware Node Count*", typeof(Byte))]
                    public Byte HardwareNodeCount;
                    [Abide.Guerilla.Tags.FieldAttribute("Node Map Size*", typeof(Byte))]
                    public Byte NodeMapSize;
                    [Abide.Guerilla.Tags.FieldAttribute("Software Plane Count*", typeof(Int16))]
                    public Int16 SoftwarePlaneCount;
                    [Abide.Guerilla.Tags.FieldAttribute("total subpart_cont*", typeof(Int16))]
                    public Int16 TotalSubpartCont;
                    [Abide.Guerilla.Tags.FieldAttribute("Section Lighting Flags*", typeof(Int16))]
                    [Abide.Guerilla.Tags.OptionsAttribute(typeof(SectionLightingFlagsOptions), true)]
                    public Int16 SectionLightingFlags;
                    public int Size
                    {
                        get
                        {
                            return 44;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(56, 4)]
                    public sealed class GlobalGeometryCompressionInfoBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        public int Size
                        {
                            get
                            {
                                return 56;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                    public enum GeometryClassificationOptions
                    {
                        Worldspace = 0,
                        Rigid = 1,
                        RigidBoned = 2,
                        Skinned = 3,
                        UnsupportedReimport = 4,
                    }
                    public enum GeometryCompressionFlagsOptions
                    {
                        CompressedPosition = 1,
                        CompressedTexcoord = 2,
                        CompressedSecondaryTexcoord = 4,
                    }
                    public enum SectionLightingFlagsOptions
                    {
                        HasLmTexcoords = 1,
                        HasLmIncRad = 2,
                        HasLmColors = 4,
                        HasLmPrt = 8,
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(40, 4)]
                public sealed class GlobalGeometryBlockInfoStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("Block Offset*", typeof(Int32))]
                    public Int32 BlockOffset;
                    [Abide.Guerilla.Tags.FieldAttribute("Block Size*", typeof(Int32))]
                    public Int32 BlockSize;
                    [Abide.Guerilla.Tags.FieldAttribute("Section Data Size*", typeof(Int32))]
                    public Int32 SectionDataSize;
                    [Abide.Guerilla.Tags.FieldAttribute("Resource Data Size*", typeof(Int32))]
                    public Int32 ResourceDataSize;
                    [Abide.Guerilla.Tags.FieldAttribute("Resources*", typeof(TagBlock))]
                    [Abide.Guerilla.Tags.BlockAttribute("block resources", 1024, typeof(GlobalGeometryBlockResourceBlock))]
                    public TagBlock Resources;
                    [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                    [Abide.Guerilla.Tags.PaddingAttribute(4)]
                    public Byte[] EmptyString;
                    [Abide.Guerilla.Tags.FieldAttribute("Owner Tag Section Offset*", typeof(Int16))]
                    public Int16 OwnerTagSectionOffset;
                    [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                    [Abide.Guerilla.Tags.PaddingAttribute(2)]
                    public Byte[] EmptyString1;
                    [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                    [Abide.Guerilla.Tags.PaddingAttribute(4)]
                    public Byte[] EmptyString2;
                    public int Size
                    {
                        get
                        {
                            return 40;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(16, 4)]
                    public sealed class GlobalGeometryBlockResourceBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Type*", typeof(Byte))]
                        [Abide.Guerilla.Tags.OptionsAttribute(typeof(TypeOptions), false)]
                        public Byte Type;
                        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                        [Abide.Guerilla.Tags.PaddingAttribute(3)]
                        public Byte[] EmptyString;
                        [Abide.Guerilla.Tags.FieldAttribute("Primary Locator*", typeof(Int16))]
                        public Int16 PrimaryLocator;
                        [Abide.Guerilla.Tags.FieldAttribute("Secondary Locator*", typeof(Int16))]
                        public Int16 SecondaryLocator;
                        [Abide.Guerilla.Tags.FieldAttribute("Resource Data Size*", typeof(Int32))]
                        public Int32 ResourceDataSize;
                        [Abide.Guerilla.Tags.FieldAttribute("Resource Data Offset*", typeof(Int32))]
                        public Int32 ResourceDataOffset;
                        public int Size
                        {
                            get
                            {
                                return 16;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                        public enum TypeOptions
                        {
                            TagBlock = 0,
                            TagData = 1,
                            VertexBuffer = 2,
                        }
                    }
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(4, 4)]
            public sealed class LightmapGeometryRenderInfoBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("bitmap index", typeof(Int16))]
                public Int16 BitmapIndex;
                [Abide.Guerilla.Tags.FieldAttribute("palette index", typeof(Byte))]
                public Byte PaletteIndex;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(1)]
                public Byte[] EmptyString;
                public int Size
                {
                    get
                    {
                        return 4;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(220, 4)]
            public sealed class StructureLightmapLightingEnvironmentBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("sample_point*", typeof(Vector3))]
                public Vector3 SamplePoint;
                [Abide.Guerilla.Tags.FieldAttribute("red coefficients*", typeof(RedCoefficientsElement[]))]
                [Abide.Guerilla.Tags.ArrayAttribute(9, typeof(RedCoefficientsElement))]
                public RedCoefficientsElement[] RedCoefficients;
                [Abide.Guerilla.Tags.FieldAttribute("green coefficients*", typeof(GreenCoefficientsElement[]))]
                [Abide.Guerilla.Tags.ArrayAttribute(9, typeof(GreenCoefficientsElement))]
                public GreenCoefficientsElement[] GreenCoefficients;
                [Abide.Guerilla.Tags.FieldAttribute("blue coefficients*", typeof(BlueCoefficientsElement[]))]
                [Abide.Guerilla.Tags.ArrayAttribute(9, typeof(BlueCoefficientsElement))]
                public BlueCoefficientsElement[] BlueCoefficients;
                [Abide.Guerilla.Tags.FieldAttribute("mean incoming light direction", typeof(Vector3))]
                public Vector3 MeanIncomingLightDirection;
                [Abide.Guerilla.Tags.FieldAttribute("incoming light intensity", typeof(Vector3))]
                public Vector3 IncomingLightIntensity;
                [Abide.Guerilla.Tags.FieldAttribute("specular bitmap index", typeof(Int32))]
                public Int32 SpecularBitmapIndex;
                [Abide.Guerilla.Tags.FieldAttribute("rotation axis", typeof(Vector3))]
                public Vector3 RotationAxis;
                [Abide.Guerilla.Tags.FieldAttribute("rotation speed", typeof(Single))]
                public Single RotationSpeed;
                [Abide.Guerilla.Tags.FieldAttribute("bump direction", typeof(Vector3))]
                public Vector3 BumpDirection;
                [Abide.Guerilla.Tags.FieldAttribute("color tint", typeof(ColorRgbF))]
                public ColorRgbF ColorTint;
                [Abide.Guerilla.Tags.FieldAttribute("procedural overide", typeof(Int16))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(ProceduralOverideOptions), false)]
                public Int16 ProceduralOveride;
                [Abide.Guerilla.Tags.FieldAttribute("flags", typeof(Int16))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
                public Int16 Flags;
                [Abide.Guerilla.Tags.FieldAttribute("procedural param0", typeof(Vector3))]
                public Vector3 ProceduralParam0;
                [Abide.Guerilla.Tags.FieldAttribute("procedural param1.xyz", typeof(Vector3))]
                public Vector3 ProceduralParam1xyz;
                [Abide.Guerilla.Tags.FieldAttribute("procedural param1.w", typeof(Single))]
                public Single ProceduralParam1w;
                public int Size
                {
                    get
                    {
                        return 220;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                public sealed class RedCoefficientsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("red coefficient*", typeof(Single))]
                    public Single RedCoefficient;
                    public int Size
                    {
                        get
                        {
                            return 0;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                }
                public sealed class GreenCoefficientsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("green coefficient*", typeof(Single))]
                    public Single GreenCoefficient;
                    public int Size
                    {
                        get
                        {
                            return 0;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                }
                public sealed class BlueCoefficientsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("blue coefficient*", typeof(Single))]
                    public Single BlueCoefficient;
                    public int Size
                    {
                        get
                        {
                            return 0;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                }
                public enum ProceduralOverideOptions
                {
                    NoOveride = 0,
                    CieClearSky = 1,
                    CiePartlyCloudy = 2,
                    CieCloudy = 3,
                    DirectionalLight = 4,
                    ConeLight = 5,
                    SphereLight = 6,
                    HemisphereLight = 7,
                }
                public enum FlagsOptions
                {
                    LeaveMeAlonePlease = 1,
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(68, 4)]
            public sealed class LightmapVertexBufferBucketBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("flags", typeof(Int16))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
                public Int16 Flags;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(2)]
                public Byte[] EmptyString;
                [Abide.Guerilla.Tags.FieldAttribute("raw vertices", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("vertex", 32767, typeof(LightmapBucketRawVertexBlock))]
                public TagBlock RawVertices;
                [Abide.Guerilla.Tags.FieldAttribute("geometry block info", typeof(GlobalGeometryBlockInfoStructBlock))]
                public GlobalGeometryBlockInfoStructBlock GeometryBlockInfo;
                [Abide.Guerilla.Tags.FieldAttribute("cache data", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("lightmap_vertex_buffer_bucket_cache_data_block", 1, typeof(LightmapVertexBufferBucketCacheDataBlock))]
                public TagBlock CacheData;
                public int Size
                {
                    get
                    {
                        return 68;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(24, 4)]
                public sealed class LightmapBucketRawVertexBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("primary lightmap color", typeof(ColorRgbF))]
                    public ColorRgbF PrimaryLightmapColor;
                    [Abide.Guerilla.Tags.FieldAttribute("primary lightmap incident direction", typeof(Vector3))]
                    public Vector3 PrimaryLightmapIncidentDirection;
                    public int Size
                    {
                        get
                        {
                            return 24;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(12, 4)]
                public sealed class LightmapVertexBufferBucketCacheDataBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("vertex buffers*", typeof(TagBlock))]
                    [Abide.Guerilla.Tags.BlockAttribute("vertex buffer", 512, typeof(GlobalGeometrySectionVertexBufferBlock))]
                    public TagBlock VertexBuffers;
                    public int Size
                    {
                        get
                        {
                            return 12;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(32, 4)]
                    public sealed class GlobalGeometrySectionVertexBufferBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        public int Size
                        {
                            get
                            {
                                return 32;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(40, 4)]
                public sealed class GlobalGeometryBlockInfoStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("Block Offset*", typeof(Int32))]
                    public Int32 BlockOffset;
                    [Abide.Guerilla.Tags.FieldAttribute("Block Size*", typeof(Int32))]
                    public Int32 BlockSize;
                    [Abide.Guerilla.Tags.FieldAttribute("Section Data Size*", typeof(Int32))]
                    public Int32 SectionDataSize;
                    [Abide.Guerilla.Tags.FieldAttribute("Resource Data Size*", typeof(Int32))]
                    public Int32 ResourceDataSize;
                    [Abide.Guerilla.Tags.FieldAttribute("Resources*", typeof(TagBlock))]
                    [Abide.Guerilla.Tags.BlockAttribute("block resources", 1024, typeof(GlobalGeometryBlockResourceBlock))]
                    public TagBlock Resources;
                    [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                    [Abide.Guerilla.Tags.PaddingAttribute(4)]
                    public Byte[] EmptyString;
                    [Abide.Guerilla.Tags.FieldAttribute("Owner Tag Section Offset*", typeof(Int16))]
                    public Int16 OwnerTagSectionOffset;
                    [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                    [Abide.Guerilla.Tags.PaddingAttribute(2)]
                    public Byte[] EmptyString1;
                    [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                    [Abide.Guerilla.Tags.PaddingAttribute(4)]
                    public Byte[] EmptyString2;
                    public int Size
                    {
                        get
                        {
                            return 40;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(16, 4)]
                    public sealed class GlobalGeometryBlockResourceBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Type*", typeof(Byte))]
                        [Abide.Guerilla.Tags.OptionsAttribute(typeof(TypeOptions), false)]
                        public Byte Type;
                        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                        [Abide.Guerilla.Tags.PaddingAttribute(3)]
                        public Byte[] EmptyString;
                        [Abide.Guerilla.Tags.FieldAttribute("Primary Locator*", typeof(Int16))]
                        public Int16 PrimaryLocator;
                        [Abide.Guerilla.Tags.FieldAttribute("Secondary Locator*", typeof(Int16))]
                        public Int16 SecondaryLocator;
                        [Abide.Guerilla.Tags.FieldAttribute("Resource Data Size*", typeof(Int32))]
                        public Int32 ResourceDataSize;
                        [Abide.Guerilla.Tags.FieldAttribute("Resource Data Offset*", typeof(Int32))]
                        public Int32 ResourceDataOffset;
                        public int Size
                        {
                            get
                            {
                                return 16;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                        public enum TypeOptions
                        {
                            TagBlock = 0,
                            TagData = 1,
                            VertexBuffer = 2,
                        }
                    }
                }
                public enum FlagsOptions
                {
                    IncidentDirection = 1,
                    Color = 2,
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(16, 4)]
            public sealed class LightmapInstanceBucketReferenceBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("flags", typeof(Int16))]
                public Int16 Flags;
                [Abide.Guerilla.Tags.FieldAttribute("bucket index", typeof(Int16))]
                public Int16 BucketIndex;
                [Abide.Guerilla.Tags.FieldAttribute("section offsets", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("lightmap_instance_bucket_section_offset_block", 255, typeof(LightmapInstanceBucketSectionOffsetBlock))]
                public TagBlock SectionOffsets;
                public int Size
                {
                    get
                    {
                        return 16;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(2, 4)]
                public sealed class LightmapInstanceBucketSectionOffsetBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("section offset*", typeof(Int16))]
                    public Int16 SectionOffset;
                    public int Size
                    {
                        get
                        {
                            return 2;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(12, 4)]
            public sealed class LightmapSceneryObjectInfoBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("unique ID", typeof(Int32))]
                public Int32 UniqueId;
                [Abide.Guerilla.Tags.FieldAttribute("origin BSP index", typeof(Int16))]
                public Int16 OriginBspIndex;
                [Abide.Guerilla.Tags.FieldAttribute("type", typeof(Byte))]
                public Byte Type;
                [Abide.Guerilla.Tags.FieldAttribute("source", typeof(Byte))]
                public Byte Source;
                [Abide.Guerilla.Tags.FieldAttribute("render model checksum", typeof(Int32))]
                public Int32 RenderModelChecksum;
                public int Size
                {
                    get
                    {
                        return 12;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
            public enum TypeOptions
            {
                Normal = 0,
            }
            public enum FlagsOptions
            {
                Unused = 1,
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(680, 4)]
        public sealed class GlobalErrorReportCategoriesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("Name^*", typeof(String256))]
            public String256 Name;
            [Abide.Guerilla.Tags.FieldAttribute("Report Type*", typeof(Int16))]
            [Abide.Guerilla.Tags.OptionsAttribute(typeof(ReportTypeOptions), false)]
            public Int16 ReportType;
            [Abide.Guerilla.Tags.FieldAttribute("Flags*", typeof(Int16))]
            [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
            public Int16 Flags;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(2)]
            public Byte[] EmptyString;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(2)]
            public Byte[] EmptyString1;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(404)]
            public Byte[] EmptyString2;
            [Abide.Guerilla.Tags.FieldAttribute("Reports*", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("error report", 1024, typeof(ErrorReportsBlock))]
            public TagBlock Reports;
            public int Size
            {
                get
                {
                    return 680;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(644, 4)]
            public sealed class ErrorReportsBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("Type*", typeof(Int16))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(TypeOptions), false)]
                public Int16 Type;
                [Abide.Guerilla.Tags.FieldAttribute("Flags*", typeof(Int16))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
                public Int16 Flags;
                [Abide.Guerilla.Tags.FieldAttribute("Source Filename*", typeof(String32))]
                public String32 SourceFilename;
                [Abide.Guerilla.Tags.FieldAttribute("Source Line Number*", typeof(Int32))]
                public Int32 SourceLineNumber;
                [Abide.Guerilla.Tags.FieldAttribute("Vertices*", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("error report vertex", 1024, typeof(ErrorReportVerticesBlock))]
                public TagBlock Vertices;
                [Abide.Guerilla.Tags.FieldAttribute("Vectors*", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("error report vector", 1024, typeof(ErrorReportVectorsBlock))]
                public TagBlock Vectors;
                [Abide.Guerilla.Tags.FieldAttribute("Lines*", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("error report line", 1024, typeof(ErrorReportLinesBlock))]
                public TagBlock Lines;
                [Abide.Guerilla.Tags.FieldAttribute("Triangles*", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("error report triangle", 1024, typeof(ErrorReportTrianglesBlock))]
                public TagBlock Triangles;
                [Abide.Guerilla.Tags.FieldAttribute("Quads*", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("error report quad", 1024, typeof(ErrorReportQuadsBlock))]
                public TagBlock Quads;
                [Abide.Guerilla.Tags.FieldAttribute("Comments*", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("error report comment", 1024, typeof(ErrorReportCommentsBlock))]
                public TagBlock Comments;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(380)]
                public Byte[] EmptyString;
                [Abide.Guerilla.Tags.FieldAttribute("Report Key*", typeof(Int32))]
                public Int32 ReportKey;
                [Abide.Guerilla.Tags.FieldAttribute("Node Index*", typeof(Int32))]
                public Int32 NodeIndex;
                [Abide.Guerilla.Tags.FieldAttribute("Color*", typeof(ColorArgbF))]
                public ColorArgbF Color;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(84)]
                public Byte[] EmptyString1;
                public int Size
                {
                    get
                    {
                        return 644;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(52, 4)]
                public sealed class ErrorReportVerticesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("Position*", typeof(Vector3))]
                    public Vector3 Position;
                    [Abide.Guerilla.Tags.FieldAttribute("Node Indices*", typeof(NodeIndicesElement[]))]
                    [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeIndicesElement))]
                    public NodeIndicesElement[] NodeIndices;
                    [Abide.Guerilla.Tags.FieldAttribute("Node Weights*", typeof(NodeWeightsElement[]))]
                    [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeWeightsElement))]
                    public NodeWeightsElement[] NodeWeights;
                    [Abide.Guerilla.Tags.FieldAttribute("Color*", typeof(ColorArgbF))]
                    public ColorArgbF Color;
                    [Abide.Guerilla.Tags.FieldAttribute("Screen Size*", typeof(Single))]
                    public Single ScreenSize;
                    public int Size
                    {
                        get
                        {
                            return 52;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    public sealed class NodeIndicesElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Node Index*", typeof(Byte))]
                        public Byte NodeIndex;
                        public int Size
                        {
                            get
                            {
                                return 0;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                    public sealed class NodeWeightsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Node Weight*", typeof(Single))]
                        public Single NodeWeight;
                        public int Size
                        {
                            get
                            {
                                return 0;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(64, 4)]
                public sealed class ErrorReportVectorsBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("Position*", typeof(Vector3))]
                    public Vector3 Position;
                    [Abide.Guerilla.Tags.FieldAttribute("Node Indices*", typeof(NodeIndicesElement[]))]
                    [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeIndicesElement))]
                    public NodeIndicesElement[] NodeIndices;
                    [Abide.Guerilla.Tags.FieldAttribute("Node Weights*", typeof(NodeWeightsElement[]))]
                    [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeWeightsElement))]
                    public NodeWeightsElement[] NodeWeights;
                    [Abide.Guerilla.Tags.FieldAttribute("Color*", typeof(ColorArgbF))]
                    public ColorArgbF Color;
                    [Abide.Guerilla.Tags.FieldAttribute("Normal*", typeof(Vector3))]
                    public Vector3 Normal;
                    [Abide.Guerilla.Tags.FieldAttribute("Screen Length*", typeof(Single))]
                    public Single ScreenLength;
                    public int Size
                    {
                        get
                        {
                            return 64;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    public sealed class NodeIndicesElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Node Index*", typeof(Byte))]
                        public Byte NodeIndex;
                        public int Size
                        {
                            get
                            {
                                return 0;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                    public sealed class NodeWeightsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Node Weight*", typeof(Single))]
                        public Single NodeWeight;
                        public int Size
                        {
                            get
                            {
                                return 0;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(80, 4)]
                public sealed class ErrorReportLinesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("Points*", typeof(PointsElement[]))]
                    [Abide.Guerilla.Tags.ArrayAttribute(2, typeof(PointsElement))]
                    public PointsElement[] Points;
                    [Abide.Guerilla.Tags.FieldAttribute("Node Weights*", typeof(NodeWeightsElement[]))]
                    [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeWeightsElement))]
                    public NodeWeightsElement[] NodeWeights;
                    [Abide.Guerilla.Tags.FieldAttribute("Color*", typeof(ColorArgbF))]
                    public ColorArgbF Color;
                    public int Size
                    {
                        get
                        {
                            return 80;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    public sealed class PointsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Position*", typeof(Vector3))]
                        public Vector3 Position;
                        [Abide.Guerilla.Tags.FieldAttribute("Node Indices*", typeof(NodeIndicesElement[]))]
                        [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeIndicesElement))]
                        public NodeIndicesElement[] NodeIndices;
                        [Abide.Guerilla.Tags.FieldAttribute("Node Weights*", typeof(NodeWeightsElement[]))]
                        [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeWeightsElement))]
                        public NodeWeightsElement[] NodeWeights;
                        public int Size
                        {
                            get
                            {
                                return 0;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                        public sealed class NodeIndicesElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("Node Index*", typeof(Byte))]
                            public Byte NodeIndex;
                            public int Size
                            {
                                get
                                {
                                    return 0;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                        }
                        public sealed class NodeWeightsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("Node Weight*", typeof(Single))]
                            public Single NodeWeight;
                            public int Size
                            {
                                get
                                {
                                    return 0;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                        }
                    }
                    public sealed class NodeWeightsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Node Weight*", typeof(Single))]
                        public Single NodeWeight;
                        public int Size
                        {
                            get
                            {
                                return 0;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(112, 4)]
                public sealed class ErrorReportTrianglesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("Points*", typeof(PointsElement[]))]
                    [Abide.Guerilla.Tags.ArrayAttribute(3, typeof(PointsElement))]
                    public PointsElement[] Points;
                    [Abide.Guerilla.Tags.FieldAttribute("Node Weights*", typeof(NodeWeightsElement[]))]
                    [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeWeightsElement))]
                    public NodeWeightsElement[] NodeWeights;
                    [Abide.Guerilla.Tags.FieldAttribute("Color*", typeof(ColorArgbF))]
                    public ColorArgbF Color;
                    public int Size
                    {
                        get
                        {
                            return 112;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    public sealed class PointsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Position*", typeof(Vector3))]
                        public Vector3 Position;
                        [Abide.Guerilla.Tags.FieldAttribute("Node Indices*", typeof(NodeIndicesElement[]))]
                        [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeIndicesElement))]
                        public NodeIndicesElement[] NodeIndices;
                        [Abide.Guerilla.Tags.FieldAttribute("Node Weights*", typeof(NodeWeightsElement[]))]
                        [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeWeightsElement))]
                        public NodeWeightsElement[] NodeWeights;
                        public int Size
                        {
                            get
                            {
                                return 0;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                        public sealed class NodeIndicesElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("Node Index*", typeof(Byte))]
                            public Byte NodeIndex;
                            public int Size
                            {
                                get
                                {
                                    return 0;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                        }
                        public sealed class NodeWeightsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("Node Weight*", typeof(Single))]
                            public Single NodeWeight;
                            public int Size
                            {
                                get
                                {
                                    return 0;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                        }
                    }
                    public sealed class NodeWeightsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Node Weight*", typeof(Single))]
                        public Single NodeWeight;
                        public int Size
                        {
                            get
                            {
                                return 0;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(144, 4)]
                public sealed class ErrorReportQuadsBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("Points*", typeof(PointsElement[]))]
                    [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(PointsElement))]
                    public PointsElement[] Points;
                    [Abide.Guerilla.Tags.FieldAttribute("Node Weights*", typeof(NodeWeightsElement[]))]
                    [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeWeightsElement))]
                    public NodeWeightsElement[] NodeWeights;
                    [Abide.Guerilla.Tags.FieldAttribute("Color*", typeof(ColorArgbF))]
                    public ColorArgbF Color;
                    public int Size
                    {
                        get
                        {
                            return 144;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    public sealed class PointsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Position*", typeof(Vector3))]
                        public Vector3 Position;
                        [Abide.Guerilla.Tags.FieldAttribute("Node Indices*", typeof(NodeIndicesElement[]))]
                        [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeIndicesElement))]
                        public NodeIndicesElement[] NodeIndices;
                        [Abide.Guerilla.Tags.FieldAttribute("Node Weights*", typeof(NodeWeightsElement[]))]
                        [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeWeightsElement))]
                        public NodeWeightsElement[] NodeWeights;
                        public int Size
                        {
                            get
                            {
                                return 0;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                        public sealed class NodeIndicesElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("Node Index*", typeof(Byte))]
                            public Byte NodeIndex;
                            public int Size
                            {
                                get
                                {
                                    return 0;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                        }
                        public sealed class NodeWeightsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("Node Weight*", typeof(Single))]
                            public Single NodeWeight;
                            public int Size
                            {
                                get
                                {
                                    return 0;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                        }
                    }
                    public sealed class NodeWeightsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Node Weight*", typeof(Single))]
                        public Single NodeWeight;
                        public int Size
                        {
                            get
                            {
                                return 0;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(68, 4)]
                public sealed class ErrorReportCommentsBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("Position*", typeof(Vector3))]
                    public Vector3 Position;
                    [Abide.Guerilla.Tags.FieldAttribute("Node Indices*", typeof(NodeIndicesElement[]))]
                    [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeIndicesElement))]
                    public NodeIndicesElement[] NodeIndices;
                    [Abide.Guerilla.Tags.FieldAttribute("Node Weights*", typeof(NodeWeightsElement[]))]
                    [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeWeightsElement))]
                    public NodeWeightsElement[] NodeWeights;
                    [Abide.Guerilla.Tags.FieldAttribute("Color*", typeof(ColorArgbF))]
                    public ColorArgbF Color;
                    public int Size
                    {
                        get
                        {
                            return 68;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    public sealed class NodeIndicesElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Node Index*", typeof(Byte))]
                        public Byte NodeIndex;
                        public int Size
                        {
                            get
                            {
                                return 0;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                    public sealed class NodeWeightsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Node Weight*", typeof(Single))]
                        public Single NodeWeight;
                        public int Size
                        {
                            get
                            {
                                return 0;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                }
                public enum TypeOptions
                {
                    Silent = 0,
                    Comment = 1,
                    Warning = 2,
                    Error = 3,
                }
                public enum FlagsOptions
                {
                    Rendered = 1,
                    TangentSpace = 2,
                    Noncritical = 4,
                    LightmapLight = 8,
                    ReportKeyIsValid = 16,
                }
            }
            public enum ReportTypeOptions
            {
                Silent = 0,
                Comment = 1,
                Warning = 2,
                Error = 3,
            }
            public enum FlagsOptions
            {
                Rendered = 1,
                TangentSpace = 2,
                Noncritical = 4,
                LightmapLight = 8,
                ReportKeyIsValid = 16,
            }
        }
    }
}
#pragma warning restore CS1591
