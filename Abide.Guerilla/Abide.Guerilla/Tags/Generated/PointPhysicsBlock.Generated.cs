#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Abide.Guerilla.Tags
{
    using Abide.Guerilla.Types;
    using Abide.HaloLibrary;
    using System;
    using System.IO;
    
    [FieldSetAttribute(64, 4)]
    [TagGroupAttribute("point_physics", 1886414969u, 4294967293u, typeof(PointPhysicsBlock))]
    public sealed class PointPhysicsBlock : AbideTagBlock
    {
        [FieldAttribute("flags", typeof(FlagsOptions))]
        [OptionsAttribute(typeof(FlagsOptions), true)]
        public FlagsOptions Flags;
        [FieldAttribute("", typeof(Byte[]))]
        [PaddingAttribute(28)]
        public Byte[] EmptyString;
        [FieldAttribute("density:g/mL", typeof(Single))]
        public Single Density;
        [FieldAttribute("air friction", typeof(Single))]
        public Single AirFriction;
        [FieldAttribute("water friction", typeof(Single))]
        public Single WaterFriction;
        [FieldAttribute("surface friction#when hitting the ground or interior, percentage of velocity lost" +
            " in one collision", typeof(Single))]
        public Single SurfaceFriction;
        [FieldAttribute("elasticity#0.0 is inelastic collisions (no bounce) 1.0 is perfectly elastic (refl" +
            "ected velocity equals incoming velocity)", typeof(Single))]
        public Single Elasticity;
        [FieldAttribute("", typeof(Byte[]))]
        [PaddingAttribute(12)]
        public Byte[] EmptyString1;
        public override int Size
        {
            get
            {
                return 64;
            }
        }
        public override void Initialize()
        {
            this.Flags = ((FlagsOptions)(0));
            this.EmptyString = new byte[28];
            this.Density = 0;
            this.AirFriction = 0;
            this.WaterFriction = 0;
            this.SurfaceFriction = 0;
            this.Elasticity = 0;
            this.EmptyString1 = new byte[12];
        }
        public override void Read(BinaryReader reader)
        {
            this.Flags = ((FlagsOptions)(reader.ReadInt32()));
            this.EmptyString = reader.ReadBytes(28);
            this.Density = reader.ReadSingle();
            this.AirFriction = reader.ReadSingle();
            this.WaterFriction = reader.ReadSingle();
            this.SurfaceFriction = reader.ReadSingle();
            this.Elasticity = reader.ReadSingle();
            this.EmptyString1 = reader.ReadBytes(12);
        }
        public override void Write(BinaryWriter writer)
        {
        }
        public enum FlagsOptions : Int32
        {
            Unused = 1,
            CollidesWithStructures = 2,
            CollidesWithWaterSurface = 4,
            UsesSimpleWind = 8,
            UsesDampedWind = 16,
            NoGravity = 32,
        }
    }
}
#pragma warning restore CS1591
