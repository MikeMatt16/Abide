#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Abide.Guerilla.Tags
{
    using Abide.Guerilla.Types;
    using Abide.HaloLibrary;
    using System;
    
    [Abide.Guerilla.Tags.FieldSetAttribute(220, 4)]
    [Abide.Guerilla.Tags.TagGroupAttribute("sky", 1936423200u, 4294967293u, typeof(SkyBlock))]
    public sealed class SkyBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
    {
        [Abide.Guerilla.Tags.FieldAttribute("Render Model", typeof(TagReference))]
        public TagReference RenderModel;
        [Abide.Guerilla.Tags.FieldAttribute("Animation Graph", typeof(TagReference))]
        public TagReference AnimationGraph;
        [Abide.Guerilla.Tags.FieldAttribute("Flags", typeof(Int32))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
        public Int32 Flags;
        [Abide.Guerilla.Tags.FieldAttribute("Render Model Scale#Multiplier by which to scale the model\'s geometry up or down (" +
            "0 defaults to standard, 0.03).", typeof(Single))]
        public Single RenderModelScale;
        [Abide.Guerilla.Tags.FieldAttribute("Movement Scale#How much the sky moves to remain centered on the player (0 default" +
            "s to 1.0, which means no parallax).", typeof(Single))]
        public Single MovementScale;
        [Abide.Guerilla.Tags.FieldAttribute("Cube Map", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("sky_cubemap_block", 1, typeof(SkyCubemapBlock))]
        public TagBlock CubeMap;
        [Abide.Guerilla.Tags.FieldAttribute("Indoor Ambient Color#Indoor ambient light color.", typeof(ColorRgbF))]
        public ColorRgbF IndoorAmbientColor;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(4)]
        public Byte[] EmptyString;
        [Abide.Guerilla.Tags.FieldAttribute("Outdoor Ambient Color#Indoor ambient light color.", typeof(ColorRgbF))]
        public ColorRgbF OutdoorAmbientColor;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(4)]
        public Byte[] EmptyString1;
        [Abide.Guerilla.Tags.FieldAttribute("Fog Spread Distance:world units#How far fog spreads into adjacent clusters.", typeof(Single))]
        public Single FogSpreadDistance;
        [Abide.Guerilla.Tags.FieldAttribute("Atmospheric Fog", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("sky_atmospheric_fog_block", 1, typeof(SkyAtmosphericFogBlock))]
        public TagBlock AtmosphericFog;
        [Abide.Guerilla.Tags.FieldAttribute("Secondary Fog", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("sky_atmospheric_fog_block", 1, typeof(SkyAtmosphericFogBlock))]
        public TagBlock SecondaryFog;
        [Abide.Guerilla.Tags.FieldAttribute("Sky Fog", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("sky_fog_block", 1, typeof(SkyFogBlock))]
        public TagBlock SkyFog;
        [Abide.Guerilla.Tags.FieldAttribute("Patchy Fog", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("sky_patchy_fog_block", 1, typeof(SkyPatchyFogBlock))]
        public TagBlock PatchyFog;
        [Abide.Guerilla.Tags.FieldAttribute("Amount:[0,1]", typeof(Single))]
        public Single Amount;
        [Abide.Guerilla.Tags.FieldAttribute("Threshold:[0,1]", typeof(Single))]
        public Single Threshold;
        [Abide.Guerilla.Tags.FieldAttribute("Brightness:[0,1]", typeof(Single))]
        public Single Brightness;
        [Abide.Guerilla.Tags.FieldAttribute("Gamma Power", typeof(Single))]
        public Single GammaPower;
        [Abide.Guerilla.Tags.FieldAttribute("Lights", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("sky_light_block", 8, typeof(SkyLightBlock))]
        public TagBlock Lights;
        [Abide.Guerilla.Tags.FieldAttribute("Global Sky Rotation", typeof(Single))]
        public Single GlobalSkyRotation;
        [Abide.Guerilla.Tags.FieldAttribute("Shader Functions", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("sky_shader_function_block", 8, typeof(SkyShaderFunctionBlock))]
        public TagBlock ShaderFunctions;
        [Abide.Guerilla.Tags.FieldAttribute("Animations", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("sky_animation_block", 8, typeof(SkyAnimationBlock))]
        public TagBlock Animations;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(12)]
        public Byte[] EmptyString2;
        [Abide.Guerilla.Tags.FieldAttribute("Clear Color", typeof(ColorRgbF))]
        public ColorRgbF ClearColor;
        public int Size
        {
            get
            {
                return 220;
            }
        }
        public void Initialize()
        {
        }
        public void Read(System.IO.BinaryReader reader)
        {
        }
        public void Write(System.IO.BinaryWriter writer)
        {
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(20, 4)]
        public sealed class SkyCubemapBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("Cube Map Reference", typeof(TagReference))]
            public TagReference CubeMapReference;
            [Abide.Guerilla.Tags.FieldAttribute("Power Scale#0 Defaults to 1.", typeof(Single))]
            public Single PowerScale;
            public int Size
            {
                get
                {
                    return 20;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(24, 4)]
        public sealed class SkyAtmosphericFogBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("Color", typeof(ColorRgbF))]
            public ColorRgbF Color;
            [Abide.Guerilla.Tags.FieldAttribute("Maximum Density:[0,1]#Fog density is clamped to this value.", typeof(Single))]
            public Single MaximumDensity;
            [Abide.Guerilla.Tags.FieldAttribute("Start Distance:world units#Before this distance there is no fog.", typeof(Single))]
            public Single StartDistance;
            [Abide.Guerilla.Tags.FieldAttribute("Opaque Distance:world units#Fog becomes opaque (maximum density) at this distance" +
                " from the viewer.", typeof(Single))]
            public Single OpaqueDistance;
            public int Size
            {
                get
                {
                    return 24;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(16, 4)]
        public sealed class SkyFogBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("Color", typeof(ColorRgbF))]
            public ColorRgbF Color;
            [Abide.Guerilla.Tags.FieldAttribute("Density:[0,1]#Fog density is clamped to this value.", typeof(Single))]
            public Single Density;
            public int Size
            {
                get
                {
                    return 16;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(88, 4)]
        public sealed class SkyPatchyFogBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("Color", typeof(ColorRgbF))]
            public ColorRgbF Color;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(12)]
            public Byte[] EmptyString;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(32)]
            public Byte[] EmptyString1;
            [Abide.Guerilla.Tags.FieldAttribute("Patchy Fog", typeof(TagReference))]
            public TagReference PatchyFog;
            public int Size
            {
                get
                {
                    return 88;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(72, 4)]
        public sealed class SkyLightBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("Direction Vector", typeof(Vector3))]
            public Vector3 DirectionVector;
            [Abide.Guerilla.Tags.FieldAttribute("Direction", typeof(Vector2))]
            public Vector2 Direction;
            [Abide.Guerilla.Tags.FieldAttribute("Lens Flare", typeof(TagReference))]
            public TagReference LensFlare;
            [Abide.Guerilla.Tags.FieldAttribute("Fog", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("sky_light_fog_block", 1, typeof(SkyLightFogBlock))]
            public TagBlock Fog;
            [Abide.Guerilla.Tags.FieldAttribute("Fog Opposite", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("sky_light_fog_block", 1, typeof(SkyLightFogBlock))]
            public TagBlock FogOpposite;
            [Abide.Guerilla.Tags.FieldAttribute("Radiosity", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("sky_radiosity_light_block", 1, typeof(SkyRadiosityLightBlock))]
            public TagBlock Radiosity;
            public int Size
            {
                get
                {
                    return 72;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(44, 4)]
            public sealed class SkyLightFogBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("Color", typeof(ColorRgbF))]
                public ColorRgbF Color;
                [Abide.Guerilla.Tags.FieldAttribute("Maximum Density:[0,1]#Fog density is clamped to this value.", typeof(Single))]
                public Single MaximumDensity;
                [Abide.Guerilla.Tags.FieldAttribute("Start Distance:world units#Before this distance there is no fog.", typeof(Single))]
                public Single StartDistance;
                [Abide.Guerilla.Tags.FieldAttribute("Opaque Distance:world units#Fog becomes opaque (maximum density) at this distance" +
                    " from the viewer.", typeof(Single))]
                public Single OpaqueDistance;
                [Abide.Guerilla.Tags.FieldAttribute("Atmospheric Fog Influence:[0,1]", typeof(Single))]
                public Single AtmosphericFogInfluence;
                [Abide.Guerilla.Tags.FieldAttribute("Secondary Fog Influence:[0,1]", typeof(Single))]
                public Single SecondaryFogInfluence;
                [Abide.Guerilla.Tags.FieldAttribute("Sky Fog Influence:[0,1]", typeof(Single))]
                public Single SkyFogInfluence;
                public int Size
                {
                    get
                    {
                        return 44;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(40, 4)]
            public sealed class SkyRadiosityLightBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("Flags", typeof(Int32))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
                public Int32 Flags;
                [Abide.Guerilla.Tags.FieldAttribute("Color:#Light color.", typeof(ColorRgbF))]
                public ColorRgbF Color;
                [Abide.Guerilla.Tags.FieldAttribute("Power:[0,+inf]#Light power from 0 to infinity.", typeof(Single))]
                public Single Power;
                [Abide.Guerilla.Tags.FieldAttribute("Test Distance:world units#Length of the ray for shadow testing.", typeof(Single))]
                public Single TestDistance;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(12)]
                public Byte[] EmptyString;
                [Abide.Guerilla.Tags.FieldAttribute("Diameter:degrees#Angular diameter of the light source in the sky.", typeof(Single))]
                public Single Diameter;
                public int Size
                {
                    get
                    {
                        return 40;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                public enum FlagsOptions
                {
                    AffectsExteriors = 1,
                    AffectsInteriors = 2,
                    DirectIlluminationInLightmaps = 4,
                    IndirectIlluminationInLightmaps = 8,
                }
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(36, 4)]
        public sealed class SkyShaderFunctionBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString;
            [Abide.Guerilla.Tags.FieldAttribute("Global Function Name^#Global function that controls this shader value.", typeof(String32))]
            public String32 GlobalFunctionName;
            public int Size
            {
                get
                {
                    return 36;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(36, 4)]
        public sealed class SkyAnimationBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("Animation Index#Index of the animation in the animation graph.", typeof(Int16))]
            public Int16 AnimationIndex;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(2)]
            public Byte[] EmptyString;
            [Abide.Guerilla.Tags.FieldAttribute("Period:sec", typeof(Single))]
            public Single Period;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(28)]
            public Byte[] EmptyString1;
            public int Size
            {
                get
                {
                    return 36;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
        }
        public enum FlagsOptions
        {
            FixedInWorldSpace = 1,
            Depreciated = 2,
            SkyCastsLightFromBelow = 4,
            DisableSkyInLightmaps = 8,
            FogOnlyAffectsContainingClusters = 16,
            UseClearColor = 32,
        }
    }
}
#pragma warning restore CS1591
