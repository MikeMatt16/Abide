#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Abide.Guerilla.Tags
{
    using Abide.Guerilla.Types;
    using Abide.HaloLibrary;
    using System;
    
    [Abide.Guerilla.Tags.FieldSetAttribute(188, 4)]
    [Abide.Guerilla.Tags.TagGroupAttribute("weather_system", 2003132788u, 4294967293u, typeof(WeatherSystemBlock))]
    public sealed class WeatherSystemBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
    {
        [Abide.Guerilla.Tags.FieldAttribute("particle system", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("global_particle_system_lite_block", 1, typeof(GlobalParticleSystemLiteBlock))]
        public TagBlock ParticleSystem;
        [Abide.Guerilla.Tags.FieldAttribute("background plates", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("global_weather_background_plate_block", 3, typeof(GlobalWeatherBackgroundPlateBlock))]
        public TagBlock BackgroundPlates;
        [Abide.Guerilla.Tags.FieldAttribute("wind model", typeof(GlobalWindModelStructBlock))]
        public GlobalWindModelStructBlock WindModel;
        [Abide.Guerilla.Tags.FieldAttribute("fade radius", typeof(Single))]
        public Single FadeRadius;
        public int Size
        {
            get
            {
                return 188;
            }
        }
        public void Initialize()
        {
        }
        public void Read(System.IO.BinaryReader reader)
        {
        }
        public void Write(System.IO.BinaryWriter writer)
        {
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(156, 4)]
        public sealed class GlobalParticleSystemLiteBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("sprites", typeof(TagReference))]
            public TagReference Sprites;
            [Abide.Guerilla.Tags.FieldAttribute("view box width", typeof(Single))]
            public Single ViewBoxWidth;
            [Abide.Guerilla.Tags.FieldAttribute("view box height", typeof(Single))]
            public Single ViewBoxHeight;
            [Abide.Guerilla.Tags.FieldAttribute("view box depth", typeof(Single))]
            public Single ViewBoxDepth;
            [Abide.Guerilla.Tags.FieldAttribute("exclusion radius", typeof(Single))]
            public Single ExclusionRadius;
            [Abide.Guerilla.Tags.FieldAttribute("max velocity", typeof(Single))]
            public Single MaxVelocity;
            [Abide.Guerilla.Tags.FieldAttribute("min mass", typeof(Single))]
            public Single MinMass;
            [Abide.Guerilla.Tags.FieldAttribute("max mass", typeof(Single))]
            public Single MaxMass;
            [Abide.Guerilla.Tags.FieldAttribute("min size", typeof(Single))]
            public Single MinSize;
            [Abide.Guerilla.Tags.FieldAttribute("max size", typeof(Single))]
            public Single MaxSize;
            [Abide.Guerilla.Tags.FieldAttribute("maximum number of particles", typeof(Int32))]
            public Int32 MaximumNumberOfParticles;
            [Abide.Guerilla.Tags.FieldAttribute("initial velocity", typeof(Vector3))]
            public Vector3 InitialVelocity;
            [Abide.Guerilla.Tags.FieldAttribute("bitmap animation speed", typeof(Single))]
            public Single BitmapAnimationSpeed;
            [Abide.Guerilla.Tags.FieldAttribute("geometry block info*", typeof(GlobalGeometryBlockInfoStructBlock))]
            public GlobalGeometryBlockInfoStructBlock GeometryBlockInfo;
            [Abide.Guerilla.Tags.FieldAttribute("particle system data", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("particle_system_lite_data_block", 1, typeof(ParticleSystemLiteDataBlock))]
            public TagBlock ParticleSystemData;
            [Abide.Guerilla.Tags.FieldAttribute("type", typeof(Int16))]
            [Abide.Guerilla.Tags.OptionsAttribute(typeof(TypeOptions), false)]
            public Int16 Type;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(2)]
            public Byte[] EmptyString;
            [Abide.Guerilla.Tags.FieldAttribute("mininum opacity", typeof(Single))]
            public Single MininumOpacity;
            [Abide.Guerilla.Tags.FieldAttribute("maxinum opacity", typeof(Single))]
            public Single MaxinumOpacity;
            [Abide.Guerilla.Tags.FieldAttribute("rain streak scale", typeof(Single))]
            public Single RainStreakScale;
            [Abide.Guerilla.Tags.FieldAttribute("rain line width", typeof(Single))]
            public Single RainLineWidth;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString1;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString2;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString3;
            public int Size
            {
                get
                {
                    return 156;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(56, 4)]
            public sealed class ParticleSystemLiteDataBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("particles render data*", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("particles_render_data_block", 4096, typeof(ParticlesRenderDataBlock))]
                public TagBlock ParticlesRenderData;
                [Abide.Guerilla.Tags.FieldAttribute("particles other data*", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("particles_update_data_block", 4096, typeof(ParticlesUpdateDataBlock))]
                public TagBlock ParticlesOtherData;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(32)]
                public Byte[] EmptyString;
                public int Size
                {
                    get
                    {
                        return 56;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(20, 4)]
                public sealed class ParticlesRenderDataBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("position.x*", typeof(Single))]
                    public Single Positionx;
                    [Abide.Guerilla.Tags.FieldAttribute("position.y*", typeof(Single))]
                    public Single Positiony;
                    [Abide.Guerilla.Tags.FieldAttribute("position.z*", typeof(Single))]
                    public Single Positionz;
                    [Abide.Guerilla.Tags.FieldAttribute("size*", typeof(Single))]
                    public Single Size1;
                    [Abide.Guerilla.Tags.FieldAttribute("color*", typeof(ColorRgb))]
                    public ColorRgb Color;
                    public int Size
                    {
                        get
                        {
                            return 20;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(32, 4)]
                public sealed class ParticlesUpdateDataBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("velocity.x*", typeof(Single))]
                    public Single Velocityx;
                    [Abide.Guerilla.Tags.FieldAttribute("velocity.y*", typeof(Single))]
                    public Single Velocityy;
                    [Abide.Guerilla.Tags.FieldAttribute("velocity.z*", typeof(Single))]
                    public Single Velocityz;
                    [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                    [Abide.Guerilla.Tags.PaddingAttribute(12)]
                    public Byte[] EmptyString;
                    [Abide.Guerilla.Tags.FieldAttribute("mass*", typeof(Single))]
                    public Single Mass;
                    [Abide.Guerilla.Tags.FieldAttribute("creation time stamp*", typeof(Single))]
                    public Single CreationTimeStamp;
                    public int Size
                    {
                        get
                        {
                            return 32;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(40, 4)]
            public sealed class GlobalGeometryBlockInfoStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("Block Offset*", typeof(Int32))]
                public Int32 BlockOffset;
                [Abide.Guerilla.Tags.FieldAttribute("Block Size*", typeof(Int32))]
                public Int32 BlockSize;
                [Abide.Guerilla.Tags.FieldAttribute("Section Data Size*", typeof(Int32))]
                public Int32 SectionDataSize;
                [Abide.Guerilla.Tags.FieldAttribute("Resource Data Size*", typeof(Int32))]
                public Int32 ResourceDataSize;
                [Abide.Guerilla.Tags.FieldAttribute("Resources*", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("block resources", 1024, typeof(GlobalGeometryBlockResourceBlock))]
                public TagBlock Resources;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(4)]
                public Byte[] EmptyString;
                [Abide.Guerilla.Tags.FieldAttribute("Owner Tag Section Offset*", typeof(Int16))]
                public Int16 OwnerTagSectionOffset;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(2)]
                public Byte[] EmptyString1;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(4)]
                public Byte[] EmptyString2;
                public int Size
                {
                    get
                    {
                        return 40;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(16, 4)]
                public sealed class GlobalGeometryBlockResourceBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("Type*", typeof(Byte))]
                    [Abide.Guerilla.Tags.OptionsAttribute(typeof(TypeOptions), false)]
                    public Byte Type;
                    [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                    [Abide.Guerilla.Tags.PaddingAttribute(3)]
                    public Byte[] EmptyString;
                    [Abide.Guerilla.Tags.FieldAttribute("Primary Locator*", typeof(Int16))]
                    public Int16 PrimaryLocator;
                    [Abide.Guerilla.Tags.FieldAttribute("Secondary Locator*", typeof(Int16))]
                    public Int16 SecondaryLocator;
                    [Abide.Guerilla.Tags.FieldAttribute("Resource Data Size*", typeof(Int32))]
                    public Int32 ResourceDataSize;
                    [Abide.Guerilla.Tags.FieldAttribute("Resource Data Offset*", typeof(Int32))]
                    public Int32 ResourceDataOffset;
                    public int Size
                    {
                        get
                        {
                            return 16;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    public enum TypeOptions
                    {
                        TagBlock = 0,
                        TagData = 1,
                        VertexBuffer = 2,
                    }
                }
            }
            public enum TypeOptions
            {
                Generic = 0,
                Snow = 1,
                Rain = 2,
                RainSplash = 3,
                Bugs = 4,
                SandStorm = 5,
                Debris = 6,
                Bubbles = 7,
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(960, 4)]
        public sealed class GlobalWeatherBackgroundPlateBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("texture 0", typeof(TagReference))]
            public TagReference Texture0;
            [Abide.Guerilla.Tags.FieldAttribute("texture 1", typeof(TagReference))]
            public TagReference Texture1;
            [Abide.Guerilla.Tags.FieldAttribute("texture 2", typeof(TagReference))]
            public TagReference Texture2;
            [Abide.Guerilla.Tags.FieldAttribute("plate positions 0", typeof(Single))]
            public Single PlatePositions0;
            [Abide.Guerilla.Tags.FieldAttribute("plate positions 1", typeof(Single))]
            public Single PlatePositions1;
            [Abide.Guerilla.Tags.FieldAttribute("plate positions 2", typeof(Single))]
            public Single PlatePositions2;
            [Abide.Guerilla.Tags.FieldAttribute("move speed 0", typeof(Vector3))]
            public Vector3 MoveSpeed0;
            [Abide.Guerilla.Tags.FieldAttribute("move speed 1", typeof(Vector3))]
            public Vector3 MoveSpeed1;
            [Abide.Guerilla.Tags.FieldAttribute("move speed 2", typeof(Vector3))]
            public Vector3 MoveSpeed2;
            [Abide.Guerilla.Tags.FieldAttribute("texture scale 0", typeof(Single))]
            public Single TextureScale0;
            [Abide.Guerilla.Tags.FieldAttribute("texture scale 1", typeof(Single))]
            public Single TextureScale1;
            [Abide.Guerilla.Tags.FieldAttribute("texture scale 2", typeof(Single))]
            public Single TextureScale2;
            [Abide.Guerilla.Tags.FieldAttribute("jitter 0", typeof(Vector3))]
            public Vector3 Jitter0;
            [Abide.Guerilla.Tags.FieldAttribute("jitter 1", typeof(Vector3))]
            public Vector3 Jitter1;
            [Abide.Guerilla.Tags.FieldAttribute("jitter 2", typeof(Vector3))]
            public Vector3 Jitter2;
            [Abide.Guerilla.Tags.FieldAttribute("plate z near", typeof(Single))]
            public Single PlateZNear;
            [Abide.Guerilla.Tags.FieldAttribute("plate z far", typeof(Single))]
            public Single PlateZFar;
            [Abide.Guerilla.Tags.FieldAttribute("depth blend z near", typeof(Single))]
            public Single DepthBlendZNear;
            [Abide.Guerilla.Tags.FieldAttribute("depth blend z far", typeof(Single))]
            public Single DepthBlendZFar;
            [Abide.Guerilla.Tags.FieldAttribute("opacity 0", typeof(Single))]
            public Single Opacity0;
            [Abide.Guerilla.Tags.FieldAttribute("opacity 1", typeof(Single))]
            public Single Opacity1;
            [Abide.Guerilla.Tags.FieldAttribute("opacity 2", typeof(Single))]
            public Single Opacity2;
            [Abide.Guerilla.Tags.FieldAttribute("flags", typeof(Int32))]
            [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
            public Int32 Flags;
            [Abide.Guerilla.Tags.FieldAttribute("tint color0", typeof(ColorRgbF))]
            public ColorRgbF TintColor0;
            [Abide.Guerilla.Tags.FieldAttribute("tint color1", typeof(ColorRgbF))]
            public ColorRgbF TintColor1;
            [Abide.Guerilla.Tags.FieldAttribute("tint color2", typeof(ColorRgbF))]
            public ColorRgbF TintColor2;
            [Abide.Guerilla.Tags.FieldAttribute("mass 1", typeof(Single))]
            public Single Mass1;
            [Abide.Guerilla.Tags.FieldAttribute("mass 2", typeof(Single))]
            public Single Mass2;
            [Abide.Guerilla.Tags.FieldAttribute("mass 3", typeof(Single))]
            public Single Mass3;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(736)]
            public Byte[] EmptyString;
            public int Size
            {
                get
                {
                    return 960;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            public enum FlagsOptions
            {
                ForwardMotion = 1,
                AutoPositionPlanes = 2,
                AutoScalePlanesautoUpdateSpeed = 4,
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(160, 4)]
        public sealed class GlobalWindModelStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("wind tiling scale", typeof(Single))]
            public Single WindTilingScale;
            [Abide.Guerilla.Tags.FieldAttribute("wind primary heading/pitch/strength", typeof(Vector3))]
            public Vector3 WindPrimaryHeadingpitchstrength;
            [Abide.Guerilla.Tags.FieldAttribute("primary rate of change", typeof(Single))]
            public Single PrimaryRateOfChange;
            [Abide.Guerilla.Tags.FieldAttribute("primary min strength", typeof(Single))]
            public Single PrimaryMinStrength;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString1;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(12)]
            public Byte[] EmptyString2;
            [Abide.Guerilla.Tags.FieldAttribute("wind gusting heading/pitch/strength", typeof(Vector3))]
            public Vector3 WindGustingHeadingpitchstrength;
            [Abide.Guerilla.Tags.FieldAttribute("gust diretional rate of change", typeof(Single))]
            public Single GustDiretionalRateOfChange;
            [Abide.Guerilla.Tags.FieldAttribute("gust strength rate of change", typeof(Single))]
            public Single GustStrengthRateOfChange;
            [Abide.Guerilla.Tags.FieldAttribute("gust cone angle", typeof(Single))]
            public Single GustConeAngle;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString3;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString4;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(12)]
            public Byte[] EmptyString5;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(12)]
            public Byte[] EmptyString6;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(12)]
            public Byte[] EmptyString7;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(12)]
            public Byte[] EmptyString8;
            [Abide.Guerilla.Tags.FieldAttribute("turbulance rate of change", typeof(Single))]
            public Single TurbulanceRateOfChange;
            [Abide.Guerilla.Tags.FieldAttribute("turbulence_scale x, y, z", typeof(Vector3))]
            public Vector3 TurbulenceScaleXYZ;
            [Abide.Guerilla.Tags.FieldAttribute("gravity constant", typeof(Single))]
            public Single GravityConstant;
            [Abide.Guerilla.Tags.FieldAttribute("wind_pirmitives", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("wind primitives", 128, typeof(GloalWindPrimitivesBlock))]
            public TagBlock WindPirmitives;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString9;
            public int Size
            {
                get
                {
                    return 160;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(24, 4)]
            public sealed class GloalWindPrimitivesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("position", typeof(Vector3))]
                public Vector3 Position;
                [Abide.Guerilla.Tags.FieldAttribute("radius", typeof(Single))]
                public Single Radius;
                [Abide.Guerilla.Tags.FieldAttribute("strength", typeof(Single))]
                public Single Strength;
                [Abide.Guerilla.Tags.FieldAttribute("wind primitive type", typeof(Int16))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(WindPrimitiveTypeOptions), false)]
                public Int16 WindPrimitiveType;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(2)]
                public Byte[] EmptyString;
                public int Size
                {
                    get
                    {
                        return 24;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                public enum WindPrimitiveTypeOptions
                {
                    Vortex = 0,
                    Gust = 1,
                    Implosion = 2,
                    Explosion = 3,
                }
            }
        }
    }
}
#pragma warning restore CS1591
