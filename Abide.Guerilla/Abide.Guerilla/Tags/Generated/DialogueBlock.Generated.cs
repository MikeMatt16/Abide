#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Abide.Guerilla.Tags
{
    using Abide.Guerilla.Types;
    using Abide.HaloLibrary;
    using System;
    using System.IO;
    
    [FieldSetAttribute(36, 4)]
    [TagGroupAttribute("dialogue", 1969515623u, 4294967293u, typeof(DialogueBlock))]
    public sealed class DialogueBlock : AbideTagBlock
    {
        private TagBlockList<SoundReferencesBlock> vocalizationsList = new TagBlockList<SoundReferencesBlock>(500);
        [FieldAttribute("global dialogue info", typeof(TagReference))]
        public TagReference GlobalDialogueInfo;
        [FieldAttribute("flags", typeof(FlagsOptions))]
        [OptionsAttribute(typeof(FlagsOptions), true)]
        public FlagsOptions Flags;
        [FieldAttribute("vocalizations", typeof(TagBlock))]
        [BlockAttribute("sound_references_block", 500, typeof(SoundReferencesBlock))]
        public TagBlock Vocalizations;
        [FieldAttribute("mission dialogue designator#3-letter mission dialogue designator name", typeof(StringId))]
        public StringId MissionDialogueDesignator;
        public TagBlockList<SoundReferencesBlock> VocalizationsList
        {
            get
            {
                return this.vocalizationsList;
            }
        }
        public override int Size
        {
            get
            {
                return 36;
            }
        }
        public override void Initialize()
        {
            this.vocalizationsList.Clear();
            this.GlobalDialogueInfo = TagReference.Null;
            this.Flags = ((FlagsOptions)(0));
            this.Vocalizations = TagBlock.Zero;
            this.MissionDialogueDesignator = StringId.Zero;
        }
        public override void Read(BinaryReader reader)
        {
            this.GlobalDialogueInfo = reader.Read<TagReference>();
            this.Flags = ((FlagsOptions)(reader.ReadInt32()));
            this.Vocalizations = reader.ReadInt64();
            this.vocalizationsList.Read(reader, this.Vocalizations);
            this.MissionDialogueDesignator = reader.ReadInt32();
        }
        public override void Write(BinaryWriter writer)
        {
        }
        [FieldSetAttribute(24, 4)]
        public sealed class SoundReferencesBlock : AbideTagBlock
        {
            [FieldAttribute("flags", typeof(FlagsOptions))]
            [OptionsAttribute(typeof(FlagsOptions), true)]
            public FlagsOptions Flags;
            [FieldAttribute("", typeof(Byte[]))]
            [PaddingAttribute(2)]
            public Byte[] EmptyString;
            [FieldAttribute("vocalization^", typeof(StringId))]
            public StringId Vocalization;
            [FieldAttribute("sound", typeof(TagReference))]
            public TagReference Sound;
            public override int Size
            {
                get
                {
                    return 24;
                }
            }
            public override void Initialize()
            {
                this.Flags = ((FlagsOptions)(0));
                this.EmptyString = new byte[2];
                this.Vocalization = StringId.Zero;
                this.Sound = TagReference.Null;
            }
            public override void Read(BinaryReader reader)
            {
                this.Flags = ((FlagsOptions)(reader.ReadInt16()));
                this.EmptyString = reader.ReadBytes(2);
                this.Vocalization = reader.ReadInt32();
                this.Sound = reader.Read<TagReference>();
            }
            public override void Write(BinaryWriter writer)
            {
            }
            public enum FlagsOptions : Int16
            {
                NewVocalization = 1,
            }
        }
        public enum FlagsOptions : Int32
        {
            Female = 1,
        }
    }
}
#pragma warning restore CS1591
