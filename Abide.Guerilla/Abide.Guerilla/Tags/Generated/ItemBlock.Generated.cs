#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Abide.Guerilla.Tags
{
    using Abide.Guerilla.Types;
    using Abide.HaloLibrary;
    using System;
    
    [Abide.Guerilla.Tags.FieldSetAttribute(156, 4)]
    [Abide.Guerilla.Tags.TagGroupAttribute("item", 1769235821u, 1868720741u, typeof(ItemBlock))]
    public sealed class ItemBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
    {
        [Abide.Guerilla.Tags.FieldAttribute("flags", typeof(Int32))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
        public Int32 Flags;
        [Abide.Guerilla.Tags.FieldAttribute("OLD message index", typeof(Int16))]
        public Int16 OldMessageIndex;
        [Abide.Guerilla.Tags.FieldAttribute("sort order", typeof(Int16))]
        public Int16 SortOrder;
        [Abide.Guerilla.Tags.FieldAttribute("multiplayer on-ground scale", typeof(Single))]
        public Single MultiplayerOnGroundScale;
        [Abide.Guerilla.Tags.FieldAttribute("campaign on-ground scale", typeof(Single))]
        public Single CampaignOnGroundScale;
        [Abide.Guerilla.Tags.FieldAttribute("pickup message", typeof(StringId))]
        public StringId PickupMessage;
        [Abide.Guerilla.Tags.FieldAttribute("swap message", typeof(StringId))]
        public StringId SwapMessage;
        [Abide.Guerilla.Tags.FieldAttribute("pickup or dual msg", typeof(StringId))]
        public StringId PickupOrDualMsg;
        [Abide.Guerilla.Tags.FieldAttribute("swap or dual msg", typeof(StringId))]
        public StringId SwapOrDualMsg;
        [Abide.Guerilla.Tags.FieldAttribute("dual-only msg", typeof(StringId))]
        public StringId DualOnlyMsg;
        [Abide.Guerilla.Tags.FieldAttribute("picked up msg", typeof(StringId))]
        public StringId PickedUpMsg;
        [Abide.Guerilla.Tags.FieldAttribute("singluar quantity msg", typeof(StringId))]
        public StringId SingluarQuantityMsg;
        [Abide.Guerilla.Tags.FieldAttribute("plural quantity msg", typeof(StringId))]
        public StringId PluralQuantityMsg;
        [Abide.Guerilla.Tags.FieldAttribute("switch-to msg", typeof(StringId))]
        public StringId SwitchToMsg;
        [Abide.Guerilla.Tags.FieldAttribute("switch-to from ai msg", typeof(StringId))]
        public StringId SwitchToFromAiMsg;
        [Abide.Guerilla.Tags.FieldAttribute("UNUSED*", typeof(TagReference))]
        public TagReference Unused;
        [Abide.Guerilla.Tags.FieldAttribute("collision sound", typeof(TagReference))]
        public TagReference CollisionSound;
        [Abide.Guerilla.Tags.FieldAttribute("predicted bitmaps", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("predicted_bitmaps_block", 8, typeof(PredictedBitmapsBlock))]
        public TagBlock PredictedBitmaps;
        [Abide.Guerilla.Tags.FieldAttribute("detonation damage effect", typeof(TagReference))]
        public TagReference DetonationDamageEffect;
        [Abide.Guerilla.Tags.FieldAttribute("detonating effect", typeof(TagReference))]
        public TagReference DetonatingEffect;
        [Abide.Guerilla.Tags.FieldAttribute("detonation effect", typeof(TagReference))]
        public TagReference DetonationEffect;
        public int Size
        {
            get
            {
                return 156;
            }
        }
        public void Initialize()
        {
        }
        public void Read(System.IO.BinaryReader reader)
        {
        }
        public void Write(System.IO.BinaryWriter writer)
        {
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(16, 4)]
        public sealed class PredictedBitmapsBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("bitmap", typeof(TagReference))]
            public TagReference Bitmap;
            public int Size
            {
                get
                {
                    return 16;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
        }
        public enum FlagsOptions
        {
            AlwaysMaintainsZUp = 1,
            DestroyedByExplosions = 2,
            UnaffectedByGravity = 4,
        }
    }
}
#pragma warning restore CS1591
