#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Abide.Guerilla.Tags
{
    using Abide.Guerilla.Types;
    using Abide.HaloLibrary;
    using System;
    
    [Abide.Guerilla.Tags.FieldSetAttribute(128, 4)]
    [Abide.Guerilla.Tags.TagGroupAttribute("shader", 1936220516u, 4294967293u, typeof(ShaderBlock))]
    public sealed class ShaderBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
    {
        [Abide.Guerilla.Tags.FieldAttribute("Template", typeof(TagReference))]
        public TagReference Template;
        [Abide.Guerilla.Tags.FieldAttribute("Material Name", typeof(StringId))]
        public StringId MaterialName;
        [Abide.Guerilla.Tags.FieldAttribute("Runtime Properties*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("runtime properties", 1, typeof(ShaderPropertiesBlock))]
        public TagBlock RuntimeProperties;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(2)]
        public Byte[] EmptyString;
        [Abide.Guerilla.Tags.FieldAttribute("Flags", typeof(Int16))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
        public Int16 Flags;
        [Abide.Guerilla.Tags.FieldAttribute("Parameters", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("parameter", 64, typeof(GlobalShaderParameterBlock))]
        public TagBlock Parameters;
        [Abide.Guerilla.Tags.FieldAttribute("Postprocess Definition*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("shader_postprocess_definition_new_block", 1, typeof(ShaderPostprocessDefinitionNewBlock))]
        public TagBlock PostprocessDefinition;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(4)]
        public Byte[] EmptyString1;
        [Abide.Guerilla.Tags.FieldAttribute("Predicted Resources", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("predicted_resource_block", 2048, typeof(PredictedResourceBlock))]
        public TagBlock PredictedResources;
        [Abide.Guerilla.Tags.FieldAttribute("Light Response", typeof(TagReference))]
        public TagReference LightResponse;
        [Abide.Guerilla.Tags.FieldAttribute("Shader LOD Bias", typeof(Int16))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(ShaderLodBiasOptions), false)]
        public Int16 ShaderLodBias;
        [Abide.Guerilla.Tags.FieldAttribute("Specular Type", typeof(Int16))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(SpecularTypeOptions), false)]
        public Int16 SpecularType;
        [Abide.Guerilla.Tags.FieldAttribute("Lightmap Type", typeof(Int16))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(LightmapTypeOptions), false)]
        public Int16 LightmapType;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(2)]
        public Byte[] EmptyString3;
        [Abide.Guerilla.Tags.FieldAttribute("Lightmap Specular Brightness", typeof(Single))]
        public Single LightmapSpecularBrightness;
        [Abide.Guerilla.Tags.FieldAttribute("Lightmap Ambient Bias:[-1,1]", typeof(Single))]
        public Single LightmapAmbientBias;
        [Abide.Guerilla.Tags.FieldAttribute("Postprocess Properties", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("long_block", 5, typeof(LongBlock))]
        public TagBlock PostprocessProperties;
        [Abide.Guerilla.Tags.FieldAttribute("Added depth bias offset", typeof(Single))]
        public Single AddedDepthBiasOffset;
        [Abide.Guerilla.Tags.FieldAttribute("Added depth bias slope scale", typeof(Single))]
        public Single AddedDepthBiasSlopeScale;
        public int Size
        {
            get
            {
                return 128;
            }
        }
        public void Initialize()
        {
        }
        public void Read(System.IO.BinaryReader reader)
        {
        }
        public void Write(System.IO.BinaryWriter writer)
        {
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(112, 4)]
        public sealed class ShaderPropertiesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("Diffuse Map*", typeof(TagReference))]
            public TagReference DiffuseMap;
            [Abide.Guerilla.Tags.FieldAttribute("Lightmap Emissive Map*", typeof(TagReference))]
            public TagReference LightmapEmissiveMap;
            [Abide.Guerilla.Tags.FieldAttribute("Lightmap Emissive Color*", typeof(ColorRgbF))]
            public ColorRgbF LightmapEmissiveColor;
            [Abide.Guerilla.Tags.FieldAttribute("Lightmap Emissive Power*", typeof(Single))]
            public Single LightmapEmissivePower;
            [Abide.Guerilla.Tags.FieldAttribute("Lightmap Resolution Scale*", typeof(Single))]
            public Single LightmapResolutionScale;
            [Abide.Guerilla.Tags.FieldAttribute("Lightmap Half Life*", typeof(Single))]
            public Single LightmapHalfLife;
            [Abide.Guerilla.Tags.FieldAttribute("Lightmap Diffuse Scale*", typeof(Single))]
            public Single LightmapDiffuseScale;
            [Abide.Guerilla.Tags.FieldAttribute("Alpha Test Map*", typeof(TagReference))]
            public TagReference AlphaTestMap;
            [Abide.Guerilla.Tags.FieldAttribute("Translucent Map*", typeof(TagReference))]
            public TagReference TranslucentMap;
            [Abide.Guerilla.Tags.FieldAttribute("Lightmap Transparent Color*", typeof(ColorRgbF))]
            public ColorRgbF LightmapTransparentColor;
            [Abide.Guerilla.Tags.FieldAttribute("Lightmap Transparent Alpha*", typeof(Single))]
            public Single LightmapTransparentAlpha;
            [Abide.Guerilla.Tags.FieldAttribute("Lightmap Foliage Scale*", typeof(Single))]
            public Single LightmapFoliageScale;
            public int Size
            {
                get
                {
                    return 112;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(52, 4)]
        public sealed class GlobalShaderParameterBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("Name^", typeof(StringId))]
            public StringId Name;
            [Abide.Guerilla.Tags.FieldAttribute("Type", typeof(Int16))]
            [Abide.Guerilla.Tags.OptionsAttribute(typeof(TypeOptions), false)]
            public Int16 Type;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(2)]
            public Byte[] EmptyString;
            [Abide.Guerilla.Tags.FieldAttribute("Bitmap", typeof(TagReference))]
            public TagReference Bitmap;
            [Abide.Guerilla.Tags.FieldAttribute("Const Value", typeof(Single))]
            public Single ConstValue;
            [Abide.Guerilla.Tags.FieldAttribute("Const Color", typeof(ColorRgbF))]
            public ColorRgbF ConstColor;
            [Abide.Guerilla.Tags.FieldAttribute("Animation Properties", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("animation property", 14, typeof(ShaderAnimationPropertyBlock))]
            public TagBlock AnimationProperties;
            public int Size
            {
                get
                {
                    return 52;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(28, 4)]
            public sealed class ShaderAnimationPropertyBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("Type^", typeof(Int16))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(TypeOptions), false)]
                public Int16 Type;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(2)]
                public Byte[] EmptyString;
                [Abide.Guerilla.Tags.FieldAttribute("Input Name", typeof(StringId))]
                public StringId InputName;
                [Abide.Guerilla.Tags.FieldAttribute("Range Name", typeof(StringId))]
                public StringId RangeName;
                [Abide.Guerilla.Tags.FieldAttribute("Time Period:sec", typeof(Single))]
                public Single TimePeriod;
                [Abide.Guerilla.Tags.FieldAttribute("Function", typeof(MappingFunctionBlock))]
                public MappingFunctionBlock Function1;
                public int Size
                {
                    get
                    {
                        return 28;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(12, 4)]
                public sealed class MappingFunctionBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("data", typeof(TagBlock))]
                    [Abide.Guerilla.Tags.BlockAttribute("byte_block", 1024, typeof(ByteBlock))]
                    public TagBlock Data;
                    public int Size
                    {
                        get
                        {
                            return 12;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(1, 4)]
                    public sealed class ByteBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Value", typeof(Byte))]
                        public Byte Value;
                        public int Size
                        {
                            get
                            {
                                return 1;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                }
                public enum TypeOptions
                {
                    BitmapScaleUniform = 0,
                    BitmapScaleX = 1,
                    BitmapScaleY = 2,
                    BitmapScaleZ = 3,
                    BitmapTranslationX = 4,
                    BitmapTranslationY = 5,
                    BitmapTranslationZ = 6,
                    BitmapRotationAngle = 7,
                    BitmapRotationAxisX = 8,
                    BitmapRotationAxisY = 9,
                    BitmapRotationAxisZ = 10,
                    Value = 11,
                    Color = 12,
                    BitmapIndex = 13,
                }
            }
            public enum TypeOptions
            {
                Bitmap = 0,
                Value = 1,
                Color = 2,
                Switch = 3,
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(184, 4)]
        public sealed class ShaderPostprocessDefinitionNewBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("shader template index", typeof(Int32))]
            public Int32 ShaderTemplateIndex;
            [Abide.Guerilla.Tags.FieldAttribute("bitmaps", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("shader_postprocess_bitmap_new_block", 1024, typeof(ShaderPostprocessBitmapNewBlock))]
            public TagBlock Bitmaps;
            [Abide.Guerilla.Tags.FieldAttribute("pixel constants", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("pixel32_block", 1024, typeof(Pixel32Block))]
            public TagBlock PixelConstants;
            [Abide.Guerilla.Tags.FieldAttribute("vertex constants", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("real_vector4d_block", 1024, typeof(RealVector4dBlock))]
            public TagBlock VertexConstants;
            [Abide.Guerilla.Tags.FieldAttribute("levels of detail", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("shader_postprocess_level_of_detail_new_block", 1024, typeof(ShaderPostprocessLevelOfDetailNewBlock))]
            public TagBlock LevelsOfDetail;
            [Abide.Guerilla.Tags.FieldAttribute("layers", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("tag_block_index_block", 1024, typeof(TagBlockIndexBlock))]
            public TagBlock Layers;
            [Abide.Guerilla.Tags.FieldAttribute("passes", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("tag_block_index_block", 1024, typeof(TagBlockIndexBlock))]
            public TagBlock Passes;
            [Abide.Guerilla.Tags.FieldAttribute("implementations", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("shader_postprocess_implementation_new_block", 1024, typeof(ShaderPostprocessImplementationNewBlock))]
            public TagBlock Implementations;
            [Abide.Guerilla.Tags.FieldAttribute("overlays", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("shader_postprocess_overlay_new_block", 1024, typeof(ShaderPostprocessOverlayNewBlock))]
            public TagBlock Overlays;
            [Abide.Guerilla.Tags.FieldAttribute("overlay references", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("shader_postprocess_overlay_reference_new_block", 1024, typeof(ShaderPostprocessOverlayReferenceNewBlock))]
            public TagBlock OverlayReferences;
            [Abide.Guerilla.Tags.FieldAttribute("animated parameters", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("shader_postprocess_animated_parameter_new_block", 1024, typeof(ShaderPostprocessAnimatedParameterNewBlock))]
            public TagBlock AnimatedParameters;
            [Abide.Guerilla.Tags.FieldAttribute("animated parameter references", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("shader_postprocess_animated_parameter_reference_new_block", 1024, typeof(ShaderPostprocessAnimatedParameterReferenceNewBlock))]
            public TagBlock AnimatedParameterReferences;
            [Abide.Guerilla.Tags.FieldAttribute("bitmap properties", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("shader_postprocess_bitmap_property_block", 5, typeof(ShaderPostprocessBitmapPropertyBlock))]
            public TagBlock BitmapProperties;
            [Abide.Guerilla.Tags.FieldAttribute("color properties", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("shader_postprocess_color_property_block", 2, typeof(ShaderPostprocessColorPropertyBlock))]
            public TagBlock ColorProperties;
            [Abide.Guerilla.Tags.FieldAttribute("value properties", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("shader_postprocess_value_property_block", 6, typeof(ShaderPostprocessValuePropertyBlock))]
            public TagBlock ValueProperties;
            [Abide.Guerilla.Tags.FieldAttribute("old levels of detail", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("shader_postprocess_level_of_detail_block", 1024, typeof(ShaderPostprocessLevelOfDetailBlock))]
            public TagBlock OldLevelsOfDetail;
            public int Size
            {
                get
                {
                    return 184;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(12, 4)]
            public sealed class ShaderPostprocessBitmapNewBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("bitmap group", typeof(Int32))]
                public Int32 BitmapGroup;
                [Abide.Guerilla.Tags.FieldAttribute("bitmap index", typeof(Int32))]
                public Int32 BitmapIndex;
                [Abide.Guerilla.Tags.FieldAttribute("log bitmap dimension", typeof(Single))]
                public Single LogBitmapDimension;
                public int Size
                {
                    get
                    {
                        return 12;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(4, 4)]
            public sealed class Pixel32Block : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("color", typeof(ColorArgb))]
                public ColorArgb Color;
                public int Size
                {
                    get
                    {
                        return 4;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(16, 4)]
            public sealed class RealVector4dBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("vector3", typeof(Vector3))]
                public Vector3 Vector3;
                [Abide.Guerilla.Tags.FieldAttribute("w", typeof(Single))]
                public Single W;
                public int Size
                {
                    get
                    {
                        return 16;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(6, 4)]
            public sealed class ShaderPostprocessLevelOfDetailNewBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("available layer flags", typeof(Int32))]
                public Int32 AvailableLayerFlags;
                [Abide.Guerilla.Tags.FieldAttribute("layers", typeof(TagBlockIndexStructBlock))]
                public TagBlockIndexStructBlock Layers;
                public int Size
                {
                    get
                    {
                        return 6;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(2, 4)]
                public sealed class TagBlockIndexStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("block index data", typeof(Int16))]
                    public Int16 BlockIndexData;
                    public int Size
                    {
                        get
                        {
                            return 2;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(2, 4)]
            public sealed class TagBlockIndexBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("indices", typeof(TagBlockIndexStructBlock))]
                public TagBlockIndexStructBlock Indices;
                public int Size
                {
                    get
                    {
                        return 2;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(2, 4)]
                public sealed class TagBlockIndexStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("block index data", typeof(Int16))]
                    public Int16 BlockIndexData;
                    public int Size
                    {
                        get
                        {
                            return 2;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(10, 4)]
            public sealed class ShaderPostprocessImplementationNewBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("bitmap transforms", typeof(TagBlockIndexStructBlock))]
                public TagBlockIndexStructBlock BitmapTransforms;
                [Abide.Guerilla.Tags.FieldAttribute("render states", typeof(TagBlockIndexStructBlock))]
                public TagBlockIndexStructBlock RenderStates;
                [Abide.Guerilla.Tags.FieldAttribute("texture states", typeof(TagBlockIndexStructBlock))]
                public TagBlockIndexStructBlock TextureStates;
                [Abide.Guerilla.Tags.FieldAttribute("pixel constants", typeof(TagBlockIndexStructBlock))]
                public TagBlockIndexStructBlock PixelConstants;
                [Abide.Guerilla.Tags.FieldAttribute("vertex constants", typeof(TagBlockIndexStructBlock))]
                public TagBlockIndexStructBlock VertexConstants;
                public int Size
                {
                    get
                    {
                        return 10;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(2, 4)]
                public sealed class TagBlockIndexStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("block index data", typeof(Int16))]
                    public Int16 BlockIndexData;
                    public int Size
                    {
                        get
                        {
                            return 2;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(24, 4)]
            public sealed class ShaderPostprocessOverlayNewBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("input name", typeof(StringId))]
                public StringId InputName;
                [Abide.Guerilla.Tags.FieldAttribute("range name", typeof(StringId))]
                public StringId RangeName;
                [Abide.Guerilla.Tags.FieldAttribute("time period in seconds", typeof(Single))]
                public Single TimePeriodInSeconds;
                [Abide.Guerilla.Tags.FieldAttribute("function", typeof(ScalarFunctionStructBlock))]
                public ScalarFunctionStructBlock Function;
                public int Size
                {
                    get
                    {
                        return 24;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(12, 4)]
                public sealed class ScalarFunctionStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("function", typeof(MappingFunctionBlock))]
                    public MappingFunctionBlock Function1;
                    public int Size
                    {
                        get
                        {
                            return 12;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(12, 4)]
                    public sealed class MappingFunctionBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("data", typeof(TagBlock))]
                        [Abide.Guerilla.Tags.BlockAttribute("byte_block", 1024, typeof(ByteBlock))]
                        public TagBlock Data;
                        public int Size
                        {
                            get
                            {
                                return 12;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                        [Abide.Guerilla.Tags.FieldSetAttribute(1, 4)]
                        public sealed class ByteBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("Value", typeof(Byte))]
                            public Byte Value;
                            public int Size
                            {
                                get
                                {
                                    return 1;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                        }
                    }
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(4, 4)]
            public sealed class ShaderPostprocessOverlayReferenceNewBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("overlay index", typeof(Int16))]
                public Int16 OverlayIndex;
                [Abide.Guerilla.Tags.FieldAttribute("transform index", typeof(Int16))]
                public Int16 TransformIndex;
                public int Size
                {
                    get
                    {
                        return 4;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(2, 4)]
            public sealed class ShaderPostprocessAnimatedParameterNewBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("overlay references", typeof(TagBlockIndexStructBlock))]
                public TagBlockIndexStructBlock OverlayReferences;
                public int Size
                {
                    get
                    {
                        return 2;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(2, 4)]
                public sealed class TagBlockIndexStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("block index data", typeof(Int16))]
                    public Int16 BlockIndexData;
                    public int Size
                    {
                        get
                        {
                            return 2;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(4, 4)]
            public sealed class ShaderPostprocessAnimatedParameterReferenceNewBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(3)]
                public Byte[] EmptyString;
                [Abide.Guerilla.Tags.FieldAttribute("parameter index", typeof(Byte))]
                public Byte ParameterIndex;
                public int Size
                {
                    get
                    {
                        return 4;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(4, 4)]
            public sealed class ShaderPostprocessBitmapPropertyBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("bitmap index", typeof(Int16))]
                public Int16 BitmapIndex;
                [Abide.Guerilla.Tags.FieldAttribute("animated parameter index", typeof(Int16))]
                public Int16 AnimatedParameterIndex;
                public int Size
                {
                    get
                    {
                        return 4;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(12, 4)]
            public sealed class ShaderPostprocessColorPropertyBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("color", typeof(ColorRgbF))]
                public ColorRgbF Color;
                public int Size
                {
                    get
                    {
                        return 12;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(4, 4)]
            public sealed class ShaderPostprocessValuePropertyBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("value", typeof(Single))]
                public Single Value;
                public int Size
                {
                    get
                    {
                        return 4;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(224, 4)]
            public sealed class ShaderPostprocessLevelOfDetailBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("projected height percentage", typeof(Single))]
                public Single ProjectedHeightPercentage;
                [Abide.Guerilla.Tags.FieldAttribute("available layers", typeof(Int32))]
                public Int32 AvailableLayers;
                [Abide.Guerilla.Tags.FieldAttribute("layers", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("shader_postprocess_layer_block", 25, typeof(ShaderPostprocessLayerBlock))]
                public TagBlock Layers;
                [Abide.Guerilla.Tags.FieldAttribute("passes", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("shader_postprocess_pass_block", 1024, typeof(ShaderPostprocessPassBlock))]
                public TagBlock Passes;
                [Abide.Guerilla.Tags.FieldAttribute("implementations", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("shader_postprocess_implementation_block", 1024, typeof(ShaderPostprocessImplementationBlock))]
                public TagBlock Implementations;
                [Abide.Guerilla.Tags.FieldAttribute("bitmaps", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("shader_postprocess_bitmap_block", 1024, typeof(ShaderPostprocessBitmapBlock))]
                public TagBlock Bitmaps;
                [Abide.Guerilla.Tags.FieldAttribute("bitmap transforms", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("shader_postprocess_bitmap_transform_block", 1024, typeof(ShaderPostprocessBitmapTransformBlock))]
                public TagBlock BitmapTransforms;
                [Abide.Guerilla.Tags.FieldAttribute("values", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("shader_postprocess_value_block", 1024, typeof(ShaderPostprocessValueBlock))]
                public TagBlock Values;
                [Abide.Guerilla.Tags.FieldAttribute("colors", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("shader_postprocess_color_block", 1024, typeof(ShaderPostprocessColorBlock))]
                public TagBlock Colors;
                [Abide.Guerilla.Tags.FieldAttribute("bitmap transform overlays", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("shader_postprocess_bitmap_transform_overlay_block", 1024, typeof(ShaderPostprocessBitmapTransformOverlayBlock))]
                public TagBlock BitmapTransformOverlays;
                [Abide.Guerilla.Tags.FieldAttribute("value overlays", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("shader_postprocess_value_overlay_block", 1024, typeof(ShaderPostprocessValueOverlayBlock))]
                public TagBlock ValueOverlays;
                [Abide.Guerilla.Tags.FieldAttribute("color overlays", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("shader_postprocess_color_overlay_block", 1024, typeof(ShaderPostprocessColorOverlayBlock))]
                public TagBlock ColorOverlays;
                [Abide.Guerilla.Tags.FieldAttribute("vertex shader constants", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("shader_postprocess_vertex_shader_constant_block", 1024, typeof(ShaderPostprocessVertexShaderConstantBlock))]
                public TagBlock VertexShaderConstants;
                [Abide.Guerilla.Tags.FieldAttribute("GPU State", typeof(ShaderGpuStateStructBlock))]
                public ShaderGpuStateStructBlock GpuState;
                public int Size
                {
                    get
                    {
                        return 224;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(2, 4)]
                public sealed class ShaderPostprocessLayerBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("passes", typeof(TagBlockIndexStructBlock))]
                    public TagBlockIndexStructBlock Passes;
                    public int Size
                    {
                        get
                        {
                            return 2;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(2, 4)]
                    public sealed class TagBlockIndexStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("block index data", typeof(Int16))]
                        public Int16 BlockIndexData;
                        public int Size
                        {
                            get
                            {
                                return 2;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(18, 4)]
                public sealed class ShaderPostprocessPassBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("shader pass", typeof(TagReference))]
                    public TagReference ShaderPass;
                    [Abide.Guerilla.Tags.FieldAttribute("implementations", typeof(TagBlockIndexStructBlock))]
                    public TagBlockIndexStructBlock Implementations;
                    public int Size
                    {
                        get
                        {
                            return 18;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(2, 4)]
                    public sealed class TagBlockIndexStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("block index data", typeof(Int16))]
                        public Int16 BlockIndexData;
                        public int Size
                        {
                            get
                            {
                                return 2;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(44, 4)]
                public sealed class ShaderPostprocessImplementationBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("GPU Constant State", typeof(ShaderGpuStateReferenceStructBlock))]
                    public ShaderGpuStateReferenceStructBlock GpuConstantState;
                    [Abide.Guerilla.Tags.FieldAttribute("GPU Volatile State", typeof(ShaderGpuStateReferenceStructBlock))]
                    public ShaderGpuStateReferenceStructBlock GpuVolatileState;
                    [Abide.Guerilla.Tags.FieldAttribute("bitmap parameters", typeof(TagBlockIndexStructBlock))]
                    public TagBlockIndexStructBlock BitmapParameters;
                    [Abide.Guerilla.Tags.FieldAttribute("bitmap transforms", typeof(TagBlockIndexStructBlock))]
                    public TagBlockIndexStructBlock BitmapTransforms;
                    [Abide.Guerilla.Tags.FieldAttribute("value parameters", typeof(TagBlockIndexStructBlock))]
                    public TagBlockIndexStructBlock ValueParameters;
                    [Abide.Guerilla.Tags.FieldAttribute("color parameters", typeof(TagBlockIndexStructBlock))]
                    public TagBlockIndexStructBlock ColorParameters;
                    [Abide.Guerilla.Tags.FieldAttribute("bitmap transform overlays", typeof(TagBlockIndexStructBlock))]
                    public TagBlockIndexStructBlock BitmapTransformOverlays;
                    [Abide.Guerilla.Tags.FieldAttribute("value overlays", typeof(TagBlockIndexStructBlock))]
                    public TagBlockIndexStructBlock ValueOverlays;
                    [Abide.Guerilla.Tags.FieldAttribute("color overlays", typeof(TagBlockIndexStructBlock))]
                    public TagBlockIndexStructBlock ColorOverlays;
                    [Abide.Guerilla.Tags.FieldAttribute("vertex shader constants", typeof(TagBlockIndexStructBlock))]
                    public TagBlockIndexStructBlock VertexShaderConstants;
                    public int Size
                    {
                        get
                        {
                            return 44;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(14, 4)]
                    public sealed class ShaderGpuStateReferenceStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("render states", typeof(TagBlockIndexStructBlock))]
                        public TagBlockIndexStructBlock RenderStates;
                        [Abide.Guerilla.Tags.FieldAttribute("texture stage states", typeof(TagBlockIndexStructBlock))]
                        public TagBlockIndexStructBlock TextureStageStates;
                        [Abide.Guerilla.Tags.FieldAttribute("render state parameters", typeof(TagBlockIndexStructBlock))]
                        public TagBlockIndexStructBlock RenderStateParameters;
                        [Abide.Guerilla.Tags.FieldAttribute("texture stage parameters", typeof(TagBlockIndexStructBlock))]
                        public TagBlockIndexStructBlock TextureStageParameters;
                        [Abide.Guerilla.Tags.FieldAttribute("textures", typeof(TagBlockIndexStructBlock))]
                        public TagBlockIndexStructBlock Textures;
                        [Abide.Guerilla.Tags.FieldAttribute("Vn Constants", typeof(TagBlockIndexStructBlock))]
                        public TagBlockIndexStructBlock VnConstants;
                        [Abide.Guerilla.Tags.FieldAttribute("Cn Constants", typeof(TagBlockIndexStructBlock))]
                        public TagBlockIndexStructBlock CnConstants;
                        public int Size
                        {
                            get
                            {
                                return 14;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                        [Abide.Guerilla.Tags.FieldSetAttribute(2, 4)]
                        public sealed class TagBlockIndexStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("block index data", typeof(Int16))]
                            public Int16 BlockIndexData;
                            public int Size
                            {
                                get
                                {
                                    return 2;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                        }
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(2, 4)]
                    public sealed class TagBlockIndexStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("block index data", typeof(Int16))]
                        public Int16 BlockIndexData;
                        public int Size
                        {
                            get
                            {
                                return 2;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(10, 4)]
                public sealed class ShaderPostprocessBitmapBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("parameter index", typeof(Byte))]
                    public Byte ParameterIndex;
                    [Abide.Guerilla.Tags.FieldAttribute("flags", typeof(Byte))]
                    public Byte Flags;
                    [Abide.Guerilla.Tags.FieldAttribute("bitmap group index", typeof(Int32))]
                    public Int32 BitmapGroupIndex;
                    [Abide.Guerilla.Tags.FieldAttribute("log bitmap dimension", typeof(Single))]
                    public Single LogBitmapDimension;
                    public int Size
                    {
                        get
                        {
                            return 10;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(6, 4)]
                public sealed class ShaderPostprocessBitmapTransformBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("parameter index", typeof(Byte))]
                    public Byte ParameterIndex;
                    [Abide.Guerilla.Tags.FieldAttribute("bitmap transform index", typeof(Byte))]
                    public Byte BitmapTransformIndex;
                    [Abide.Guerilla.Tags.FieldAttribute("value", typeof(Single))]
                    public Single Value;
                    public int Size
                    {
                        get
                        {
                            return 6;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(5, 4)]
                public sealed class ShaderPostprocessValueBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("parameter index", typeof(Byte))]
                    public Byte ParameterIndex;
                    [Abide.Guerilla.Tags.FieldAttribute("value", typeof(Single))]
                    public Single Value;
                    public int Size
                    {
                        get
                        {
                            return 5;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(13, 4)]
                public sealed class ShaderPostprocessColorBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("parameter index", typeof(Byte))]
                    public Byte ParameterIndex;
                    [Abide.Guerilla.Tags.FieldAttribute("color", typeof(ColorRgbF))]
                    public ColorRgbF Color;
                    public int Size
                    {
                        get
                        {
                            return 13;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(27, 4)]
                public sealed class ShaderPostprocessBitmapTransformOverlayBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("parameter index", typeof(Byte))]
                    public Byte ParameterIndex;
                    [Abide.Guerilla.Tags.FieldAttribute("transform index", typeof(Byte))]
                    public Byte TransformIndex;
                    [Abide.Guerilla.Tags.FieldAttribute("animation property type", typeof(Byte))]
                    public Byte AnimationPropertyType;
                    [Abide.Guerilla.Tags.FieldAttribute("input name", typeof(StringId))]
                    public StringId InputName;
                    [Abide.Guerilla.Tags.FieldAttribute("range name", typeof(StringId))]
                    public StringId RangeName;
                    [Abide.Guerilla.Tags.FieldAttribute("time period in seconds", typeof(Single))]
                    public Single TimePeriodInSeconds;
                    [Abide.Guerilla.Tags.FieldAttribute("function", typeof(ScalarFunctionStructBlock))]
                    public ScalarFunctionStructBlock Function;
                    public int Size
                    {
                        get
                        {
                            return 27;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(12, 4)]
                    public sealed class ScalarFunctionStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("function", typeof(MappingFunctionBlock))]
                        public MappingFunctionBlock Function1;
                        public int Size
                        {
                            get
                            {
                                return 12;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                        [Abide.Guerilla.Tags.FieldSetAttribute(12, 4)]
                        public sealed class MappingFunctionBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("data", typeof(TagBlock))]
                            [Abide.Guerilla.Tags.BlockAttribute("byte_block", 1024, typeof(ByteBlock))]
                            public TagBlock Data;
                            public int Size
                            {
                                get
                                {
                                    return 12;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                            [Abide.Guerilla.Tags.FieldSetAttribute(1, 4)]
                            public sealed class ByteBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                            {
                                [Abide.Guerilla.Tags.FieldAttribute("Value", typeof(Byte))]
                                public Byte Value;
                                public int Size
                                {
                                    get
                                    {
                                        return 1;
                                    }
                                }
                                public void Initialize()
                                {
                                }
                                public void Read(System.IO.BinaryReader reader)
                                {
                                }
                                public void Write(System.IO.BinaryWriter writer)
                                {
                                }
                            }
                        }
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(25, 4)]
                public sealed class ShaderPostprocessValueOverlayBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("parameter index", typeof(Byte))]
                    public Byte ParameterIndex;
                    [Abide.Guerilla.Tags.FieldAttribute("input name", typeof(StringId))]
                    public StringId InputName;
                    [Abide.Guerilla.Tags.FieldAttribute("range name", typeof(StringId))]
                    public StringId RangeName;
                    [Abide.Guerilla.Tags.FieldAttribute("time period in seconds", typeof(Single))]
                    public Single TimePeriodInSeconds;
                    [Abide.Guerilla.Tags.FieldAttribute("function", typeof(ScalarFunctionStructBlock))]
                    public ScalarFunctionStructBlock Function;
                    public int Size
                    {
                        get
                        {
                            return 25;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(12, 4)]
                    public sealed class ScalarFunctionStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("function", typeof(MappingFunctionBlock))]
                        public MappingFunctionBlock Function1;
                        public int Size
                        {
                            get
                            {
                                return 12;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                        [Abide.Guerilla.Tags.FieldSetAttribute(12, 4)]
                        public sealed class MappingFunctionBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("data", typeof(TagBlock))]
                            [Abide.Guerilla.Tags.BlockAttribute("byte_block", 1024, typeof(ByteBlock))]
                            public TagBlock Data;
                            public int Size
                            {
                                get
                                {
                                    return 12;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                            [Abide.Guerilla.Tags.FieldSetAttribute(1, 4)]
                            public sealed class ByteBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                            {
                                [Abide.Guerilla.Tags.FieldAttribute("Value", typeof(Byte))]
                                public Byte Value;
                                public int Size
                                {
                                    get
                                    {
                                        return 1;
                                    }
                                }
                                public void Initialize()
                                {
                                }
                                public void Read(System.IO.BinaryReader reader)
                                {
                                }
                                public void Write(System.IO.BinaryWriter writer)
                                {
                                }
                            }
                        }
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(25, 4)]
                public sealed class ShaderPostprocessColorOverlayBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("parameter index", typeof(Byte))]
                    public Byte ParameterIndex;
                    [Abide.Guerilla.Tags.FieldAttribute("input name", typeof(StringId))]
                    public StringId InputName;
                    [Abide.Guerilla.Tags.FieldAttribute("range name", typeof(StringId))]
                    public StringId RangeName;
                    [Abide.Guerilla.Tags.FieldAttribute("time period in seconds", typeof(Single))]
                    public Single TimePeriodInSeconds;
                    [Abide.Guerilla.Tags.FieldAttribute("function", typeof(ColorFunctionStructBlock))]
                    public ColorFunctionStructBlock Function;
                    public int Size
                    {
                        get
                        {
                            return 25;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(12, 4)]
                    public sealed class ColorFunctionStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("function", typeof(MappingFunctionBlock))]
                        public MappingFunctionBlock Function1;
                        public int Size
                        {
                            get
                            {
                                return 12;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                        [Abide.Guerilla.Tags.FieldSetAttribute(12, 4)]
                        public sealed class MappingFunctionBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("data", typeof(TagBlock))]
                            [Abide.Guerilla.Tags.BlockAttribute("byte_block", 1024, typeof(ByteBlock))]
                            public TagBlock Data;
                            public int Size
                            {
                                get
                                {
                                    return 12;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                            [Abide.Guerilla.Tags.FieldSetAttribute(1, 4)]
                            public sealed class ByteBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                            {
                                [Abide.Guerilla.Tags.FieldAttribute("Value", typeof(Byte))]
                                public Byte Value;
                                public int Size
                                {
                                    get
                                    {
                                        return 1;
                                    }
                                }
                                public void Initialize()
                                {
                                }
                                public void Read(System.IO.BinaryReader reader)
                                {
                                }
                                public void Write(System.IO.BinaryWriter writer)
                                {
                                }
                            }
                        }
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(18, 4)]
                public sealed class ShaderPostprocessVertexShaderConstantBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("register index", typeof(Byte))]
                    public Byte RegisterIndex;
                    [Abide.Guerilla.Tags.FieldAttribute("register bank", typeof(Byte))]
                    public Byte RegisterBank;
                    [Abide.Guerilla.Tags.FieldAttribute("data", typeof(Single))]
                    public Single Data;
                    [Abide.Guerilla.Tags.FieldAttribute("data", typeof(Single))]
                    public Single Data1;
                    [Abide.Guerilla.Tags.FieldAttribute("data", typeof(Single))]
                    public Single Data2;
                    [Abide.Guerilla.Tags.FieldAttribute("data", typeof(Single))]
                    public Single Data3;
                    public int Size
                    {
                        get
                        {
                            return 18;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(84, 4)]
                public sealed class ShaderGpuStateStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("render states", typeof(TagBlock))]
                    [Abide.Guerilla.Tags.BlockAttribute("render_state_block", 1024, typeof(RenderStateBlock))]
                    public TagBlock RenderStates;
                    [Abide.Guerilla.Tags.FieldAttribute("texture stage states", typeof(TagBlock))]
                    [Abide.Guerilla.Tags.BlockAttribute("texture_stage_state_block", 1024, typeof(TextureStageStateBlock))]
                    public TagBlock TextureStageStates;
                    [Abide.Guerilla.Tags.FieldAttribute("render state parameters", typeof(TagBlock))]
                    [Abide.Guerilla.Tags.BlockAttribute("render_state_parameter_block", 1024, typeof(RenderStateParameterBlock))]
                    public TagBlock RenderStateParameters;
                    [Abide.Guerilla.Tags.FieldAttribute("texture stage parameters", typeof(TagBlock))]
                    [Abide.Guerilla.Tags.BlockAttribute("texture_stage_state_parameter_block", 1024, typeof(TextureStageStateParameterBlock))]
                    public TagBlock TextureStageParameters;
                    [Abide.Guerilla.Tags.FieldAttribute("textures", typeof(TagBlock))]
                    [Abide.Guerilla.Tags.BlockAttribute("texture_block", 1024, typeof(TextureBlock))]
                    public TagBlock Textures;
                    [Abide.Guerilla.Tags.FieldAttribute("Vn Constants", typeof(TagBlock))]
                    [Abide.Guerilla.Tags.BlockAttribute("vertex_shader_constant_block", 1024, typeof(VertexShaderConstantBlock))]
                    public TagBlock VnConstants;
                    [Abide.Guerilla.Tags.FieldAttribute("Cn Constants", typeof(TagBlock))]
                    [Abide.Guerilla.Tags.BlockAttribute("vertex_shader_constant_block", 1024, typeof(VertexShaderConstantBlock))]
                    public TagBlock CnConstants;
                    public int Size
                    {
                        get
                        {
                            return 84;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(5, 4)]
                    public sealed class RenderStateBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("state index", typeof(Byte))]
                        public Byte StateIndex;
                        [Abide.Guerilla.Tags.FieldAttribute("state value", typeof(Int32))]
                        public Int32 StateValue;
                        public int Size
                        {
                            get
                            {
                                return 5;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(6, 4)]
                    public sealed class TextureStageStateBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("state index", typeof(Byte))]
                        public Byte StateIndex;
                        [Abide.Guerilla.Tags.FieldAttribute("stage index", typeof(Byte))]
                        public Byte StageIndex;
                        [Abide.Guerilla.Tags.FieldAttribute("state value", typeof(Int32))]
                        public Int32 StateValue;
                        public int Size
                        {
                            get
                            {
                                return 6;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(3, 4)]
                    public sealed class RenderStateParameterBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("parameter index", typeof(Byte))]
                        public Byte ParameterIndex;
                        [Abide.Guerilla.Tags.FieldAttribute("parameter type", typeof(Byte))]
                        public Byte ParameterType;
                        [Abide.Guerilla.Tags.FieldAttribute("state index", typeof(Byte))]
                        public Byte StateIndex;
                        public int Size
                        {
                            get
                            {
                                return 3;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(4, 4)]
                    public sealed class TextureStageStateParameterBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("parameter index", typeof(Byte))]
                        public Byte ParameterIndex;
                        [Abide.Guerilla.Tags.FieldAttribute("parameter type", typeof(Byte))]
                        public Byte ParameterType;
                        [Abide.Guerilla.Tags.FieldAttribute("state index", typeof(Byte))]
                        public Byte StateIndex;
                        [Abide.Guerilla.Tags.FieldAttribute("stage index", typeof(Byte))]
                        public Byte StageIndex;
                        public int Size
                        {
                            get
                            {
                                return 4;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(4, 4)]
                    public sealed class TextureBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("stage index", typeof(Byte))]
                        public Byte StageIndex;
                        [Abide.Guerilla.Tags.FieldAttribute("parameter index", typeof(Byte))]
                        public Byte ParameterIndex;
                        [Abide.Guerilla.Tags.FieldAttribute("global texture index", typeof(Byte))]
                        public Byte GlobalTextureIndex;
                        [Abide.Guerilla.Tags.FieldAttribute("flags", typeof(Byte))]
                        public Byte Flags;
                        public int Size
                        {
                            get
                            {
                                return 4;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(4, 4)]
                    public sealed class VertexShaderConstantBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("register index", typeof(Byte))]
                        public Byte RegisterIndex;
                        [Abide.Guerilla.Tags.FieldAttribute("parameter index", typeof(Byte))]
                        public Byte ParameterIndex;
                        [Abide.Guerilla.Tags.FieldAttribute("destination mask", typeof(Byte))]
                        public Byte DestinationMask;
                        [Abide.Guerilla.Tags.FieldAttribute("scale by texture stage", typeof(Byte))]
                        public Byte ScaleByTextureStage;
                        public int Size
                        {
                            get
                            {
                                return 4;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                }
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(8, 4)]
        public sealed class PredictedResourceBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("type", typeof(Int16))]
            [Abide.Guerilla.Tags.OptionsAttribute(typeof(TypeOptions), false)]
            public Int16 Type;
            [Abide.Guerilla.Tags.FieldAttribute("resource index", typeof(Int16))]
            public Int16 ResourceIndex;
            [Abide.Guerilla.Tags.FieldAttribute("tag index", typeof(Int32))]
            public Int32 TagIndex;
            public int Size
            {
                get
                {
                    return 8;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            public enum TypeOptions
            {
                Bitmap = 0,
                Sound = 1,
                RenderModelGeometry = 2,
                ClusterGeometry = 3,
                ClusterInstancedGeometry = 4,
                LightmapGeometryObjectBuckets = 5,
                LightmapGeometryInstanceBuckets = 6,
                LightmapClusterBitmaps = 7,
                LightmapInstanceBitmaps = 8,
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(4, 4)]
        public sealed class LongBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("Bitmap Group Index", typeof(Int32))]
            public Int32 BitmapGroupIndex;
            public int Size
            {
                get
                {
                    return 4;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
        }
        public enum FlagsOptions
        {
            Water = 1,
            SortFirst = 2,
            NoActiveCamo = 4,
        }
        public enum ShaderLodBiasOptions
        {
            None = 0,
            _4xSize = 1,
            _2xSize = 2,
            _12Size = 3,
            _14Size = 4,
            Never = 5,
            Cinematic = 6,
        }
        public enum SpecularTypeOptions
        {
            None = 0,
            Default = 1,
            Dull = 2,
            Shiny = 3,
        }
        public enum LightmapTypeOptions
        {
            Diffuse = 0,
            DefaultSpecular = 1,
            DullSpecular = 2,
            ShinySpecular = 3,
        }
    }
}
#pragma warning restore CS1591
