#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Abide.Guerilla.Tags
{
    using Abide.Guerilla.Types;
    using Abide.HaloLibrary;
    using System;
    
    [Abide.Guerilla.Tags.FieldSetAttribute(12, 4)]
    [Abide.Guerilla.Tags.TagGroupAttribute("sound_effect_collection", 1936095275u, 4294967293u, typeof(SoundEffectCollectionBlock))]
    public sealed class SoundEffectCollectionBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
    {
        [Abide.Guerilla.Tags.FieldAttribute("sound effects", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("platform_sound_playback_block", 128, typeof(PlatformSoundPlaybackBlock))]
        public TagBlock SoundEffects;
        public int Size
        {
            get
            {
                return 12;
            }
        }
        public void Initialize()
        {
        }
        public void Read(System.IO.BinaryReader reader)
        {
        }
        public void Write(System.IO.BinaryWriter writer)
        {
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(76, 4)]
        public sealed class PlatformSoundPlaybackBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("name^", typeof(StringId))]
            public StringId Name;
            [Abide.Guerilla.Tags.FieldAttribute("playback", typeof(PlatformSoundPlaybackStructBlock))]
            public PlatformSoundPlaybackStructBlock Playback;
            public int Size
            {
                get
                {
                    return 76;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(72, 4)]
            public sealed class PlatformSoundPlaybackStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("platform_sound_override_mixbins_block", 8, typeof(PlatformSoundOverrideMixbinsBlock))]
                public TagBlock EmptyString;
                [Abide.Guerilla.Tags.FieldAttribute("flags", typeof(Int32))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
                public Int32 Flags;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(8)]
                public Byte[] EmptyString1;
                [Abide.Guerilla.Tags.FieldAttribute("filter", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("platform_sound_filter_block", 1, typeof(PlatformSoundFilterBlock))]
                public TagBlock Filter;
                [Abide.Guerilla.Tags.FieldAttribute("pitch lfo", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("platform_sound_pitch_lfo_block", 1, typeof(PlatformSoundPitchLfoBlock))]
                public TagBlock PitchLfo;
                [Abide.Guerilla.Tags.FieldAttribute("filter lfo", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("platform_sound_filter_lfo_block", 1, typeof(PlatformSoundFilterLfoBlock))]
                public TagBlock FilterLfo;
                [Abide.Guerilla.Tags.FieldAttribute("sound effect", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("sound_effect_playback_block", 1, typeof(SoundEffectPlaybackBlock))]
                public TagBlock SoundEffect;
                public int Size
                {
                    get
                    {
                        return 72;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(8, 4)]
                public sealed class PlatformSoundOverrideMixbinsBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("mixbin", typeof(Int32))]
                    [Abide.Guerilla.Tags.OptionsAttribute(typeof(MixbinOptions), false)]
                    public Int32 Mixbin;
                    [Abide.Guerilla.Tags.FieldAttribute("gain:dB", typeof(Single))]
                    public Single Gain;
                    public int Size
                    {
                        get
                        {
                            return 8;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    public enum MixbinOptions
                    {
                        FrontLeft = 0,
                        FrontRight = 1,
                        BackLeft = 2,
                        BackRight = 3,
                        Center = 4,
                        LowFrequency = 5,
                        Reverb = 6,
                        _3dFrontLeft = 7,
                        _3dFrontRight = 8,
                        _3dBackLeft = 9,
                        _3dBackRight = 10,
                        DefaultLeftSpeakers = 11,
                        DefaultRightSpeakers = 12,
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(72, 4)]
                public sealed class PlatformSoundFilterBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("filter type", typeof(Int32))]
                    [Abide.Guerilla.Tags.OptionsAttribute(typeof(FilterTypeOptions), false)]
                    public Int32 FilterType;
                    [Abide.Guerilla.Tags.FieldAttribute("filter width:[0,7]", typeof(Int32))]
                    public Int32 FilterWidth;
                    [Abide.Guerilla.Tags.FieldAttribute("left filter frequency", typeof(SoundPlaybackParameterDefinitionBlock))]
                    public SoundPlaybackParameterDefinitionBlock LeftFilterFrequency1;
                    [Abide.Guerilla.Tags.FieldAttribute("left filter gain", typeof(SoundPlaybackParameterDefinitionBlock))]
                    public SoundPlaybackParameterDefinitionBlock LeftFilterGain1;
                    [Abide.Guerilla.Tags.FieldAttribute("right filter frequency", typeof(SoundPlaybackParameterDefinitionBlock))]
                    public SoundPlaybackParameterDefinitionBlock RightFilterFrequency1;
                    [Abide.Guerilla.Tags.FieldAttribute("right filter gain", typeof(SoundPlaybackParameterDefinitionBlock))]
                    public SoundPlaybackParameterDefinitionBlock RightFilterGain1;
                    public int Size
                    {
                        get
                        {
                            return 72;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(16, 4)]
                    public sealed class SoundPlaybackParameterDefinitionBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        public int Size
                        {
                            get
                            {
                                return 16;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                    public enum FilterTypeOptions
                    {
                        ParametricEq = 0,
                        Dls2 = 1,
                        BothOnlyValidForMono = 2,
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(48, 4)]
                public sealed class PlatformSoundPitchLfoBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("delay", typeof(SoundPlaybackParameterDefinitionBlock))]
                    public SoundPlaybackParameterDefinitionBlock Delay1;
                    [Abide.Guerilla.Tags.FieldAttribute("frequency", typeof(SoundPlaybackParameterDefinitionBlock))]
                    public SoundPlaybackParameterDefinitionBlock Frequency1;
                    [Abide.Guerilla.Tags.FieldAttribute("pitch modulation", typeof(SoundPlaybackParameterDefinitionBlock))]
                    public SoundPlaybackParameterDefinitionBlock PitchModulation1;
                    public int Size
                    {
                        get
                        {
                            return 48;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(16, 4)]
                    public sealed class SoundPlaybackParameterDefinitionBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        public int Size
                        {
                            get
                            {
                                return 16;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(64, 4)]
                public sealed class PlatformSoundFilterLfoBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("delay", typeof(SoundPlaybackParameterDefinitionBlock))]
                    public SoundPlaybackParameterDefinitionBlock Delay1;
                    [Abide.Guerilla.Tags.FieldAttribute("frequency", typeof(SoundPlaybackParameterDefinitionBlock))]
                    public SoundPlaybackParameterDefinitionBlock Frequency1;
                    [Abide.Guerilla.Tags.FieldAttribute("cutoff modulation", typeof(SoundPlaybackParameterDefinitionBlock))]
                    public SoundPlaybackParameterDefinitionBlock CutoffModulation1;
                    [Abide.Guerilla.Tags.FieldAttribute("gain modulation", typeof(SoundPlaybackParameterDefinitionBlock))]
                    public SoundPlaybackParameterDefinitionBlock GainModulation1;
                    public int Size
                    {
                        get
                        {
                            return 64;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(16, 4)]
                    public sealed class SoundPlaybackParameterDefinitionBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        public int Size
                        {
                            get
                            {
                                return 16;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(72, 4)]
                public sealed class SoundEffectPlaybackBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("sound effect struct", typeof(SoundEffectStructDefinitionBlock))]
                    public SoundEffectStructDefinitionBlock SoundEffectStruct;
                    public int Size
                    {
                        get
                        {
                            return 72;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(72, 4)]
                    public sealed class SoundEffectStructDefinitionBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("", typeof(TagReference))]
                        public TagReference EmptyString;
                        [Abide.Guerilla.Tags.FieldAttribute("components", typeof(TagBlock))]
                        [Abide.Guerilla.Tags.BlockAttribute("sound_effect_component_block", 16, typeof(SoundEffectComponentBlock))]
                        public TagBlock Components;
                        [Abide.Guerilla.Tags.FieldAttribute("", typeof(TagBlock))]
                        [Abide.Guerilla.Tags.BlockAttribute("sound_effect_overrides_block", 128, typeof(SoundEffectOverridesBlock))]
                        public TagBlock EmptyString1;
                        [Abide.Guerilla.Tags.FieldAttribute("", typeof(TagBlock))]
                        [Abide.Guerilla.Tags.BlockAttribute("platform_sound_effect_collection_block", 1, typeof(PlatformSoundEffectCollectionBlock))]
                        public TagBlock EmptyString3;
                        public int Size
                        {
                            get
                            {
                                return 72;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                        [Abide.Guerilla.Tags.FieldSetAttribute(24, 4)]
                        public sealed class SoundEffectComponentBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("sound^", typeof(TagReference))]
                            public TagReference Sound;
                            [Abide.Guerilla.Tags.FieldAttribute("gain:dB#additional attenuation to sound", typeof(Single))]
                            public Single Gain;
                            [Abide.Guerilla.Tags.FieldAttribute("flags", typeof(Int32))]
                            [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
                            public Int32 Flags;
                            public int Size
                            {
                                get
                                {
                                    return 24;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                            public enum FlagsOptions
                            {
                                DontPlayAtStart = 1,
                                PlayOnStop = 2,
                                EmptyString = 4,
                                PlayAlternate = 8,
                                EmptyString1 = 16,
                                SyncWithOriginLoopingSound = 32,
                            }
                        }
                        [Abide.Guerilla.Tags.FieldSetAttribute(16, 4)]
                        public sealed class SoundEffectOverridesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("name", typeof(StringId))]
                            public StringId Name;
                            [Abide.Guerilla.Tags.FieldAttribute("overrides", typeof(TagBlock))]
                            [Abide.Guerilla.Tags.BlockAttribute("sound_effect_override_parameters_block", 128, typeof(SoundEffectOverrideParametersBlock))]
                            public TagBlock Overrides;
                            public int Size
                            {
                                get
                                {
                                    return 16;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                            [Abide.Guerilla.Tags.FieldSetAttribute(36, 4)]
                            public sealed class SoundEffectOverrideParametersBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                            {
                                [Abide.Guerilla.Tags.FieldAttribute("name", typeof(StringId))]
                                public StringId Name;
                                [Abide.Guerilla.Tags.FieldAttribute("input", typeof(StringId))]
                                public StringId Input;
                                [Abide.Guerilla.Tags.FieldAttribute("range", typeof(StringId))]
                                public StringId Range;
                                [Abide.Guerilla.Tags.FieldAttribute("time period: seconds", typeof(Single))]
                                public Single TimePeriod;
                                [Abide.Guerilla.Tags.FieldAttribute("integer value", typeof(Int32))]
                                public Int32 IntegerValue;
                                [Abide.Guerilla.Tags.FieldAttribute("real value", typeof(Single))]
                                public Single RealValue;
                                [Abide.Guerilla.Tags.FieldAttribute("function value", typeof(MappingFunctionBlock))]
                                public MappingFunctionBlock FunctionValue;
                                public int Size
                                {
                                    get
                                    {
                                        return 36;
                                    }
                                }
                                public void Initialize()
                                {
                                }
                                public void Read(System.IO.BinaryReader reader)
                                {
                                }
                                public void Write(System.IO.BinaryWriter writer)
                                {
                                }
                                [Abide.Guerilla.Tags.FieldSetAttribute(12, 4)]
                                public sealed class MappingFunctionBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                                {
                                    [Abide.Guerilla.Tags.FieldAttribute("data", typeof(TagBlock))]
                                    [Abide.Guerilla.Tags.BlockAttribute("byte_block", 1024, typeof(ByteBlock))]
                                    public TagBlock Data;
                                    public int Size
                                    {
                                        get
                                        {
                                            return 12;
                                        }
                                    }
                                    public void Initialize()
                                    {
                                    }
                                    public void Read(System.IO.BinaryReader reader)
                                    {
                                    }
                                    public void Write(System.IO.BinaryWriter writer)
                                    {
                                    }
                                    [Abide.Guerilla.Tags.FieldSetAttribute(1, 4)]
                                    public sealed class ByteBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                                    {
                                        [Abide.Guerilla.Tags.FieldAttribute("Value", typeof(Byte))]
                                        public Byte Value;
                                        public int Size
                                        {
                                            get
                                            {
                                                return 1;
                                            }
                                        }
                                        public void Initialize()
                                        {
                                        }
                                        public void Read(System.IO.BinaryReader reader)
                                        {
                                        }
                                        public void Write(System.IO.BinaryWriter writer)
                                        {
                                        }
                                    }
                                }
                            }
                        }
                        [Abide.Guerilla.Tags.FieldSetAttribute(28, 4)]
                        public sealed class PlatformSoundEffectCollectionBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("sound effects*", typeof(TagBlock))]
                            [Abide.Guerilla.Tags.BlockAttribute("platform_sound_effect_block", 8, typeof(PlatformSoundEffectBlock))]
                            public TagBlock SoundEffects;
                            [Abide.Guerilla.Tags.FieldAttribute("low frequency input*", typeof(TagBlock))]
                            [Abide.Guerilla.Tags.BlockAttribute("platform_sound_effect_function_block", 16, typeof(PlatformSoundEffectFunctionBlock))]
                            public TagBlock LowFrequencyInput;
                            [Abide.Guerilla.Tags.FieldAttribute("sound effect overrides", typeof(Int32))]
                            public Int32 SoundEffectOverrides;
                            public int Size
                            {
                                get
                                {
                                    return 28;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                            [Abide.Guerilla.Tags.FieldSetAttribute(40, 4)]
                            public sealed class PlatformSoundEffectBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                            {
                                [Abide.Guerilla.Tags.FieldAttribute("function inputs", typeof(TagBlock))]
                                [Abide.Guerilla.Tags.BlockAttribute("platform_sound_effect_function_block", 16, typeof(PlatformSoundEffectFunctionBlock))]
                                public TagBlock FunctionInputs;
                                [Abide.Guerilla.Tags.FieldAttribute("constant inputs", typeof(TagBlock))]
                                [Abide.Guerilla.Tags.BlockAttribute("platform_sound_effect_constant_block", 16, typeof(PlatformSoundEffectConstantBlock))]
                                public TagBlock ConstantInputs;
                                [Abide.Guerilla.Tags.FieldAttribute("template override descriptors", typeof(TagBlock))]
                                [Abide.Guerilla.Tags.BlockAttribute("platform_sound_effect_override_descriptor_block", 16, typeof(PlatformSoundEffectOverrideDescriptorBlock))]
                                public TagBlock TemplateOverrideDescriptors;
                                [Abide.Guerilla.Tags.FieldAttribute("input overrides", typeof(Int32))]
                                public Int32 InputOverrides;
                                public int Size
                                {
                                    get
                                    {
                                        return 40;
                                    }
                                }
                                public void Initialize()
                                {
                                }
                                public void Read(System.IO.BinaryReader reader)
                                {
                                }
                                public void Write(System.IO.BinaryWriter writer)
                                {
                                }
                                [Abide.Guerilla.Tags.FieldSetAttribute(20, 4)]
                                public sealed class PlatformSoundEffectFunctionBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                                {
                                    [Abide.Guerilla.Tags.FieldAttribute("input", typeof(Int16))]
                                    [Abide.Guerilla.Tags.OptionsAttribute(typeof(InputOptions), false)]
                                    public Int16 Input;
                                    [Abide.Guerilla.Tags.FieldAttribute("range", typeof(Int16))]
                                    [Abide.Guerilla.Tags.OptionsAttribute(typeof(RangeOptions), false)]
                                    public Int16 Range;
                                    [Abide.Guerilla.Tags.FieldAttribute("function", typeof(MappingFunctionBlock))]
                                    public MappingFunctionBlock Function;
                                    [Abide.Guerilla.Tags.FieldAttribute("time period: seconds", typeof(Single))]
                                    public Single TimePeriod;
                                    public int Size
                                    {
                                        get
                                        {
                                            return 20;
                                        }
                                    }
                                    public void Initialize()
                                    {
                                    }
                                    public void Read(System.IO.BinaryReader reader)
                                    {
                                    }
                                    public void Write(System.IO.BinaryWriter writer)
                                    {
                                    }
                                    [Abide.Guerilla.Tags.FieldSetAttribute(12, 4)]
                                    public sealed class MappingFunctionBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                                    {
                                        [Abide.Guerilla.Tags.FieldAttribute("data", typeof(TagBlock))]
                                        [Abide.Guerilla.Tags.BlockAttribute("byte_block", 1024, typeof(ByteBlock))]
                                        public TagBlock Data;
                                        public int Size
                                        {
                                            get
                                            {
                                                return 12;
                                            }
                                        }
                                        public void Initialize()
                                        {
                                        }
                                        public void Read(System.IO.BinaryReader reader)
                                        {
                                        }
                                        public void Write(System.IO.BinaryWriter writer)
                                        {
                                        }
                                        [Abide.Guerilla.Tags.FieldSetAttribute(1, 4)]
                                        public sealed class ByteBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                                        {
                                            [Abide.Guerilla.Tags.FieldAttribute("Value", typeof(Byte))]
                                            public Byte Value;
                                            public int Size
                                            {
                                                get
                                                {
                                                    return 1;
                                                }
                                            }
                                            public void Initialize()
                                            {
                                            }
                                            public void Read(System.IO.BinaryReader reader)
                                            {
                                            }
                                            public void Write(System.IO.BinaryWriter writer)
                                            {
                                            }
                                        }
                                    }
                                    public enum InputOptions
                                    {
                                        Zero = 0,
                                        Time = 1,
                                        Scale = 2,
                                        Rolloff = 3,
                                    }
                                    public enum RangeOptions
                                    {
                                        Zero = 0,
                                        Time = 1,
                                        Scale = 2,
                                        Rolloff = 3,
                                    }
                                }
                                [Abide.Guerilla.Tags.FieldSetAttribute(4, 4)]
                                public sealed class PlatformSoundEffectConstantBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                                {
                                    [Abide.Guerilla.Tags.FieldAttribute("constant value", typeof(Single))]
                                    public Single ConstantValue;
                                    public int Size
                                    {
                                        get
                                        {
                                            return 4;
                                        }
                                    }
                                    public void Initialize()
                                    {
                                    }
                                    public void Read(System.IO.BinaryReader reader)
                                    {
                                    }
                                    public void Write(System.IO.BinaryWriter writer)
                                    {
                                    }
                                }
                                [Abide.Guerilla.Tags.FieldSetAttribute(1, 4)]
                                public sealed class PlatformSoundEffectOverrideDescriptorBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                                {
                                    [Abide.Guerilla.Tags.FieldAttribute("override descriptor", typeof(Byte))]
                                    public Byte OverrideDescriptor;
                                    public int Size
                                    {
                                        get
                                        {
                                            return 1;
                                        }
                                    }
                                    public void Initialize()
                                    {
                                    }
                                    public void Read(System.IO.BinaryReader reader)
                                    {
                                    }
                                    public void Write(System.IO.BinaryWriter writer)
                                    {
                                    }
                                }
                            }
                            [Abide.Guerilla.Tags.FieldSetAttribute(20, 4)]
                            public sealed class PlatformSoundEffectFunctionBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                            {
                                [Abide.Guerilla.Tags.FieldAttribute("input", typeof(Int16))]
                                [Abide.Guerilla.Tags.OptionsAttribute(typeof(InputOptions), false)]
                                public Int16 Input;
                                [Abide.Guerilla.Tags.FieldAttribute("range", typeof(Int16))]
                                [Abide.Guerilla.Tags.OptionsAttribute(typeof(RangeOptions), false)]
                                public Int16 Range;
                                [Abide.Guerilla.Tags.FieldAttribute("function", typeof(MappingFunctionBlock))]
                                public MappingFunctionBlock Function;
                                [Abide.Guerilla.Tags.FieldAttribute("time period: seconds", typeof(Single))]
                                public Single TimePeriod;
                                public int Size
                                {
                                    get
                                    {
                                        return 20;
                                    }
                                }
                                public void Initialize()
                                {
                                }
                                public void Read(System.IO.BinaryReader reader)
                                {
                                }
                                public void Write(System.IO.BinaryWriter writer)
                                {
                                }
                                [Abide.Guerilla.Tags.FieldSetAttribute(12, 4)]
                                public sealed class MappingFunctionBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                                {
                                    [Abide.Guerilla.Tags.FieldAttribute("data", typeof(TagBlock))]
                                    [Abide.Guerilla.Tags.BlockAttribute("byte_block", 1024, typeof(ByteBlock))]
                                    public TagBlock Data;
                                    public int Size
                                    {
                                        get
                                        {
                                            return 12;
                                        }
                                    }
                                    public void Initialize()
                                    {
                                    }
                                    public void Read(System.IO.BinaryReader reader)
                                    {
                                    }
                                    public void Write(System.IO.BinaryWriter writer)
                                    {
                                    }
                                    [Abide.Guerilla.Tags.FieldSetAttribute(1, 4)]
                                    public sealed class ByteBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                                    {
                                        [Abide.Guerilla.Tags.FieldAttribute("Value", typeof(Byte))]
                                        public Byte Value;
                                        public int Size
                                        {
                                            get
                                            {
                                                return 1;
                                            }
                                        }
                                        public void Initialize()
                                        {
                                        }
                                        public void Read(System.IO.BinaryReader reader)
                                        {
                                        }
                                        public void Write(System.IO.BinaryWriter writer)
                                        {
                                        }
                                    }
                                }
                                public enum InputOptions
                                {
                                    Zero = 0,
                                    Time = 1,
                                    Scale = 2,
                                    Rolloff = 3,
                                }
                                public enum RangeOptions
                                {
                                    Zero = 0,
                                    Time = 1,
                                    Scale = 2,
                                    Rolloff = 3,
                                }
                            }
                        }
                    }
                }
                public enum FlagsOptions
                {
                    Use3dRadioHack = 1,
                }
            }
        }
    }
}
#pragma warning restore CS1591
