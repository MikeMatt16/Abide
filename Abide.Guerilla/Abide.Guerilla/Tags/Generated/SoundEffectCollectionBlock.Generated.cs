#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Abide.Guerilla.Tags
{
    using Abide.Guerilla.Types;
    using Abide.HaloLibrary;
    using System;
    using System.IO;
    
    [FieldSetAttribute(12, 4)]
    [TagGroupAttribute("sound_effect_collection", 1936095275u, 4294967293u, typeof(SoundEffectCollectionBlock))]
    public sealed class SoundEffectCollectionBlock : AbideTagBlock
    {
        private TagBlockList<PlatformSoundPlaybackBlock> soundEffectsList = new TagBlockList<PlatformSoundPlaybackBlock>(128);
        [FieldAttribute("sound effects", typeof(TagBlock))]
        [BlockAttribute("platform_sound_playback_block", 128, typeof(PlatformSoundPlaybackBlock))]
        public TagBlock SoundEffects;
        public TagBlockList<PlatformSoundPlaybackBlock> SoundEffectsList
        {
            get
            {
                return this.soundEffectsList;
            }
        }
        public override int Size
        {
            get
            {
                return 12;
            }
        }
        public override void Initialize()
        {
            this.soundEffectsList.Clear();
            this.SoundEffects = TagBlock.Zero;
        }
        public override void Read(BinaryReader reader)
        {
            this.SoundEffects = reader.ReadInt64();
            this.soundEffectsList.Read(reader, this.SoundEffects);
        }
        public override void Write(BinaryWriter writer)
        {
        }
        [FieldSetAttribute(76, 4)]
        public sealed class PlatformSoundPlaybackBlock : AbideTagBlock
        {
            [FieldAttribute("name^", typeof(StringId))]
            public StringId Name;
            [FieldAttribute("playback", typeof(PlatformSoundPlaybackStructBlock))]
            public PlatformSoundPlaybackStructBlock Playback;
            public override int Size
            {
                get
                {
                    return 76;
                }
            }
            public override void Initialize()
            {
                this.Name = StringId.Zero;
                this.Playback = new PlatformSoundPlaybackStructBlock();
            }
            public override void Read(BinaryReader reader)
            {
                this.Name = reader.ReadInt32();
                this.Playback = reader.ReadDataStructure<PlatformSoundPlaybackStructBlock>();
            }
            public override void Write(BinaryWriter writer)
            {
            }
            [FieldSetAttribute(72, 4)]
            public sealed class PlatformSoundPlaybackStructBlock : AbideTagBlock
            {
                private TagBlockList<PlatformSoundOverrideMixbinsBlock> emptyStringList = new TagBlockList<PlatformSoundOverrideMixbinsBlock>(8);
                private TagBlockList<PlatformSoundFilterBlock> filterList = new TagBlockList<PlatformSoundFilterBlock>(1);
                private TagBlockList<PlatformSoundPitchLfoBlock> pitchLfoList = new TagBlockList<PlatformSoundPitchLfoBlock>(1);
                private TagBlockList<PlatformSoundFilterLfoBlock> filterLfoList = new TagBlockList<PlatformSoundFilterLfoBlock>(1);
                private TagBlockList<SoundEffectPlaybackBlock> soundEffectList = new TagBlockList<SoundEffectPlaybackBlock>(1);
                [FieldAttribute("", typeof(TagBlock))]
                [BlockAttribute("platform_sound_override_mixbins_block", 8, typeof(PlatformSoundOverrideMixbinsBlock))]
                public TagBlock EmptyString;
                [FieldAttribute("flags", typeof(FlagsOptions))]
                [OptionsAttribute(typeof(FlagsOptions), true)]
                public FlagsOptions Flags;
                [FieldAttribute("", typeof(Byte[]))]
                [PaddingAttribute(8)]
                public Byte[] EmptyString1;
                [FieldAttribute("filter", typeof(TagBlock))]
                [BlockAttribute("platform_sound_filter_block", 1, typeof(PlatformSoundFilterBlock))]
                public TagBlock Filter;
                [FieldAttribute("pitch lfo", typeof(TagBlock))]
                [BlockAttribute("platform_sound_pitch_lfo_block", 1, typeof(PlatformSoundPitchLfoBlock))]
                public TagBlock PitchLfo;
                [FieldAttribute("filter lfo", typeof(TagBlock))]
                [BlockAttribute("platform_sound_filter_lfo_block", 1, typeof(PlatformSoundFilterLfoBlock))]
                public TagBlock FilterLfo;
                [FieldAttribute("sound effect", typeof(TagBlock))]
                [BlockAttribute("sound_effect_playback_block", 1, typeof(SoundEffectPlaybackBlock))]
                public TagBlock SoundEffect;
                public TagBlockList<PlatformSoundOverrideMixbinsBlock> EmptyStringList
                {
                    get
                    {
                        return this.emptyStringList;
                    }
                }
                public TagBlockList<PlatformSoundFilterBlock> FilterList
                {
                    get
                    {
                        return this.filterList;
                    }
                }
                public TagBlockList<PlatformSoundPitchLfoBlock> PitchLfoList
                {
                    get
                    {
                        return this.pitchLfoList;
                    }
                }
                public TagBlockList<PlatformSoundFilterLfoBlock> FilterLfoList
                {
                    get
                    {
                        return this.filterLfoList;
                    }
                }
                public TagBlockList<SoundEffectPlaybackBlock> SoundEffectList
                {
                    get
                    {
                        return this.soundEffectList;
                    }
                }
                public override int Size
                {
                    get
                    {
                        return 72;
                    }
                }
                public override void Initialize()
                {
                    this.emptyStringList.Clear();
                    this.filterList.Clear();
                    this.pitchLfoList.Clear();
                    this.filterLfoList.Clear();
                    this.soundEffectList.Clear();
                    this.EmptyString = TagBlock.Zero;
                    this.Flags = ((FlagsOptions)(0));
                    this.EmptyString1 = new byte[8];
                    this.Filter = TagBlock.Zero;
                    this.PitchLfo = TagBlock.Zero;
                    this.FilterLfo = TagBlock.Zero;
                    this.SoundEffect = TagBlock.Zero;
                }
                public override void Read(BinaryReader reader)
                {
                    this.EmptyString = reader.ReadInt64();
                    this.emptyStringList.Read(reader, this.EmptyString);
                    this.Flags = ((FlagsOptions)(reader.ReadInt32()));
                    this.EmptyString1 = reader.ReadBytes(8);
                    this.Filter = reader.ReadInt64();
                    this.filterList.Read(reader, this.Filter);
                    this.PitchLfo = reader.ReadInt64();
                    this.pitchLfoList.Read(reader, this.PitchLfo);
                    this.FilterLfo = reader.ReadInt64();
                    this.filterLfoList.Read(reader, this.FilterLfo);
                    this.SoundEffect = reader.ReadInt64();
                    this.soundEffectList.Read(reader, this.SoundEffect);
                }
                public override void Write(BinaryWriter writer)
                {
                }
                [FieldSetAttribute(8, 4)]
                public sealed class PlatformSoundOverrideMixbinsBlock : AbideTagBlock
                {
                    [FieldAttribute("mixbin", typeof(MixbinOptions))]
                    [OptionsAttribute(typeof(MixbinOptions), false)]
                    public MixbinOptions Mixbin;
                    [FieldAttribute("gain:dB", typeof(Single))]
                    public Single Gain;
                    public override int Size
                    {
                        get
                        {
                            return 8;
                        }
                    }
                    public override void Initialize()
                    {
                        this.Mixbin = ((MixbinOptions)(0));
                        this.Gain = 0;
                    }
                    public override void Read(BinaryReader reader)
                    {
                        this.Mixbin = ((MixbinOptions)(reader.ReadInt32()));
                        this.Gain = reader.ReadSingle();
                    }
                    public override void Write(BinaryWriter writer)
                    {
                    }
                    public enum MixbinOptions : Int32
                    {
                        FrontLeft = 0,
                        FrontRight = 1,
                        BackLeft = 2,
                        BackRight = 3,
                        Center = 4,
                        LowFrequency = 5,
                        Reverb = 6,
                        _3dFrontLeft = 7,
                        _3dFrontRight = 8,
                        _3dBackLeft = 9,
                        _3dBackRight = 10,
                        DefaultLeftSpeakers = 11,
                        DefaultRightSpeakers = 12,
                    }
                }
                [FieldSetAttribute(72, 4)]
                public sealed class PlatformSoundFilterBlock : AbideTagBlock
                {
                    [FieldAttribute("filter type", typeof(FilterTypeOptions))]
                    [OptionsAttribute(typeof(FilterTypeOptions), false)]
                    public FilterTypeOptions FilterType;
                    [FieldAttribute("filter width:[0,7]", typeof(Int32))]
                    public Int32 FilterWidth;
                    [FieldAttribute("left filter frequency", typeof(SoundPlaybackParameterDefinitionBlock))]
                    public SoundPlaybackParameterDefinitionBlock LeftFilterFrequency;
                    [FieldAttribute("left filter gain", typeof(SoundPlaybackParameterDefinitionBlock))]
                    public SoundPlaybackParameterDefinitionBlock LeftFilterGain;
                    [FieldAttribute("right filter frequency", typeof(SoundPlaybackParameterDefinitionBlock))]
                    public SoundPlaybackParameterDefinitionBlock RightFilterFrequency;
                    [FieldAttribute("right filter gain", typeof(SoundPlaybackParameterDefinitionBlock))]
                    public SoundPlaybackParameterDefinitionBlock RightFilterGain;
                    public override int Size
                    {
                        get
                        {
                            return 72;
                        }
                    }
                    public override void Initialize()
                    {
                        this.FilterType = ((FilterTypeOptions)(0));
                        this.FilterWidth = 0;
                        this.LeftFilterFrequency = new SoundPlaybackParameterDefinitionBlock();
                        this.LeftFilterGain = new SoundPlaybackParameterDefinitionBlock();
                        this.RightFilterFrequency = new SoundPlaybackParameterDefinitionBlock();
                        this.RightFilterGain = new SoundPlaybackParameterDefinitionBlock();
                    }
                    public override void Read(BinaryReader reader)
                    {
                        this.FilterType = ((FilterTypeOptions)(reader.ReadInt32()));
                        this.FilterWidth = reader.ReadInt32();
                        this.LeftFilterFrequency = reader.ReadDataStructure<SoundPlaybackParameterDefinitionBlock>();
                        this.LeftFilterGain = reader.ReadDataStructure<SoundPlaybackParameterDefinitionBlock>();
                        this.RightFilterFrequency = reader.ReadDataStructure<SoundPlaybackParameterDefinitionBlock>();
                        this.RightFilterGain = reader.ReadDataStructure<SoundPlaybackParameterDefinitionBlock>();
                    }
                    public override void Write(BinaryWriter writer)
                    {
                    }
                    [FieldSetAttribute(16, 4)]
                    public sealed class SoundPlaybackParameterDefinitionBlock : AbideTagBlock
                    {
                        public override int Size
                        {
                            get
                            {
                                return 16;
                            }
                        }
                        public override void Initialize()
                        {
                        }
                        public override void Read(BinaryReader reader)
                        {
                        }
                        public override void Write(BinaryWriter writer)
                        {
                        }
                    }
                    public enum FilterTypeOptions : Int32
                    {
                        ParametricEq = 0,
                        Dls2 = 1,
                        BothOnlyValidForMono = 2,
                    }
                }
                [FieldSetAttribute(48, 4)]
                public sealed class PlatformSoundPitchLfoBlock : AbideTagBlock
                {
                    [FieldAttribute("delay", typeof(SoundPlaybackParameterDefinitionBlock))]
                    public SoundPlaybackParameterDefinitionBlock Delay;
                    [FieldAttribute("frequency", typeof(SoundPlaybackParameterDefinitionBlock))]
                    public SoundPlaybackParameterDefinitionBlock Frequency;
                    [FieldAttribute("pitch modulation", typeof(SoundPlaybackParameterDefinitionBlock))]
                    public SoundPlaybackParameterDefinitionBlock PitchModulation;
                    public override int Size
                    {
                        get
                        {
                            return 48;
                        }
                    }
                    public override void Initialize()
                    {
                        this.Delay = new SoundPlaybackParameterDefinitionBlock();
                        this.Frequency = new SoundPlaybackParameterDefinitionBlock();
                        this.PitchModulation = new SoundPlaybackParameterDefinitionBlock();
                    }
                    public override void Read(BinaryReader reader)
                    {
                        this.Delay = reader.ReadDataStructure<SoundPlaybackParameterDefinitionBlock>();
                        this.Frequency = reader.ReadDataStructure<SoundPlaybackParameterDefinitionBlock>();
                        this.PitchModulation = reader.ReadDataStructure<SoundPlaybackParameterDefinitionBlock>();
                    }
                    public override void Write(BinaryWriter writer)
                    {
                    }
                    [FieldSetAttribute(16, 4)]
                    public sealed class SoundPlaybackParameterDefinitionBlock : AbideTagBlock
                    {
                        public override int Size
                        {
                            get
                            {
                                return 16;
                            }
                        }
                        public override void Initialize()
                        {
                        }
                        public override void Read(BinaryReader reader)
                        {
                        }
                        public override void Write(BinaryWriter writer)
                        {
                        }
                    }
                }
                [FieldSetAttribute(64, 4)]
                public sealed class PlatformSoundFilterLfoBlock : AbideTagBlock
                {
                    [FieldAttribute("delay", typeof(SoundPlaybackParameterDefinitionBlock))]
                    public SoundPlaybackParameterDefinitionBlock Delay;
                    [FieldAttribute("frequency", typeof(SoundPlaybackParameterDefinitionBlock))]
                    public SoundPlaybackParameterDefinitionBlock Frequency;
                    [FieldAttribute("cutoff modulation", typeof(SoundPlaybackParameterDefinitionBlock))]
                    public SoundPlaybackParameterDefinitionBlock CutoffModulation;
                    [FieldAttribute("gain modulation", typeof(SoundPlaybackParameterDefinitionBlock))]
                    public SoundPlaybackParameterDefinitionBlock GainModulation;
                    public override int Size
                    {
                        get
                        {
                            return 64;
                        }
                    }
                    public override void Initialize()
                    {
                        this.Delay = new SoundPlaybackParameterDefinitionBlock();
                        this.Frequency = new SoundPlaybackParameterDefinitionBlock();
                        this.CutoffModulation = new SoundPlaybackParameterDefinitionBlock();
                        this.GainModulation = new SoundPlaybackParameterDefinitionBlock();
                    }
                    public override void Read(BinaryReader reader)
                    {
                        this.Delay = reader.ReadDataStructure<SoundPlaybackParameterDefinitionBlock>();
                        this.Frequency = reader.ReadDataStructure<SoundPlaybackParameterDefinitionBlock>();
                        this.CutoffModulation = reader.ReadDataStructure<SoundPlaybackParameterDefinitionBlock>();
                        this.GainModulation = reader.ReadDataStructure<SoundPlaybackParameterDefinitionBlock>();
                    }
                    public override void Write(BinaryWriter writer)
                    {
                    }
                    [FieldSetAttribute(16, 4)]
                    public sealed class SoundPlaybackParameterDefinitionBlock : AbideTagBlock
                    {
                        public override int Size
                        {
                            get
                            {
                                return 16;
                            }
                        }
                        public override void Initialize()
                        {
                        }
                        public override void Read(BinaryReader reader)
                        {
                        }
                        public override void Write(BinaryWriter writer)
                        {
                        }
                    }
                }
                [FieldSetAttribute(72, 4)]
                public sealed class SoundEffectPlaybackBlock : AbideTagBlock
                {
                    [FieldAttribute("sound effect struct", typeof(SoundEffectStructDefinitionBlock))]
                    public SoundEffectStructDefinitionBlock SoundEffectStruct;
                    public override int Size
                    {
                        get
                        {
                            return 72;
                        }
                    }
                    public override void Initialize()
                    {
                        this.SoundEffectStruct = new SoundEffectStructDefinitionBlock();
                    }
                    public override void Read(BinaryReader reader)
                    {
                        this.SoundEffectStruct = reader.ReadDataStructure<SoundEffectStructDefinitionBlock>();
                    }
                    public override void Write(BinaryWriter writer)
                    {
                    }
                    [FieldSetAttribute(72, 4)]
                    public sealed class SoundEffectStructDefinitionBlock : AbideTagBlock
                    {
                        private DataList emptyStringList = new DataList(1024);
                        private TagBlockList<SoundEffectComponentBlock> componentsList = new TagBlockList<SoundEffectComponentBlock>(16);
                        private TagBlockList<SoundEffectOverridesBlock> emptyStringList1 = new TagBlockList<SoundEffectOverridesBlock>(128);
                        private TagBlockList<PlatformSoundEffectCollectionBlock> emptyStringList2 = new TagBlockList<PlatformSoundEffectCollectionBlock>(1);
                        [FieldAttribute("", typeof(TagReference))]
                        public TagReference EmptyString;
                        [FieldAttribute("components", typeof(TagBlock))]
                        [BlockAttribute("sound_effect_component_block", 16, typeof(SoundEffectComponentBlock))]
                        public TagBlock Components;
                        [FieldAttribute("", typeof(TagBlock))]
                        [BlockAttribute("sound_effect_overrides_block", 128, typeof(SoundEffectOverridesBlock))]
                        public TagBlock EmptyString1;
                        [FieldAttribute("", typeof(TagBlock))]
                        [DataAttribute(1024)]
                        public TagBlock EmptyString2;
                        [FieldAttribute("", typeof(TagBlock))]
                        [BlockAttribute("platform_sound_effect_collection_block", 1, typeof(PlatformSoundEffectCollectionBlock))]
                        public TagBlock EmptyString3;
                        public DataList EmptyStringList
                        {
                            get
                            {
                                return this.emptyStringList;
                            }
                        }
                        public TagBlockList<SoundEffectComponentBlock> ComponentsList
                        {
                            get
                            {
                                return this.componentsList;
                            }
                        }
                        public TagBlockList<SoundEffectOverridesBlock> EmptyStringList1
                        {
                            get
                            {
                                return this.emptyStringList1;
                            }
                        }
                        public TagBlockList<PlatformSoundEffectCollectionBlock> EmptyStringList2
                        {
                            get
                            {
                                return this.emptyStringList2;
                            }
                        }
                        public override int Size
                        {
                            get
                            {
                                return 72;
                            }
                        }
                        public override void Initialize()
                        {
                            this.emptyStringList.Clear();
                            this.componentsList.Clear();
                            this.emptyStringList1.Clear();
                            this.emptyStringList2.Clear();
                            this.EmptyString = TagReference.Null;
                            this.Components = TagBlock.Zero;
                            this.EmptyString1 = TagBlock.Zero;
                            this.EmptyString2 = TagBlock.Zero;
                            this.EmptyString3 = TagBlock.Zero;
                        }
                        public override void Read(BinaryReader reader)
                        {
                            this.EmptyString = reader.Read<TagReference>();
                            this.Components = reader.ReadInt64();
                            this.componentsList.Read(reader, this.Components);
                            this.EmptyString1 = reader.ReadInt64();
                            this.emptyStringList1.Read(reader, this.EmptyString1);
                            this.EmptyString2 = reader.ReadInt64();
                            this.EmptyString3 = reader.ReadInt64();
                            this.emptyStringList2.Read(reader, this.EmptyString3);
                        }
                        public override void Write(BinaryWriter writer)
                        {
                        }
                        [FieldSetAttribute(24, 4)]
                        public sealed class SoundEffectComponentBlock : AbideTagBlock
                        {
                            [FieldAttribute("sound^", typeof(TagReference))]
                            public TagReference Sound;
                            [FieldAttribute("gain:dB#additional attenuation to sound", typeof(Single))]
                            public Single Gain;
                            [FieldAttribute("flags", typeof(FlagsOptions))]
                            [OptionsAttribute(typeof(FlagsOptions), true)]
                            public FlagsOptions Flags;
                            public override int Size
                            {
                                get
                                {
                                    return 24;
                                }
                            }
                            public override void Initialize()
                            {
                                this.Sound = TagReference.Null;
                                this.Gain = 0;
                                this.Flags = ((FlagsOptions)(0));
                            }
                            public override void Read(BinaryReader reader)
                            {
                                this.Sound = reader.Read<TagReference>();
                                this.Gain = reader.ReadSingle();
                                this.Flags = ((FlagsOptions)(reader.ReadInt32()));
                            }
                            public override void Write(BinaryWriter writer)
                            {
                            }
                            public enum FlagsOptions : Int32
                            {
                                DontPlayAtStart = 1,
                                PlayOnStop = 2,
                                EmptyString = 4,
                                PlayAlternate = 8,
                                EmptyString1 = 16,
                                SyncWithOriginLoopingSound = 32,
                            }
                        }
                        [FieldSetAttribute(16, 4)]
                        public sealed class SoundEffectOverridesBlock : AbideTagBlock
                        {
                            private TagBlockList<SoundEffectOverrideParametersBlock> overridesList = new TagBlockList<SoundEffectOverrideParametersBlock>(128);
                            [FieldAttribute("name", typeof(StringId))]
                            public StringId Name;
                            [FieldAttribute("overrides", typeof(TagBlock))]
                            [BlockAttribute("sound_effect_override_parameters_block", 128, typeof(SoundEffectOverrideParametersBlock))]
                            public TagBlock Overrides;
                            public TagBlockList<SoundEffectOverrideParametersBlock> OverridesList
                            {
                                get
                                {
                                    return this.overridesList;
                                }
                            }
                            public override int Size
                            {
                                get
                                {
                                    return 16;
                                }
                            }
                            public override void Initialize()
                            {
                                this.overridesList.Clear();
                                this.Name = StringId.Zero;
                                this.Overrides = TagBlock.Zero;
                            }
                            public override void Read(BinaryReader reader)
                            {
                                this.Name = reader.ReadInt32();
                                this.Overrides = reader.ReadInt64();
                                this.overridesList.Read(reader, this.Overrides);
                            }
                            public override void Write(BinaryWriter writer)
                            {
                            }
                            [FieldSetAttribute(36, 4)]
                            public sealed class SoundEffectOverrideParametersBlock : AbideTagBlock
                            {
                                [FieldAttribute("name", typeof(StringId))]
                                public StringId Name;
                                [FieldAttribute("input", typeof(StringId))]
                                public StringId Input;
                                [FieldAttribute("range", typeof(StringId))]
                                public StringId Range;
                                [FieldAttribute("time period: seconds", typeof(Single))]
                                public Single TimePeriod;
                                [FieldAttribute("integer value", typeof(Int32))]
                                public Int32 IntegerValue;
                                [FieldAttribute("real value", typeof(Single))]
                                public Single RealValue;
                                [FieldAttribute("function value", typeof(MappingFunctionBlock))]
                                public MappingFunctionBlock FunctionValue;
                                public override int Size
                                {
                                    get
                                    {
                                        return 36;
                                    }
                                }
                                public override void Initialize()
                                {
                                    this.Name = StringId.Zero;
                                    this.Input = StringId.Zero;
                                    this.Range = StringId.Zero;
                                    this.TimePeriod = 0;
                                    this.IntegerValue = 0;
                                    this.RealValue = 0;
                                    this.FunctionValue = new MappingFunctionBlock();
                                }
                                public override void Read(BinaryReader reader)
                                {
                                    this.Name = reader.ReadInt32();
                                    this.Input = reader.ReadInt32();
                                    this.Range = reader.ReadInt32();
                                    this.TimePeriod = reader.ReadSingle();
                                    this.IntegerValue = reader.ReadInt32();
                                    this.RealValue = reader.ReadSingle();
                                    this.FunctionValue = reader.ReadDataStructure<MappingFunctionBlock>();
                                }
                                public override void Write(BinaryWriter writer)
                                {
                                }
                                [FieldSetAttribute(12, 4)]
                                public sealed class MappingFunctionBlock : AbideTagBlock
                                {
                                    private TagBlockList<ByteBlock> dataList = new TagBlockList<ByteBlock>(1024);
                                    [FieldAttribute("data", typeof(TagBlock))]
                                    [BlockAttribute("byte_block", 1024, typeof(ByteBlock))]
                                    public TagBlock Data;
                                    public TagBlockList<ByteBlock> DataList
                                    {
                                        get
                                        {
                                            return this.dataList;
                                        }
                                    }
                                    public override int Size
                                    {
                                        get
                                        {
                                            return 12;
                                        }
                                    }
                                    public override void Initialize()
                                    {
                                        this.dataList.Clear();
                                        this.Data = TagBlock.Zero;
                                    }
                                    public override void Read(BinaryReader reader)
                                    {
                                        this.Data = reader.ReadInt64();
                                        this.dataList.Read(reader, this.Data);
                                    }
                                    public override void Write(BinaryWriter writer)
                                    {
                                    }
                                    [FieldSetAttribute(1, 4)]
                                    public sealed class ByteBlock : AbideTagBlock
                                    {
                                        [FieldAttribute("Value", typeof(Byte))]
                                        public Byte Value;
                                        public override int Size
                                        {
                                            get
                                            {
                                                return 1;
                                            }
                                        }
                                        public override void Initialize()
                                        {
                                            this.Value = 0;
                                        }
                                        public override void Read(BinaryReader reader)
                                        {
                                            this.Value = reader.ReadByte();
                                        }
                                        public override void Write(BinaryWriter writer)
                                        {
                                        }
                                    }
                                }
                            }
                        }
                        [FieldSetAttribute(28, 4)]
                        public sealed class PlatformSoundEffectCollectionBlock : AbideTagBlock
                        {
                            private TagBlockList<PlatformSoundEffectBlock> soundEffectsList = new TagBlockList<PlatformSoundEffectBlock>(8);
                            private TagBlockList<PlatformSoundEffectFunctionBlock> lowFrequencyInputList = new TagBlockList<PlatformSoundEffectFunctionBlock>(16);
                            [FieldAttribute("sound effects*", typeof(TagBlock))]
                            [BlockAttribute("platform_sound_effect_block", 8, typeof(PlatformSoundEffectBlock))]
                            public TagBlock SoundEffects;
                            [FieldAttribute("low frequency input*", typeof(TagBlock))]
                            [BlockAttribute("platform_sound_effect_function_block", 16, typeof(PlatformSoundEffectFunctionBlock))]
                            public TagBlock LowFrequencyInput;
                            [FieldAttribute("sound effect overrides", typeof(Int32))]
                            public Int32 SoundEffectOverrides;
                            public TagBlockList<PlatformSoundEffectBlock> SoundEffectsList
                            {
                                get
                                {
                                    return this.soundEffectsList;
                                }
                            }
                            public TagBlockList<PlatformSoundEffectFunctionBlock> LowFrequencyInputList
                            {
                                get
                                {
                                    return this.lowFrequencyInputList;
                                }
                            }
                            public override int Size
                            {
                                get
                                {
                                    return 28;
                                }
                            }
                            public override void Initialize()
                            {
                                this.soundEffectsList.Clear();
                                this.lowFrequencyInputList.Clear();
                                this.SoundEffects = TagBlock.Zero;
                                this.LowFrequencyInput = TagBlock.Zero;
                                this.SoundEffectOverrides = 0;
                            }
                            public override void Read(BinaryReader reader)
                            {
                                this.SoundEffects = reader.ReadInt64();
                                this.soundEffectsList.Read(reader, this.SoundEffects);
                                this.LowFrequencyInput = reader.ReadInt64();
                                this.lowFrequencyInputList.Read(reader, this.LowFrequencyInput);
                                this.SoundEffectOverrides = reader.ReadInt32();
                            }
                            public override void Write(BinaryWriter writer)
                            {
                            }
                            [FieldSetAttribute(40, 4)]
                            public sealed class PlatformSoundEffectBlock : AbideTagBlock
                            {
                                private TagBlockList<PlatformSoundEffectFunctionBlock> functionInputsList = new TagBlockList<PlatformSoundEffectFunctionBlock>(16);
                                private TagBlockList<PlatformSoundEffectConstantBlock> constantInputsList = new TagBlockList<PlatformSoundEffectConstantBlock>(16);
                                private TagBlockList<PlatformSoundEffectOverrideDescriptorBlock> templateOverrideDescriptorsList = new TagBlockList<PlatformSoundEffectOverrideDescriptorBlock>(16);
                                [FieldAttribute("function inputs", typeof(TagBlock))]
                                [BlockAttribute("platform_sound_effect_function_block", 16, typeof(PlatformSoundEffectFunctionBlock))]
                                public TagBlock FunctionInputs;
                                [FieldAttribute("constant inputs", typeof(TagBlock))]
                                [BlockAttribute("platform_sound_effect_constant_block", 16, typeof(PlatformSoundEffectConstantBlock))]
                                public TagBlock ConstantInputs;
                                [FieldAttribute("template override descriptors", typeof(TagBlock))]
                                [BlockAttribute("platform_sound_effect_override_descriptor_block", 16, typeof(PlatformSoundEffectOverrideDescriptorBlock))]
                                public TagBlock TemplateOverrideDescriptors;
                                [FieldAttribute("input overrides", typeof(Int32))]
                                public Int32 InputOverrides;
                                public TagBlockList<PlatformSoundEffectFunctionBlock> FunctionInputsList
                                {
                                    get
                                    {
                                        return this.functionInputsList;
                                    }
                                }
                                public TagBlockList<PlatformSoundEffectConstantBlock> ConstantInputsList
                                {
                                    get
                                    {
                                        return this.constantInputsList;
                                    }
                                }
                                public TagBlockList<PlatformSoundEffectOverrideDescriptorBlock> TemplateOverrideDescriptorsList
                                {
                                    get
                                    {
                                        return this.templateOverrideDescriptorsList;
                                    }
                                }
                                public override int Size
                                {
                                    get
                                    {
                                        return 40;
                                    }
                                }
                                public override void Initialize()
                                {
                                    this.functionInputsList.Clear();
                                    this.constantInputsList.Clear();
                                    this.templateOverrideDescriptorsList.Clear();
                                    this.FunctionInputs = TagBlock.Zero;
                                    this.ConstantInputs = TagBlock.Zero;
                                    this.TemplateOverrideDescriptors = TagBlock.Zero;
                                    this.InputOverrides = 0;
                                }
                                public override void Read(BinaryReader reader)
                                {
                                    this.FunctionInputs = reader.ReadInt64();
                                    this.functionInputsList.Read(reader, this.FunctionInputs);
                                    this.ConstantInputs = reader.ReadInt64();
                                    this.constantInputsList.Read(reader, this.ConstantInputs);
                                    this.TemplateOverrideDescriptors = reader.ReadInt64();
                                    this.templateOverrideDescriptorsList.Read(reader, this.TemplateOverrideDescriptors);
                                    this.InputOverrides = reader.ReadInt32();
                                }
                                public override void Write(BinaryWriter writer)
                                {
                                }
                                [FieldSetAttribute(20, 4)]
                                public sealed class PlatformSoundEffectFunctionBlock : AbideTagBlock
                                {
                                    [FieldAttribute("input", typeof(InputOptions))]
                                    [OptionsAttribute(typeof(InputOptions), false)]
                                    public InputOptions Input;
                                    [FieldAttribute("range", typeof(RangeOptions))]
                                    [OptionsAttribute(typeof(RangeOptions), false)]
                                    public RangeOptions Range;
                                    [FieldAttribute("function", typeof(MappingFunctionBlock))]
                                    public MappingFunctionBlock Function;
                                    [FieldAttribute("time period: seconds", typeof(Single))]
                                    public Single TimePeriod;
                                    public override int Size
                                    {
                                        get
                                        {
                                            return 20;
                                        }
                                    }
                                    public override void Initialize()
                                    {
                                        this.Input = ((InputOptions)(0));
                                        this.Range = ((RangeOptions)(0));
                                        this.Function = new MappingFunctionBlock();
                                        this.TimePeriod = 0;
                                    }
                                    public override void Read(BinaryReader reader)
                                    {
                                        this.Input = ((InputOptions)(reader.ReadInt16()));
                                        this.Range = ((RangeOptions)(reader.ReadInt16()));
                                        this.Function = reader.ReadDataStructure<MappingFunctionBlock>();
                                        this.TimePeriod = reader.ReadSingle();
                                    }
                                    public override void Write(BinaryWriter writer)
                                    {
                                    }
                                    [FieldSetAttribute(12, 4)]
                                    public sealed class MappingFunctionBlock : AbideTagBlock
                                    {
                                        private TagBlockList<ByteBlock> dataList = new TagBlockList<ByteBlock>(1024);
                                        [FieldAttribute("data", typeof(TagBlock))]
                                        [BlockAttribute("byte_block", 1024, typeof(ByteBlock))]
                                        public TagBlock Data;
                                        public TagBlockList<ByteBlock> DataList
                                        {
                                            get
                                            {
                                                return this.dataList;
                                            }
                                        }
                                        public override int Size
                                        {
                                            get
                                            {
                                                return 12;
                                            }
                                        }
                                        public override void Initialize()
                                        {
                                            this.dataList.Clear();
                                            this.Data = TagBlock.Zero;
                                        }
                                        public override void Read(BinaryReader reader)
                                        {
                                            this.Data = reader.ReadInt64();
                                            this.dataList.Read(reader, this.Data);
                                        }
                                        public override void Write(BinaryWriter writer)
                                        {
                                        }
                                        [FieldSetAttribute(1, 4)]
                                        public sealed class ByteBlock : AbideTagBlock
                                        {
                                            [FieldAttribute("Value", typeof(Byte))]
                                            public Byte Value;
                                            public override int Size
                                            {
                                                get
                                                {
                                                    return 1;
                                                }
                                            }
                                            public override void Initialize()
                                            {
                                                this.Value = 0;
                                            }
                                            public override void Read(BinaryReader reader)
                                            {
                                                this.Value = reader.ReadByte();
                                            }
                                            public override void Write(BinaryWriter writer)
                                            {
                                            }
                                        }
                                    }
                                    public enum InputOptions : Int16
                                    {
                                        Zero = 0,
                                        Time = 1,
                                        Scale = 2,
                                        Rolloff = 3,
                                    }
                                    public enum RangeOptions : Int16
                                    {
                                        Zero = 0,
                                        Time = 1,
                                        Scale = 2,
                                        Rolloff = 3,
                                    }
                                }
                                [FieldSetAttribute(4, 4)]
                                public sealed class PlatformSoundEffectConstantBlock : AbideTagBlock
                                {
                                    [FieldAttribute("constant value", typeof(Single))]
                                    public Single ConstantValue;
                                    public override int Size
                                    {
                                        get
                                        {
                                            return 4;
                                        }
                                    }
                                    public override void Initialize()
                                    {
                                        this.ConstantValue = 0;
                                    }
                                    public override void Read(BinaryReader reader)
                                    {
                                        this.ConstantValue = reader.ReadSingle();
                                    }
                                    public override void Write(BinaryWriter writer)
                                    {
                                    }
                                }
                                [FieldSetAttribute(1, 4)]
                                public sealed class PlatformSoundEffectOverrideDescriptorBlock : AbideTagBlock
                                {
                                    [FieldAttribute("override descriptor", typeof(Byte))]
                                    public Byte OverrideDescriptor;
                                    public override int Size
                                    {
                                        get
                                        {
                                            return 1;
                                        }
                                    }
                                    public override void Initialize()
                                    {
                                        this.OverrideDescriptor = 0;
                                    }
                                    public override void Read(BinaryReader reader)
                                    {
                                        this.OverrideDescriptor = reader.ReadByte();
                                    }
                                    public override void Write(BinaryWriter writer)
                                    {
                                    }
                                }
                            }
                            [FieldSetAttribute(20, 4)]
                            public sealed class PlatformSoundEffectFunctionBlock : AbideTagBlock
                            {
                                [FieldAttribute("input", typeof(InputOptions))]
                                [OptionsAttribute(typeof(InputOptions), false)]
                                public InputOptions Input;
                                [FieldAttribute("range", typeof(RangeOptions))]
                                [OptionsAttribute(typeof(RangeOptions), false)]
                                public RangeOptions Range;
                                [FieldAttribute("function", typeof(MappingFunctionBlock))]
                                public MappingFunctionBlock Function;
                                [FieldAttribute("time period: seconds", typeof(Single))]
                                public Single TimePeriod;
                                public override int Size
                                {
                                    get
                                    {
                                        return 20;
                                    }
                                }
                                public override void Initialize()
                                {
                                    this.Input = ((InputOptions)(0));
                                    this.Range = ((RangeOptions)(0));
                                    this.Function = new MappingFunctionBlock();
                                    this.TimePeriod = 0;
                                }
                                public override void Read(BinaryReader reader)
                                {
                                    this.Input = ((InputOptions)(reader.ReadInt16()));
                                    this.Range = ((RangeOptions)(reader.ReadInt16()));
                                    this.Function = reader.ReadDataStructure<MappingFunctionBlock>();
                                    this.TimePeriod = reader.ReadSingle();
                                }
                                public override void Write(BinaryWriter writer)
                                {
                                }
                                [FieldSetAttribute(12, 4)]
                                public sealed class MappingFunctionBlock : AbideTagBlock
                                {
                                    private TagBlockList<ByteBlock> dataList = new TagBlockList<ByteBlock>(1024);
                                    [FieldAttribute("data", typeof(TagBlock))]
                                    [BlockAttribute("byte_block", 1024, typeof(ByteBlock))]
                                    public TagBlock Data;
                                    public TagBlockList<ByteBlock> DataList
                                    {
                                        get
                                        {
                                            return this.dataList;
                                        }
                                    }
                                    public override int Size
                                    {
                                        get
                                        {
                                            return 12;
                                        }
                                    }
                                    public override void Initialize()
                                    {
                                        this.dataList.Clear();
                                        this.Data = TagBlock.Zero;
                                    }
                                    public override void Read(BinaryReader reader)
                                    {
                                        this.Data = reader.ReadInt64();
                                        this.dataList.Read(reader, this.Data);
                                    }
                                    public override void Write(BinaryWriter writer)
                                    {
                                    }
                                    [FieldSetAttribute(1, 4)]
                                    public sealed class ByteBlock : AbideTagBlock
                                    {
                                        [FieldAttribute("Value", typeof(Byte))]
                                        public Byte Value;
                                        public override int Size
                                        {
                                            get
                                            {
                                                return 1;
                                            }
                                        }
                                        public override void Initialize()
                                        {
                                            this.Value = 0;
                                        }
                                        public override void Read(BinaryReader reader)
                                        {
                                            this.Value = reader.ReadByte();
                                        }
                                        public override void Write(BinaryWriter writer)
                                        {
                                        }
                                    }
                                }
                                public enum InputOptions : Int16
                                {
                                    Zero = 0,
                                    Time = 1,
                                    Scale = 2,
                                    Rolloff = 3,
                                }
                                public enum RangeOptions : Int16
                                {
                                    Zero = 0,
                                    Time = 1,
                                    Scale = 2,
                                    Rolloff = 3,
                                }
                            }
                        }
                    }
                }
                public enum FlagsOptions : Int32
                {
                    Use3dRadioHack = 1,
                }
            }
        }
    }
}
#pragma warning restore CS1591
