#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Abide.Guerilla.Tags
{
    using Abide.Guerilla.Types;
    using Abide.HaloLibrary;
    using System;
    using System.IO;
    
    [FieldSetAttribute(16, 4)]
    [TagGroupAttribute("item_collection", 1769237859u, 4294967293u, typeof(ItemCollectionBlock))]
    public sealed class ItemCollectionBlock : AbideTagBlock
    {
        private TagBlockList<ItemPermutation> itemPermutationsList = new TagBlockList<ItemPermutation>(32);
        [FieldAttribute("item permutations", typeof(TagBlock))]
        [BlockAttribute("item_permutation", 32, typeof(ItemPermutation))]
        public TagBlock ItemPermutations;
        [FieldAttribute("spawn time (in seconds, 0 = default)", typeof(Int16))]
        public Int16 SpawnTimeInSeconds0EqualsDefault;
        [FieldAttribute("", typeof(Byte[]))]
        [PaddingAttribute(2)]
        public Byte[] EmptyString;
        public TagBlockList<ItemPermutation> ItemPermutationsList
        {
            get
            {
                return this.itemPermutationsList;
            }
        }
        public override int Size
        {
            get
            {
                return 16;
            }
        }
        public override void Initialize()
        {
            this.itemPermutationsList.Clear();
            this.ItemPermutations = TagBlock.Zero;
            this.SpawnTimeInSeconds0EqualsDefault = 0;
            this.EmptyString = new byte[2];
        }
        public override void Read(BinaryReader reader)
        {
            this.ItemPermutations = reader.ReadInt64();
            this.itemPermutationsList.Read(reader, this.ItemPermutations);
            this.SpawnTimeInSeconds0EqualsDefault = reader.ReadInt16();
            this.EmptyString = reader.ReadBytes(2);
        }
        public override void Write(BinaryWriter writer)
        {
        }
        [FieldSetAttribute(24, 4)]
        public sealed class ItemPermutation : AbideTagBlock
        {
            [FieldAttribute("weight#relatively how likely this item will be chosen", typeof(Single))]
            public Single Weight;
            [FieldAttribute("item^#which item to ", typeof(TagReference))]
            public TagReference Item;
            [FieldAttribute("variant name", typeof(StringId))]
            public StringId VariantName;
            public override int Size
            {
                get
                {
                    return 24;
                }
            }
            public override void Initialize()
            {
                this.Weight = 0;
                this.Item = TagReference.Null;
                this.VariantName = StringId.Zero;
            }
            public override void Read(BinaryReader reader)
            {
                this.Weight = reader.ReadSingle();
                this.Item = reader.Read<TagReference>();
                this.VariantName = reader.ReadInt32();
            }
            public override void Write(BinaryWriter writer)
            {
            }
        }
    }
}
#pragma warning restore CS1591
