#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Abide.Guerilla.Tags
{
    using Abide.Guerilla.Types;
    using Abide.HaloLibrary;
    using System;
    
    [Abide.Guerilla.Tags.FieldSetAttribute(184, 4)]
    [Abide.Guerilla.Tags.TagGroupAttribute("render_model", 1836016741u, 4294967293u, typeof(RenderModelBlock))]
    public sealed class RenderModelBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
    {
        [Abide.Guerilla.Tags.FieldAttribute("name*", typeof(StringId))]
        public StringId Name;
        [Abide.Guerilla.Tags.FieldAttribute("flags*", typeof(Int16))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
        public Int16 Flags;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(2)]
        public Byte[] EmptyString;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(4)]
        public Byte[] EmptyString1;
        [Abide.Guerilla.Tags.FieldAttribute("import info*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("import info", 1, typeof(GlobalTagImportInfoBlock))]
        public TagBlock ImportInfo;
        [Abide.Guerilla.Tags.FieldAttribute("compression info*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("compression info", 1, typeof(GlobalGeometryCompressionInfoBlock))]
        public TagBlock CompressionInfo;
        [Abide.Guerilla.Tags.FieldAttribute("regions*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("region", 16, typeof(RenderModelRegionBlock))]
        public TagBlock Regions;
        [Abide.Guerilla.Tags.FieldAttribute("sections*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("render_model_section_block", 255, typeof(RenderModelSectionBlock))]
        public TagBlock Sections;
        [Abide.Guerilla.Tags.FieldAttribute("invalid section pair bits*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("bitvector", 1013, typeof(RenderModelInvalidSectionPairsBlock))]
        public TagBlock InvalidSectionPairBits;
        [Abide.Guerilla.Tags.FieldAttribute("section groups*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("section group", 6, typeof(RenderModelSectionGroupBlock))]
        public TagBlock SectionGroups;
        [Abide.Guerilla.Tags.FieldAttribute("L1 section group index*:(super low)", typeof(Byte))]
        public Byte L1SectionGroupIndex;
        [Abide.Guerilla.Tags.FieldAttribute("L2 section group index*:(low)", typeof(Byte))]
        public Byte L2SectionGroupIndex;
        [Abide.Guerilla.Tags.FieldAttribute("L3 section group index*:(medium)", typeof(Byte))]
        public Byte L3SectionGroupIndex;
        [Abide.Guerilla.Tags.FieldAttribute("L4 section group index*:(high)", typeof(Byte))]
        public Byte L4SectionGroupIndex;
        [Abide.Guerilla.Tags.FieldAttribute("L5 section group index*:(super high)", typeof(Byte))]
        public Byte L5SectionGroupIndex;
        [Abide.Guerilla.Tags.FieldAttribute("L6 section group index*:(hollywood)", typeof(Byte))]
        public Byte L6SectionGroupIndex;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(2)]
        public Byte[] EmptyString2;
        [Abide.Guerilla.Tags.FieldAttribute("node list checksum*", typeof(Int32))]
        public Int32 NodeListChecksum;
        [Abide.Guerilla.Tags.FieldAttribute("nodes*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("node", 255, typeof(RenderModelNodeBlock))]
        public TagBlock Nodes;
        [Abide.Guerilla.Tags.FieldAttribute("node map (OLD)*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("index", 640, typeof(RenderModelNodeMapBlockOld))]
        public TagBlock NodeMapOld;
        [Abide.Guerilla.Tags.FieldAttribute("marker groups*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("marker group", 4096, typeof(RenderModelMarkerGroupBlock))]
        public TagBlock MarkerGroups;
        [Abide.Guerilla.Tags.FieldAttribute("materials*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("material", 1024, typeof(GlobalGeometryMaterialBlock))]
        public TagBlock Materials;
        [Abide.Guerilla.Tags.FieldAttribute("errors*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("error report category", 64, typeof(GlobalErrorReportCategoriesBlock))]
        public TagBlock Errors;
        [Abide.Guerilla.Tags.FieldAttribute("don\'t draw over camera cosine angle#dont draw fp model when camera > this angle c" +
            "osine (-1,1) Sugg. -0.2. 0 disables.", typeof(Single))]
        public Single DontDrawOverCameraCosineAngle;
        [Abide.Guerilla.Tags.FieldAttribute("PRT info", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("prt_info_block", 1, typeof(PrtInfoBlock))]
        public TagBlock PrtInfo;
        [Abide.Guerilla.Tags.FieldAttribute("section render leaves", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("section_render_leaves_block", 255, typeof(SectionRenderLeavesBlock))]
        public TagBlock SectionRenderLeaves;
        public int Size
        {
            get
            {
                return 184;
            }
        }
        public void Initialize()
        {
        }
        public void Read(System.IO.BinaryReader reader)
        {
        }
        public void Write(System.IO.BinaryWriter writer)
        {
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(596, 4)]
        public sealed class GlobalTagImportInfoBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("build*", typeof(Int32))]
            public Int32 Build;
            [Abide.Guerilla.Tags.FieldAttribute("version*", typeof(String256))]
            public String256 Version;
            [Abide.Guerilla.Tags.FieldAttribute("import date*", typeof(String32))]
            public String32 ImportDate;
            [Abide.Guerilla.Tags.FieldAttribute("culprit*", typeof(String32))]
            public String32 Culprit;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(96)]
            public Byte[] EmptyString;
            [Abide.Guerilla.Tags.FieldAttribute("import time*", typeof(String32))]
            public String32 ImportTime;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString1;
            [Abide.Guerilla.Tags.FieldAttribute("files*", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("import file", 1024, typeof(TagImportFileBlock))]
            public TagBlock Files;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(128)]
            public Byte[] EmptyString2;
            public int Size
            {
                get
                {
                    return 596;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(540, 4)]
            public sealed class TagImportFileBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("path*", typeof(String256))]
                public String256 Path;
                [Abide.Guerilla.Tags.FieldAttribute("modification date*", typeof(String32))]
                public String32 ModificationDate;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(8)]
                public Byte[] EmptyString;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(88)]
                public Byte[] EmptyString1;
                [Abide.Guerilla.Tags.FieldAttribute("checksum*:crc32", typeof(Int32))]
                public Int32 Checksum;
                [Abide.Guerilla.Tags.FieldAttribute("size*:bytes", typeof(Int32))]
                public Int32 Size1;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(128)]
                public Byte[] EmptyString2;
                public int Size
                {
                    get
                    {
                        return 540;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(56, 4)]
        public sealed class GlobalGeometryCompressionInfoBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            public int Size
            {
                get
                {
                    return 56;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(20, 4)]
        public sealed class RenderModelRegionBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("name^*", typeof(StringId))]
            public StringId Name;
            [Abide.Guerilla.Tags.FieldAttribute("node map offset (OLD)*", typeof(Int16))]
            public Int16 NodeMapOffsetOld;
            [Abide.Guerilla.Tags.FieldAttribute("node map size (OLD)*", typeof(Int16))]
            public Int16 NodeMapSizeOld;
            [Abide.Guerilla.Tags.FieldAttribute("permutations*", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("permutation", 32, typeof(RenderModelPermutationBlock))]
            public TagBlock Permutations;
            public int Size
            {
                get
                {
                    return 20;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(16, 4)]
            public sealed class RenderModelPermutationBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("name^*", typeof(StringId))]
                public StringId Name;
                [Abide.Guerilla.Tags.FieldAttribute("L1 section index*:(super low)", typeof(Int16))]
                public Int16 L1SectionIndex;
                [Abide.Guerilla.Tags.FieldAttribute("L2 section index*:(low)", typeof(Int16))]
                public Int16 L2SectionIndex;
                [Abide.Guerilla.Tags.FieldAttribute("L3 section index*:(medium)", typeof(Int16))]
                public Int16 L3SectionIndex;
                [Abide.Guerilla.Tags.FieldAttribute("L4 section index*:(high)", typeof(Int16))]
                public Int16 L4SectionIndex;
                [Abide.Guerilla.Tags.FieldAttribute("L5 section index*:(super high)", typeof(Int16))]
                public Int16 L5SectionIndex;
                [Abide.Guerilla.Tags.FieldAttribute("L6 section index*:(hollywood)", typeof(Int16))]
                public Int16 L6SectionIndex;
                public int Size
                {
                    get
                    {
                        return 16;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(104, 4)]
        public sealed class RenderModelSectionBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("global_geometry_classification_enum_definition", typeof(Int16))]
            [Abide.Guerilla.Tags.OptionsAttribute(typeof(GlobalGeometryClassificationEnumDefinitionOptions), false)]
            public Int16 GlobalGeometryClassificationEnumDefinition;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(2)]
            public Byte[] EmptyString;
            [Abide.Guerilla.Tags.FieldAttribute("section info*", typeof(GlobalGeometrySectionInfoStructBlock))]
            public GlobalGeometrySectionInfoStructBlock SectionInfo;
            [Abide.Guerilla.Tags.FieldAttribute("rigid node*", typeof(Int16))]
            public Int16 RigidNode;
            [Abide.Guerilla.Tags.FieldAttribute("flags", typeof(Int16))]
            [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
            public Int16 Flags;
            [Abide.Guerilla.Tags.FieldAttribute("section data*", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("render_model_section_data_block", 1, typeof(RenderModelSectionDataBlock))]
            public TagBlock SectionData;
            [Abide.Guerilla.Tags.FieldAttribute("geometry block info*", typeof(GlobalGeometryBlockInfoStructBlock))]
            public GlobalGeometryBlockInfoStructBlock GeometryBlockInfo;
            public int Size
            {
                get
                {
                    return 104;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(180, 4)]
            public sealed class RenderModelSectionDataBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("section*", typeof(GlobalGeometrySectionStructBlock))]
                public GlobalGeometrySectionStructBlock Section;
                [Abide.Guerilla.Tags.FieldAttribute("point data*", typeof(GlobalGeometryPointDataStructBlock))]
                public GlobalGeometryPointDataStructBlock PointData;
                [Abide.Guerilla.Tags.FieldAttribute("node map*", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("index", 40, typeof(RenderModelNodeMapBlock))]
                public TagBlock NodeMap;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(4)]
                public Byte[] EmptyString;
                public int Size
                {
                    get
                    {
                        return 180;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(1, 4)]
                public sealed class RenderModelNodeMapBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("node index*", typeof(Byte))]
                    public Byte NodeIndex;
                    public int Size
                    {
                        get
                        {
                            return 1;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(108, 4)]
                public sealed class GlobalGeometrySectionStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("Parts*", typeof(TagBlock))]
                    [Abide.Guerilla.Tags.BlockAttribute("part", 255, typeof(GlobalGeometryPartBlockNew))]
                    public TagBlock Parts;
                    [Abide.Guerilla.Tags.FieldAttribute("Subparts*", typeof(TagBlock))]
                    [Abide.Guerilla.Tags.BlockAttribute("subparts", 32768, typeof(GlobalSubpartsBlock))]
                    public TagBlock Subparts;
                    [Abide.Guerilla.Tags.FieldAttribute("Visibility Bounds*", typeof(TagBlock))]
                    [Abide.Guerilla.Tags.BlockAttribute("visibility bounds", 32768, typeof(GlobalVisibilityBoundsBlock))]
                    public TagBlock VisibilityBounds;
                    [Abide.Guerilla.Tags.FieldAttribute("Raw Vertices*", typeof(TagBlock))]
                    [Abide.Guerilla.Tags.BlockAttribute("vertex", 32767, typeof(GlobalGeometrySectionRawVertexBlock))]
                    public TagBlock RawVertices;
                    [Abide.Guerilla.Tags.FieldAttribute("Strip Indices*", typeof(TagBlock))]
                    [Abide.Guerilla.Tags.BlockAttribute("index", 65535, typeof(GlobalGeometrySectionStripIndexBlock))]
                    public TagBlock StripIndices;
                    [Abide.Guerilla.Tags.FieldAttribute("mopp Reorder Table*", typeof(TagBlock))]
                    [Abide.Guerilla.Tags.BlockAttribute("index", 65535, typeof(GlobalGeometrySectionStripIndexBlock))]
                    public TagBlock MoppReorderTable;
                    [Abide.Guerilla.Tags.FieldAttribute("Vertex Buffers*", typeof(TagBlock))]
                    [Abide.Guerilla.Tags.BlockAttribute("vertex buffer", 512, typeof(GlobalGeometrySectionVertexBufferBlock))]
                    public TagBlock VertexBuffers;
                    [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                    [Abide.Guerilla.Tags.PaddingAttribute(4)]
                    public Byte[] EmptyString;
                    public int Size
                    {
                        get
                        {
                            return 108;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(72, 4)]
                    public sealed class GlobalGeometryPartBlockNew : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Type*", typeof(Int16))]
                        [Abide.Guerilla.Tags.OptionsAttribute(typeof(TypeOptions), false)]
                        public Int16 Type;
                        [Abide.Guerilla.Tags.FieldAttribute("Flags*", typeof(Int16))]
                        [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
                        public Int16 Flags;
                        [Abide.Guerilla.Tags.FieldAttribute("Material*", typeof(Int16))]
                        public Int16 Material;
                        [Abide.Guerilla.Tags.FieldAttribute("Strip Start Index*", typeof(Int16))]
                        public Int16 StripStartIndex;
                        [Abide.Guerilla.Tags.FieldAttribute("Strip Length*", typeof(Int16))]
                        public Int16 StripLength;
                        [Abide.Guerilla.Tags.FieldAttribute("First Subpart Index*", typeof(Int16))]
                        public Int16 FirstSubpartIndex;
                        [Abide.Guerilla.Tags.FieldAttribute("Subpart Count*", typeof(Int16))]
                        public Int16 SubpartCount;
                        [Abide.Guerilla.Tags.FieldAttribute("Max Nodes/Vertex*", typeof(Byte))]
                        public Byte MaxNodesvertex;
                        [Abide.Guerilla.Tags.FieldAttribute("Contributing Compound Node Count*", typeof(Byte))]
                        public Byte ContributingCompoundNodeCount;
                        [Abide.Guerilla.Tags.FieldAttribute("Position*", typeof(Vector3))]
                        public Vector3 Position;
                        [Abide.Guerilla.Tags.FieldAttribute("Node Indices*", typeof(NodeIndicesElement[]))]
                        [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeIndicesElement))]
                        public NodeIndicesElement[] NodeIndices;
                        [Abide.Guerilla.Tags.FieldAttribute("Node Weights*", typeof(NodeWeightsElement[]))]
                        [Abide.Guerilla.Tags.ArrayAttribute(3, typeof(NodeWeightsElement))]
                        public NodeWeightsElement[] NodeWeights;
                        [Abide.Guerilla.Tags.FieldAttribute("lod mipmap magic number*", typeof(Single))]
                        public Single LodMipmapMagicNumber;
                        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                        [Abide.Guerilla.Tags.PaddingAttribute(24)]
                        public Byte[] EmptyString;
                        public int Size
                        {
                            get
                            {
                                return 72;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                        public sealed class NodeIndicesElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("Node Index*", typeof(Byte))]
                            public Byte NodeIndex;
                            public int Size
                            {
                                get
                                {
                                    return 0;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                        }
                        public sealed class NodeWeightsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("Node Weight*", typeof(Single))]
                            public Single NodeWeight;
                            public int Size
                            {
                                get
                                {
                                    return 0;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                        }
                        public enum TypeOptions
                        {
                            NotDrawn = 0,
                            OpaqueShadowOnly = 1,
                            OpaqueShadowCasting = 2,
                            OpaqueNonshadowing = 3,
                            Transparent = 4,
                            LightmapOnly = 5,
                        }
                        public enum FlagsOptions
                        {
                            Decalable = 1,
                            NewPartTypes = 2,
                            DislikesPhotons = 4,
                            OverrideTriangleList = 8,
                            IgnoredByLightmapper = 16,
                        }
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(8, 4)]
                    public sealed class GlobalSubpartsBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("indices_start_index*", typeof(Int16))]
                        public Int16 IndicesStartIndex;
                        [Abide.Guerilla.Tags.FieldAttribute("indices_length*", typeof(Int16))]
                        public Int16 IndicesLength;
                        [Abide.Guerilla.Tags.FieldAttribute("visibility_bounds_index*", typeof(Int16))]
                        public Int16 VisibilityBoundsIndex;
                        [Abide.Guerilla.Tags.FieldAttribute("Part Index*", typeof(Int16))]
                        public Int16 PartIndex;
                        public int Size
                        {
                            get
                            {
                                return 8;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(20, 4)]
                    public sealed class GlobalVisibilityBoundsBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Position x*", typeof(Single))]
                        public Single PositionX;
                        [Abide.Guerilla.Tags.FieldAttribute("Position y*", typeof(Single))]
                        public Single PositionY;
                        [Abide.Guerilla.Tags.FieldAttribute("Position z*", typeof(Single))]
                        public Single PositionZ;
                        [Abide.Guerilla.Tags.FieldAttribute("Radius*", typeof(Single))]
                        public Single Radius;
                        [Abide.Guerilla.Tags.FieldAttribute("Node 0*", typeof(Byte))]
                        public Byte Node0;
                        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                        [Abide.Guerilla.Tags.PaddingAttribute(3)]
                        public Byte[] EmptyString;
                        public int Size
                        {
                            get
                            {
                                return 20;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(196, 4)]
                    public sealed class GlobalGeometrySectionRawVertexBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Position*", typeof(Vector3))]
                        public Vector3 Position;
                        [Abide.Guerilla.Tags.FieldAttribute("Node Indices (OLD)*", typeof(NodeIndicesOldElement[]))]
                        [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeIndicesOldElement))]
                        public NodeIndicesOldElement[] NodeIndicesOld;
                        [Abide.Guerilla.Tags.FieldAttribute("Node Weights*", typeof(NodeWeightsElement[]))]
                        [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeWeightsElement))]
                        public NodeWeightsElement[] NodeWeights;
                        [Abide.Guerilla.Tags.FieldAttribute("Node Indices (NEW)*", typeof(NodeIndicesNewElement[]))]
                        [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeIndicesNewElement))]
                        public NodeIndicesNewElement[] NodeIndicesNew;
                        [Abide.Guerilla.Tags.FieldAttribute("Use New Node Indices*", typeof(Int32))]
                        public Int32 UseNewNodeIndices;
                        [Abide.Guerilla.Tags.FieldAttribute("Adjusted Compound Node Index*", typeof(Int32))]
                        public Int32 AdjustedCompoundNodeIndex;
                        [Abide.Guerilla.Tags.FieldAttribute("texcoord*", typeof(Vector2))]
                        public Vector2 Texcoord;
                        [Abide.Guerilla.Tags.FieldAttribute("Normal*", typeof(Vector3))]
                        public Vector3 Normal;
                        [Abide.Guerilla.Tags.FieldAttribute("Binormal*", typeof(Vector3))]
                        public Vector3 Binormal;
                        [Abide.Guerilla.Tags.FieldAttribute("Tangent*", typeof(Vector3))]
                        public Vector3 Tangent;
                        [Abide.Guerilla.Tags.FieldAttribute("Anisotropic Binormal*", typeof(Vector3))]
                        public Vector3 AnisotropicBinormal;
                        [Abide.Guerilla.Tags.FieldAttribute("Secondary texcoord*", typeof(Vector2))]
                        public Vector2 SecondaryTexcoord;
                        [Abide.Guerilla.Tags.FieldAttribute("Primary Lightmap Color", typeof(ColorRgbF))]
                        public ColorRgbF PrimaryLightmapColor;
                        [Abide.Guerilla.Tags.FieldAttribute("Primary Lightmap texcoord", typeof(Vector2))]
                        public Vector2 PrimaryLightmapTexcoord;
                        [Abide.Guerilla.Tags.FieldAttribute("Primary Lightmap Incident Direction", typeof(Vector3))]
                        public Vector3 PrimaryLightmapIncidentDirection;
                        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                        [Abide.Guerilla.Tags.PaddingAttribute(12)]
                        public Byte[] EmptyString;
                        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                        [Abide.Guerilla.Tags.PaddingAttribute(8)]
                        public Byte[] EmptyString1;
                        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                        [Abide.Guerilla.Tags.PaddingAttribute(12)]
                        public Byte[] EmptyString2;
                        public int Size
                        {
                            get
                            {
                                return 196;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                        public sealed class NodeIndicesOldElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("Node Index (OLD)*", typeof(Int32))]
                            public Int32 NodeIndexOld;
                            public int Size
                            {
                                get
                                {
                                    return 0;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                        }
                        public sealed class NodeWeightsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("node_weight*", typeof(Single))]
                            public Single NodeWeight;
                            public int Size
                            {
                                get
                                {
                                    return 0;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                        }
                        public sealed class NodeIndicesNewElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("Node Index (NEW)*", typeof(Int32))]
                            public Int32 NodeIndexNew;
                            public int Size
                            {
                                get
                                {
                                    return 0;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                        }
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(2, 4)]
                    public sealed class GlobalGeometrySectionStripIndexBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Index*", typeof(Int16))]
                        public Int16 Index;
                        public int Size
                        {
                            get
                            {
                                return 2;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(32, 4)]
                    public sealed class GlobalGeometrySectionVertexBufferBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        public int Size
                        {
                            get
                            {
                                return 32;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(56, 4)]
                public sealed class GlobalGeometryPointDataStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("Raw Points*", typeof(TagBlock))]
                    [Abide.Guerilla.Tags.BlockAttribute("point", 32767, typeof(GlobalGeometryRawPointBlock))]
                    public TagBlock RawPoints;
                    [Abide.Guerilla.Tags.FieldAttribute("Rigid Point Groups*", typeof(TagBlock))]
                    [Abide.Guerilla.Tags.BlockAttribute("rigid point group", 32767, typeof(GlobalGeometryRigidPointGroupBlock))]
                    public TagBlock RigidPointGroups;
                    [Abide.Guerilla.Tags.FieldAttribute("Vertex-Point Indices*", typeof(TagBlock))]
                    [Abide.Guerilla.Tags.BlockAttribute("index", 32767, typeof(GlobalGeometryPointDataIndexBlock))]
                    public TagBlock VertexPointIndices;
                    public int Size
                    {
                        get
                        {
                            return 56;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(68, 4)]
                    public sealed class GlobalGeometryRawPointBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Position*", typeof(Vector3))]
                        public Vector3 Position;
                        [Abide.Guerilla.Tags.FieldAttribute("Node Indices (OLD)*", typeof(NodeIndicesOldElement[]))]
                        [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeIndicesOldElement))]
                        public NodeIndicesOldElement[] NodeIndicesOld;
                        [Abide.Guerilla.Tags.FieldAttribute("Node Weights*", typeof(NodeWeightsElement[]))]
                        [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeWeightsElement))]
                        public NodeWeightsElement[] NodeWeights;
                        [Abide.Guerilla.Tags.FieldAttribute("Node Indices (NEW)*", typeof(NodeIndicesNewElement[]))]
                        [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeIndicesNewElement))]
                        public NodeIndicesNewElement[] NodeIndicesNew;
                        [Abide.Guerilla.Tags.FieldAttribute("Use New Node Indices*", typeof(Int32))]
                        public Int32 UseNewNodeIndices;
                        [Abide.Guerilla.Tags.FieldAttribute("Adjusted Compound Node Index*", typeof(Int32))]
                        public Int32 AdjustedCompoundNodeIndex;
                        public int Size
                        {
                            get
                            {
                                return 68;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                        public sealed class NodeIndicesOldElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("Node Index (OLD)*", typeof(Int32))]
                            public Int32 NodeIndexOld;
                            public int Size
                            {
                                get
                                {
                                    return 0;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                        }
                        public sealed class NodeWeightsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("node_weight*", typeof(Single))]
                            public Single NodeWeight;
                            public int Size
                            {
                                get
                                {
                                    return 0;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                        }
                        public sealed class NodeIndicesNewElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("Node Index (NEW)*", typeof(Int32))]
                            public Int32 NodeIndexNew;
                            public int Size
                            {
                                get
                                {
                                    return 0;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                        }
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(4, 4)]
                    public sealed class GlobalGeometryRigidPointGroupBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Rigid Node Index*", typeof(Byte))]
                        public Byte RigidNodeIndex;
                        [Abide.Guerilla.Tags.FieldAttribute("Nodes/Point*", typeof(Byte))]
                        public Byte Nodespoint;
                        [Abide.Guerilla.Tags.FieldAttribute("Point Count*", typeof(Int16))]
                        public Int16 PointCount;
                        public int Size
                        {
                            get
                            {
                                return 4;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(2, 4)]
                    public sealed class GlobalGeometryPointDataIndexBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Index*", typeof(Int16))]
                        public Int16 Index;
                        public int Size
                        {
                            get
                            {
                                return 2;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(44, 4)]
            public sealed class GlobalGeometrySectionInfoStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("Total Vertex Count*", typeof(Int16))]
                public Int16 TotalVertexCount;
                [Abide.Guerilla.Tags.FieldAttribute("Total Triangle Count*", typeof(Int16))]
                public Int16 TotalTriangleCount;
                [Abide.Guerilla.Tags.FieldAttribute("Total Part Count*", typeof(Int16))]
                public Int16 TotalPartCount;
                [Abide.Guerilla.Tags.FieldAttribute("Shadow-Casting Triangle Count*", typeof(Int16))]
                public Int16 ShadowCastingTriangleCount;
                [Abide.Guerilla.Tags.FieldAttribute("Shadow-Casting Part Count*", typeof(Int16))]
                public Int16 ShadowCastingPartCount;
                [Abide.Guerilla.Tags.FieldAttribute("Opaque Point Count*", typeof(Int16))]
                public Int16 OpaquePointCount;
                [Abide.Guerilla.Tags.FieldAttribute("Opaque Vertex Count*", typeof(Int16))]
                public Int16 OpaqueVertexCount;
                [Abide.Guerilla.Tags.FieldAttribute("Opaque Part Count*", typeof(Int16))]
                public Int16 OpaquePartCount;
                [Abide.Guerilla.Tags.FieldAttribute("Opaque Max Nodes/Vertex*", typeof(Byte))]
                public Byte OpaqueMaxNodesvertex;
                [Abide.Guerilla.Tags.FieldAttribute("Transparent Max Nodes/Vertex*", typeof(Byte))]
                public Byte TransparentMaxNodesvertex;
                [Abide.Guerilla.Tags.FieldAttribute("Shadow-Casting Rigid Triangle Count*", typeof(Int16))]
                public Int16 ShadowCastingRigidTriangleCount;
                [Abide.Guerilla.Tags.FieldAttribute("Geometry Classification*", typeof(Int16))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(GeometryClassificationOptions), false)]
                public Int16 GeometryClassification;
                [Abide.Guerilla.Tags.FieldAttribute("Geometry Compression Flags*", typeof(Int16))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(GeometryCompressionFlagsOptions), true)]
                public Int16 GeometryCompressionFlags;
                [Abide.Guerilla.Tags.FieldAttribute("EMPTY STRING", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("compression info", 1, typeof(GlobalGeometryCompressionInfoBlock))]
                public TagBlock EmptyString;
                [Abide.Guerilla.Tags.FieldAttribute("Hardware Node Count*", typeof(Byte))]
                public Byte HardwareNodeCount;
                [Abide.Guerilla.Tags.FieldAttribute("Node Map Size*", typeof(Byte))]
                public Byte NodeMapSize;
                [Abide.Guerilla.Tags.FieldAttribute("Software Plane Count*", typeof(Int16))]
                public Int16 SoftwarePlaneCount;
                [Abide.Guerilla.Tags.FieldAttribute("total subpart_cont*", typeof(Int16))]
                public Int16 TotalSubpartCont;
                [Abide.Guerilla.Tags.FieldAttribute("Section Lighting Flags*", typeof(Int16))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(SectionLightingFlagsOptions), true)]
                public Int16 SectionLightingFlags;
                public int Size
                {
                    get
                    {
                        return 44;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(56, 4)]
                public sealed class GlobalGeometryCompressionInfoBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    public int Size
                    {
                        get
                        {
                            return 56;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                }
                public enum GeometryClassificationOptions
                {
                    Worldspace = 0,
                    Rigid = 1,
                    RigidBoned = 2,
                    Skinned = 3,
                    UnsupportedReimport = 4,
                }
                public enum GeometryCompressionFlagsOptions
                {
                    CompressedPosition = 1,
                    CompressedTexcoord = 2,
                    CompressedSecondaryTexcoord = 4,
                }
                public enum SectionLightingFlagsOptions
                {
                    HasLmTexcoords = 1,
                    HasLmIncRad = 2,
                    HasLmColors = 4,
                    HasLmPrt = 8,
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(40, 4)]
            public sealed class GlobalGeometryBlockInfoStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("Block Offset*", typeof(Int32))]
                public Int32 BlockOffset;
                [Abide.Guerilla.Tags.FieldAttribute("Block Size*", typeof(Int32))]
                public Int32 BlockSize;
                [Abide.Guerilla.Tags.FieldAttribute("Section Data Size*", typeof(Int32))]
                public Int32 SectionDataSize;
                [Abide.Guerilla.Tags.FieldAttribute("Resource Data Size*", typeof(Int32))]
                public Int32 ResourceDataSize;
                [Abide.Guerilla.Tags.FieldAttribute("Resources*", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("block resources", 1024, typeof(GlobalGeometryBlockResourceBlock))]
                public TagBlock Resources;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(4)]
                public Byte[] EmptyString;
                [Abide.Guerilla.Tags.FieldAttribute("Owner Tag Section Offset*", typeof(Int16))]
                public Int16 OwnerTagSectionOffset;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(2)]
                public Byte[] EmptyString1;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(4)]
                public Byte[] EmptyString2;
                public int Size
                {
                    get
                    {
                        return 40;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(16, 4)]
                public sealed class GlobalGeometryBlockResourceBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("Type*", typeof(Byte))]
                    [Abide.Guerilla.Tags.OptionsAttribute(typeof(TypeOptions), false)]
                    public Byte Type;
                    [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                    [Abide.Guerilla.Tags.PaddingAttribute(3)]
                    public Byte[] EmptyString;
                    [Abide.Guerilla.Tags.FieldAttribute("Primary Locator*", typeof(Int16))]
                    public Int16 PrimaryLocator;
                    [Abide.Guerilla.Tags.FieldAttribute("Secondary Locator*", typeof(Int16))]
                    public Int16 SecondaryLocator;
                    [Abide.Guerilla.Tags.FieldAttribute("Resource Data Size*", typeof(Int32))]
                    public Int32 ResourceDataSize;
                    [Abide.Guerilla.Tags.FieldAttribute("Resource Data Offset*", typeof(Int32))]
                    public Int32 ResourceDataOffset;
                    public int Size
                    {
                        get
                        {
                            return 16;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    public enum TypeOptions
                    {
                        TagBlock = 0,
                        TagData = 1,
                        VertexBuffer = 2,
                    }
                }
            }
            public enum GlobalGeometryClassificationEnumDefinitionOptions
            {
                Worldspace = 0,
                Rigid = 1,
                RigidBoned = 2,
                Skinned = 3,
                UnsupportedReimport = 4,
            }
            public enum FlagsOptions
            {
                GeometryPostprocessed = 1,
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(4, 4)]
        public sealed class RenderModelInvalidSectionPairsBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("bits*", typeof(Int32))]
            public Int32 Bits;
            public int Size
            {
                get
                {
                    return 4;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(16, 4)]
        public sealed class RenderModelSectionGroupBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("detail levels*", typeof(Int16))]
            [Abide.Guerilla.Tags.OptionsAttribute(typeof(DetailLevelsOptions), true)]
            public Int16 DetailLevels;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(2)]
            public Byte[] EmptyString;
            [Abide.Guerilla.Tags.FieldAttribute("compound nodes*", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("compound node", 255, typeof(RenderModelCompoundNodeBlock))]
            public TagBlock CompoundNodes;
            public int Size
            {
                get
                {
                    return 16;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(16, 4)]
            public sealed class RenderModelCompoundNodeBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("node indices*", typeof(NodeIndicesElement[]))]
                [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeIndicesElement))]
                public NodeIndicesElement[] NodeIndices;
                [Abide.Guerilla.Tags.FieldAttribute("node weights*", typeof(NodeWeightsElement[]))]
                [Abide.Guerilla.Tags.ArrayAttribute(3, typeof(NodeWeightsElement))]
                public NodeWeightsElement[] NodeWeights;
                public int Size
                {
                    get
                    {
                        return 16;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                public sealed class NodeIndicesElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("node index*", typeof(Byte))]
                    public Byte NodeIndex;
                    public int Size
                    {
                        get
                        {
                            return 0;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                }
                public sealed class NodeWeightsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("node weight*", typeof(Single))]
                    public Single NodeWeight;
                    public int Size
                    {
                        get
                        {
                            return 0;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                }
            }
            public enum DetailLevelsOptions
            {
                L1SuperLow = 1,
                L2Low = 2,
                L3Medium = 4,
                L4High = 8,
                L5SuperHigh = 16,
                L6Hollywood = 32,
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(96, 4)]
        public sealed class RenderModelNodeBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("name^*", typeof(StringId))]
            public StringId Name;
            [Abide.Guerilla.Tags.FieldAttribute("parent node*", typeof(Int16))]
            public Int16 ParentNode;
            [Abide.Guerilla.Tags.FieldAttribute("first child node*", typeof(Int16))]
            public Int16 FirstChildNode;
            [Abide.Guerilla.Tags.FieldAttribute("next sibling node*", typeof(Int16))]
            public Int16 NextSiblingNode;
            [Abide.Guerilla.Tags.FieldAttribute("import node index*", typeof(Int16))]
            public Int16 ImportNodeIndex;
            [Abide.Guerilla.Tags.FieldAttribute("default translation*", typeof(Vector3))]
            public Vector3 DefaultTranslation;
            [Abide.Guerilla.Tags.FieldAttribute("default rotation*", typeof(Quaternion))]
            public Quaternion DefaultRotation;
            [Abide.Guerilla.Tags.FieldAttribute("inverse forward*", typeof(Vector3))]
            public Vector3 InverseForward;
            [Abide.Guerilla.Tags.FieldAttribute("inverse left*", typeof(Vector3))]
            public Vector3 InverseLeft;
            [Abide.Guerilla.Tags.FieldAttribute("inverse up*", typeof(Vector3))]
            public Vector3 InverseUp;
            [Abide.Guerilla.Tags.FieldAttribute("inverse position*", typeof(Vector3))]
            public Vector3 InversePosition;
            [Abide.Guerilla.Tags.FieldAttribute("inverse scale*", typeof(Single))]
            public Single InverseScale;
            [Abide.Guerilla.Tags.FieldAttribute("distance from parent*", typeof(Single))]
            public Single DistanceFromParent;
            public int Size
            {
                get
                {
                    return 96;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(1, 4)]
        public sealed class RenderModelNodeMapBlockOld : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("node index*", typeof(Byte))]
            public Byte NodeIndex;
            public int Size
            {
                get
                {
                    return 1;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(16, 4)]
        public sealed class RenderModelMarkerGroupBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("name^*", typeof(StringId))]
            public StringId Name;
            [Abide.Guerilla.Tags.FieldAttribute("markers*", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("marker", 256, typeof(RenderModelMarkerBlock))]
            public TagBlock Markers;
            public int Size
            {
                get
                {
                    return 16;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(36, 4)]
            public sealed class RenderModelMarkerBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("region index*", typeof(Byte))]
                public Byte RegionIndex;
                [Abide.Guerilla.Tags.FieldAttribute("permutation index*", typeof(Byte))]
                public Byte PermutationIndex;
                [Abide.Guerilla.Tags.FieldAttribute("node index*", typeof(Byte))]
                public Byte NodeIndex;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(1)]
                public Byte[] EmptyString;
                [Abide.Guerilla.Tags.FieldAttribute("translation*", typeof(Vector3))]
                public Vector3 Translation;
                [Abide.Guerilla.Tags.FieldAttribute("rotation*", typeof(Quaternion))]
                public Quaternion Rotation;
                [Abide.Guerilla.Tags.FieldAttribute("scale", typeof(Single))]
                public Single Scale;
                public int Size
                {
                    get
                    {
                        return 36;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(52, 4)]
        public sealed class GlobalGeometryMaterialBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("Old Shader*", typeof(TagReference))]
            public TagReference OldShader;
            [Abide.Guerilla.Tags.FieldAttribute("Shader^*", typeof(TagReference))]
            public TagReference Shader;
            [Abide.Guerilla.Tags.FieldAttribute("Properties*", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("material property", 16, typeof(GlobalGeometryMaterialPropertyBlock))]
            public TagBlock Properties;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString;
            [Abide.Guerilla.Tags.FieldAttribute("Breakable Surface Index*", typeof(Byte))]
            public Byte BreakableSurfaceIndex;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(3)]
            public Byte[] EmptyString1;
            public int Size
            {
                get
                {
                    return 52;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(8, 4)]
            public sealed class GlobalGeometryMaterialPropertyBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("Type*", typeof(Int16))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(TypeOptions), false)]
                public Int16 Type;
                [Abide.Guerilla.Tags.FieldAttribute("Int Value*", typeof(Int16))]
                public Int16 IntValue;
                [Abide.Guerilla.Tags.FieldAttribute("Real Value*", typeof(Single))]
                public Single RealValue;
                public int Size
                {
                    get
                    {
                        return 8;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                public enum TypeOptions
                {
                    LightmapResolution = 0,
                    LightmapPower = 1,
                    LightmapHalfLife = 2,
                    LightmapDiffuseScale = 3,
                }
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(680, 4)]
        public sealed class GlobalErrorReportCategoriesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("Name^*", typeof(String256))]
            public String256 Name;
            [Abide.Guerilla.Tags.FieldAttribute("Report Type*", typeof(Int16))]
            [Abide.Guerilla.Tags.OptionsAttribute(typeof(ReportTypeOptions), false)]
            public Int16 ReportType;
            [Abide.Guerilla.Tags.FieldAttribute("Flags*", typeof(Int16))]
            [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
            public Int16 Flags;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(2)]
            public Byte[] EmptyString;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(2)]
            public Byte[] EmptyString1;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(404)]
            public Byte[] EmptyString2;
            [Abide.Guerilla.Tags.FieldAttribute("Reports*", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("error report", 1024, typeof(ErrorReportsBlock))]
            public TagBlock Reports;
            public int Size
            {
                get
                {
                    return 680;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(644, 4)]
            public sealed class ErrorReportsBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("Type*", typeof(Int16))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(TypeOptions), false)]
                public Int16 Type;
                [Abide.Guerilla.Tags.FieldAttribute("Flags*", typeof(Int16))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
                public Int16 Flags;
                [Abide.Guerilla.Tags.FieldAttribute("Source Filename*", typeof(String32))]
                public String32 SourceFilename;
                [Abide.Guerilla.Tags.FieldAttribute("Source Line Number*", typeof(Int32))]
                public Int32 SourceLineNumber;
                [Abide.Guerilla.Tags.FieldAttribute("Vertices*", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("error report vertex", 1024, typeof(ErrorReportVerticesBlock))]
                public TagBlock Vertices;
                [Abide.Guerilla.Tags.FieldAttribute("Vectors*", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("error report vector", 1024, typeof(ErrorReportVectorsBlock))]
                public TagBlock Vectors;
                [Abide.Guerilla.Tags.FieldAttribute("Lines*", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("error report line", 1024, typeof(ErrorReportLinesBlock))]
                public TagBlock Lines;
                [Abide.Guerilla.Tags.FieldAttribute("Triangles*", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("error report triangle", 1024, typeof(ErrorReportTrianglesBlock))]
                public TagBlock Triangles;
                [Abide.Guerilla.Tags.FieldAttribute("Quads*", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("error report quad", 1024, typeof(ErrorReportQuadsBlock))]
                public TagBlock Quads;
                [Abide.Guerilla.Tags.FieldAttribute("Comments*", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("error report comment", 1024, typeof(ErrorReportCommentsBlock))]
                public TagBlock Comments;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(380)]
                public Byte[] EmptyString;
                [Abide.Guerilla.Tags.FieldAttribute("Report Key*", typeof(Int32))]
                public Int32 ReportKey;
                [Abide.Guerilla.Tags.FieldAttribute("Node Index*", typeof(Int32))]
                public Int32 NodeIndex;
                [Abide.Guerilla.Tags.FieldAttribute("Color*", typeof(ColorArgbF))]
                public ColorArgbF Color;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(84)]
                public Byte[] EmptyString1;
                public int Size
                {
                    get
                    {
                        return 644;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(52, 4)]
                public sealed class ErrorReportVerticesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("Position*", typeof(Vector3))]
                    public Vector3 Position;
                    [Abide.Guerilla.Tags.FieldAttribute("Node Indices*", typeof(NodeIndicesElement[]))]
                    [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeIndicesElement))]
                    public NodeIndicesElement[] NodeIndices;
                    [Abide.Guerilla.Tags.FieldAttribute("Node Weights*", typeof(NodeWeightsElement[]))]
                    [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeWeightsElement))]
                    public NodeWeightsElement[] NodeWeights;
                    [Abide.Guerilla.Tags.FieldAttribute("Color*", typeof(ColorArgbF))]
                    public ColorArgbF Color;
                    [Abide.Guerilla.Tags.FieldAttribute("Screen Size*", typeof(Single))]
                    public Single ScreenSize;
                    public int Size
                    {
                        get
                        {
                            return 52;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    public sealed class NodeIndicesElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Node Index*", typeof(Byte))]
                        public Byte NodeIndex;
                        public int Size
                        {
                            get
                            {
                                return 0;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                    public sealed class NodeWeightsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Node Weight*", typeof(Single))]
                        public Single NodeWeight;
                        public int Size
                        {
                            get
                            {
                                return 0;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(64, 4)]
                public sealed class ErrorReportVectorsBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("Position*", typeof(Vector3))]
                    public Vector3 Position;
                    [Abide.Guerilla.Tags.FieldAttribute("Node Indices*", typeof(NodeIndicesElement[]))]
                    [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeIndicesElement))]
                    public NodeIndicesElement[] NodeIndices;
                    [Abide.Guerilla.Tags.FieldAttribute("Node Weights*", typeof(NodeWeightsElement[]))]
                    [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeWeightsElement))]
                    public NodeWeightsElement[] NodeWeights;
                    [Abide.Guerilla.Tags.FieldAttribute("Color*", typeof(ColorArgbF))]
                    public ColorArgbF Color;
                    [Abide.Guerilla.Tags.FieldAttribute("Normal*", typeof(Vector3))]
                    public Vector3 Normal;
                    [Abide.Guerilla.Tags.FieldAttribute("Screen Length*", typeof(Single))]
                    public Single ScreenLength;
                    public int Size
                    {
                        get
                        {
                            return 64;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    public sealed class NodeIndicesElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Node Index*", typeof(Byte))]
                        public Byte NodeIndex;
                        public int Size
                        {
                            get
                            {
                                return 0;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                    public sealed class NodeWeightsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Node Weight*", typeof(Single))]
                        public Single NodeWeight;
                        public int Size
                        {
                            get
                            {
                                return 0;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(80, 4)]
                public sealed class ErrorReportLinesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("Points*", typeof(PointsElement[]))]
                    [Abide.Guerilla.Tags.ArrayAttribute(2, typeof(PointsElement))]
                    public PointsElement[] Points;
                    [Abide.Guerilla.Tags.FieldAttribute("Node Weights*", typeof(NodeWeightsElement[]))]
                    [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeWeightsElement))]
                    public NodeWeightsElement[] NodeWeights;
                    [Abide.Guerilla.Tags.FieldAttribute("Color*", typeof(ColorArgbF))]
                    public ColorArgbF Color;
                    public int Size
                    {
                        get
                        {
                            return 80;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    public sealed class PointsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Position*", typeof(Vector3))]
                        public Vector3 Position;
                        [Abide.Guerilla.Tags.FieldAttribute("Node Indices*", typeof(NodeIndicesElement[]))]
                        [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeIndicesElement))]
                        public NodeIndicesElement[] NodeIndices;
                        [Abide.Guerilla.Tags.FieldAttribute("Node Weights*", typeof(NodeWeightsElement[]))]
                        [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeWeightsElement))]
                        public NodeWeightsElement[] NodeWeights;
                        public int Size
                        {
                            get
                            {
                                return 0;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                        public sealed class NodeIndicesElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("Node Index*", typeof(Byte))]
                            public Byte NodeIndex;
                            public int Size
                            {
                                get
                                {
                                    return 0;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                        }
                        public sealed class NodeWeightsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("Node Weight*", typeof(Single))]
                            public Single NodeWeight;
                            public int Size
                            {
                                get
                                {
                                    return 0;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                        }
                    }
                    public sealed class NodeWeightsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Node Weight*", typeof(Single))]
                        public Single NodeWeight;
                        public int Size
                        {
                            get
                            {
                                return 0;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(112, 4)]
                public sealed class ErrorReportTrianglesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("Points*", typeof(PointsElement[]))]
                    [Abide.Guerilla.Tags.ArrayAttribute(3, typeof(PointsElement))]
                    public PointsElement[] Points;
                    [Abide.Guerilla.Tags.FieldAttribute("Node Weights*", typeof(NodeWeightsElement[]))]
                    [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeWeightsElement))]
                    public NodeWeightsElement[] NodeWeights;
                    [Abide.Guerilla.Tags.FieldAttribute("Color*", typeof(ColorArgbF))]
                    public ColorArgbF Color;
                    public int Size
                    {
                        get
                        {
                            return 112;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    public sealed class PointsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Position*", typeof(Vector3))]
                        public Vector3 Position;
                        [Abide.Guerilla.Tags.FieldAttribute("Node Indices*", typeof(NodeIndicesElement[]))]
                        [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeIndicesElement))]
                        public NodeIndicesElement[] NodeIndices;
                        [Abide.Guerilla.Tags.FieldAttribute("Node Weights*", typeof(NodeWeightsElement[]))]
                        [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeWeightsElement))]
                        public NodeWeightsElement[] NodeWeights;
                        public int Size
                        {
                            get
                            {
                                return 0;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                        public sealed class NodeIndicesElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("Node Index*", typeof(Byte))]
                            public Byte NodeIndex;
                            public int Size
                            {
                                get
                                {
                                    return 0;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                        }
                        public sealed class NodeWeightsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("Node Weight*", typeof(Single))]
                            public Single NodeWeight;
                            public int Size
                            {
                                get
                                {
                                    return 0;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                        }
                    }
                    public sealed class NodeWeightsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Node Weight*", typeof(Single))]
                        public Single NodeWeight;
                        public int Size
                        {
                            get
                            {
                                return 0;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(144, 4)]
                public sealed class ErrorReportQuadsBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("Points*", typeof(PointsElement[]))]
                    [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(PointsElement))]
                    public PointsElement[] Points;
                    [Abide.Guerilla.Tags.FieldAttribute("Node Weights*", typeof(NodeWeightsElement[]))]
                    [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeWeightsElement))]
                    public NodeWeightsElement[] NodeWeights;
                    [Abide.Guerilla.Tags.FieldAttribute("Color*", typeof(ColorArgbF))]
                    public ColorArgbF Color;
                    public int Size
                    {
                        get
                        {
                            return 144;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    public sealed class PointsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Position*", typeof(Vector3))]
                        public Vector3 Position;
                        [Abide.Guerilla.Tags.FieldAttribute("Node Indices*", typeof(NodeIndicesElement[]))]
                        [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeIndicesElement))]
                        public NodeIndicesElement[] NodeIndices;
                        [Abide.Guerilla.Tags.FieldAttribute("Node Weights*", typeof(NodeWeightsElement[]))]
                        [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeWeightsElement))]
                        public NodeWeightsElement[] NodeWeights;
                        public int Size
                        {
                            get
                            {
                                return 0;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                        public sealed class NodeIndicesElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("Node Index*", typeof(Byte))]
                            public Byte NodeIndex;
                            public int Size
                            {
                                get
                                {
                                    return 0;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                        }
                        public sealed class NodeWeightsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("Node Weight*", typeof(Single))]
                            public Single NodeWeight;
                            public int Size
                            {
                                get
                                {
                                    return 0;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                        }
                    }
                    public sealed class NodeWeightsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Node Weight*", typeof(Single))]
                        public Single NodeWeight;
                        public int Size
                        {
                            get
                            {
                                return 0;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(68, 4)]
                public sealed class ErrorReportCommentsBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("Position*", typeof(Vector3))]
                    public Vector3 Position;
                    [Abide.Guerilla.Tags.FieldAttribute("Node Indices*", typeof(NodeIndicesElement[]))]
                    [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeIndicesElement))]
                    public NodeIndicesElement[] NodeIndices;
                    [Abide.Guerilla.Tags.FieldAttribute("Node Weights*", typeof(NodeWeightsElement[]))]
                    [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeWeightsElement))]
                    public NodeWeightsElement[] NodeWeights;
                    [Abide.Guerilla.Tags.FieldAttribute("Color*", typeof(ColorArgbF))]
                    public ColorArgbF Color;
                    public int Size
                    {
                        get
                        {
                            return 68;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    public sealed class NodeIndicesElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Node Index*", typeof(Byte))]
                        public Byte NodeIndex;
                        public int Size
                        {
                            get
                            {
                                return 0;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                    public sealed class NodeWeightsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Node Weight*", typeof(Single))]
                        public Single NodeWeight;
                        public int Size
                        {
                            get
                            {
                                return 0;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                }
                public enum TypeOptions
                {
                    Silent = 0,
                    Comment = 1,
                    Warning = 2,
                    Error = 3,
                }
                public enum FlagsOptions
                {
                    Rendered = 1,
                    TangentSpace = 2,
                    Noncritical = 4,
                    LightmapLight = 8,
                    ReportKeyIsValid = 16,
                }
            }
            public enum ReportTypeOptions
            {
                Silent = 0,
                Comment = 1,
                Warning = 2,
                Error = 3,
            }
            public enum FlagsOptions
            {
                Rendered = 1,
                TangentSpace = 2,
                Noncritical = 4,
                LightmapLight = 8,
                ReportKeyIsValid = 16,
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(108, 4)]
        public sealed class PrtInfoBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("SH Order*", typeof(Int16))]
            public Int16 ShOrder;
            [Abide.Guerilla.Tags.FieldAttribute("num of clusters*", typeof(Int16))]
            public Int16 NumOfClusters;
            [Abide.Guerilla.Tags.FieldAttribute("pca vectors per cluster*", typeof(Int16))]
            public Int16 PcaVectorsPerCluster;
            [Abide.Guerilla.Tags.FieldAttribute("number of rays*", typeof(Int16))]
            public Int16 NumberOfRays;
            [Abide.Guerilla.Tags.FieldAttribute("number of bounces*", typeof(Int16))]
            public Int16 NumberOfBounces;
            [Abide.Guerilla.Tags.FieldAttribute("mat index for sbsfc scattering*", typeof(Int16))]
            public Int16 MatIndexForSbsfcScattering;
            [Abide.Guerilla.Tags.FieldAttribute("length scale*", typeof(Single))]
            public Single LengthScale;
            [Abide.Guerilla.Tags.FieldAttribute("number of lods in model*", typeof(Int16))]
            public Int16 NumberOfLodsInModel;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(2)]
            public Byte[] EmptyString;
            [Abide.Guerilla.Tags.FieldAttribute("lod info*", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("prt lod info", 6, typeof(PrtLodInfoBlock))]
            public TagBlock LodInfo;
            [Abide.Guerilla.Tags.FieldAttribute("cluster basis*", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("cluster basis", 34560, typeof(PrtClusterBasisBlock))]
            public TagBlock ClusterBasis;
            [Abide.Guerilla.Tags.FieldAttribute("raw_pca_data*", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("raw pca data", 150405120, typeof(PrtRawPcaDataBlock))]
            public TagBlock RawPcaData;
            [Abide.Guerilla.Tags.FieldAttribute("vertex buffers*", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("vertex buffers", 255, typeof(PrtVertexBuffersBlock))]
            public TagBlock VertexBuffers;
            [Abide.Guerilla.Tags.FieldAttribute("geometry block info*", typeof(GlobalGeometryBlockInfoStructBlock))]
            public GlobalGeometryBlockInfoStructBlock GeometryBlockInfo;
            public int Size
            {
                get
                {
                    return 108;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(16, 4)]
            public sealed class PrtLodInfoBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("cluster offset*", typeof(Int32))]
                public Int32 ClusterOffset;
                [Abide.Guerilla.Tags.FieldAttribute("section info*", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("prt section info", 255, typeof(PrtSectionInfoBlock))]
                public TagBlock SectionInfo;
                public int Size
                {
                    get
                    {
                        return 16;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(8, 4)]
                public sealed class PrtSectionInfoBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("section index*", typeof(Int32))]
                    public Int32 SectionIndex;
                    [Abide.Guerilla.Tags.FieldAttribute("pca data offset*", typeof(Int32))]
                    public Int32 PcaDataOffset;
                    public int Size
                    {
                        get
                        {
                            return 8;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(4, 4)]
            public sealed class PrtClusterBasisBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("basis data", typeof(Single))]
                public Single BasisData;
                public int Size
                {
                    get
                    {
                        return 4;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(4, 4)]
            public sealed class PrtRawPcaDataBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("raw pca data", typeof(Single))]
                public Single RawPcaData;
                public int Size
                {
                    get
                    {
                        return 4;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(32, 4)]
            public sealed class PrtVertexBuffersBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                public int Size
                {
                    get
                    {
                        return 32;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(40, 4)]
            public sealed class GlobalGeometryBlockInfoStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("Block Offset*", typeof(Int32))]
                public Int32 BlockOffset;
                [Abide.Guerilla.Tags.FieldAttribute("Block Size*", typeof(Int32))]
                public Int32 BlockSize;
                [Abide.Guerilla.Tags.FieldAttribute("Section Data Size*", typeof(Int32))]
                public Int32 SectionDataSize;
                [Abide.Guerilla.Tags.FieldAttribute("Resource Data Size*", typeof(Int32))]
                public Int32 ResourceDataSize;
                [Abide.Guerilla.Tags.FieldAttribute("Resources*", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("block resources", 1024, typeof(GlobalGeometryBlockResourceBlock))]
                public TagBlock Resources;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(4)]
                public Byte[] EmptyString;
                [Abide.Guerilla.Tags.FieldAttribute("Owner Tag Section Offset*", typeof(Int16))]
                public Int16 OwnerTagSectionOffset;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(2)]
                public Byte[] EmptyString1;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(4)]
                public Byte[] EmptyString2;
                public int Size
                {
                    get
                    {
                        return 40;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(16, 4)]
                public sealed class GlobalGeometryBlockResourceBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("Type*", typeof(Byte))]
                    [Abide.Guerilla.Tags.OptionsAttribute(typeof(TypeOptions), false)]
                    public Byte Type;
                    [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                    [Abide.Guerilla.Tags.PaddingAttribute(3)]
                    public Byte[] EmptyString;
                    [Abide.Guerilla.Tags.FieldAttribute("Primary Locator*", typeof(Int16))]
                    public Int16 PrimaryLocator;
                    [Abide.Guerilla.Tags.FieldAttribute("Secondary Locator*", typeof(Int16))]
                    public Int16 SecondaryLocator;
                    [Abide.Guerilla.Tags.FieldAttribute("Resource Data Size*", typeof(Int32))]
                    public Int32 ResourceDataSize;
                    [Abide.Guerilla.Tags.FieldAttribute("Resource Data Offset*", typeof(Int32))]
                    public Int32 ResourceDataOffset;
                    public int Size
                    {
                        get
                        {
                            return 16;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    public enum TypeOptions
                    {
                        TagBlock = 0,
                        TagData = 1,
                        VertexBuffer = 2,
                    }
                }
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(12, 4)]
        public sealed class SectionRenderLeavesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("node render leaves*", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("node_render_leaves_block", 64, typeof(NodeRenderLeavesBlock))]
            public TagBlock NodeRenderLeaves;
            public int Size
            {
                get
                {
                    return 12;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(24, 4)]
            public sealed class NodeRenderLeavesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("collision leaves*", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("bsp_leaf_block", 65536, typeof(BspLeafBlock))]
                public TagBlock CollisionLeaves;
                [Abide.Guerilla.Tags.FieldAttribute("surface references*", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("bsp_surface_reference_block", 262144, typeof(BspSurfaceReferenceBlock))]
                public TagBlock SurfaceReferences;
                public int Size
                {
                    get
                    {
                        return 24;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(8, 4)]
                public sealed class BspLeafBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("cluster*", typeof(Int16))]
                    public Int16 Cluster;
                    [Abide.Guerilla.Tags.FieldAttribute("surface reference count*", typeof(Int16))]
                    public Int16 SurfaceReferenceCount;
                    [Abide.Guerilla.Tags.FieldAttribute("first surface reference index*", typeof(Int32))]
                    public Int32 FirstSurfaceReferenceIndex;
                    public int Size
                    {
                        get
                        {
                            return 8;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(8, 4)]
                public sealed class BspSurfaceReferenceBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("strip index*", typeof(Int16))]
                    public Int16 StripIndex;
                    [Abide.Guerilla.Tags.FieldAttribute("lightmap triangle index*", typeof(Int16))]
                    public Int16 LightmapTriangleIndex;
                    [Abide.Guerilla.Tags.FieldAttribute("bsp node index*", typeof(Int32))]
                    public Int32 BspNodeIndex;
                    public int Size
                    {
                        get
                        {
                            return 8;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                }
            }
        }
        public enum FlagsOptions
        {
            RenderModelForceThirdPersonBit = 1,
            ForceCarmackReverse = 2,
            ForceNodeMaps = 4,
            GeometryPostprocessed = 8,
        }
    }
}
#pragma warning restore CS1591
