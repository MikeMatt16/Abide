#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Abide.Guerilla.Tags
{
    using Abide.Guerilla.Types;
    using Abide.HaloLibrary;
    using System;
    
    [Abide.Guerilla.Tags.FieldSetAttribute(260, 4)]
    [Abide.Guerilla.Tags.TagGroupAttribute("contrail", 1668247156u, 4294967293u, typeof(ContrailBlock))]
    public sealed class ContrailBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
    {
        [Abide.Guerilla.Tags.FieldAttribute("flags", typeof(Int16))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
        public Int16 Flags;
        [Abide.Guerilla.Tags.FieldAttribute("scale flags#these flags determine which fields are scaled by the contrail density" +
            "", typeof(Int16))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(ScaleFlagsOptions), true)]
        public Int16 ScaleFlags;
        [Abide.Guerilla.Tags.FieldAttribute("point generation rate:points per second#this many points are generated per second" +
            "", typeof(Single))]
        public Single PointGenerationRate;
        [Abide.Guerilla.Tags.FieldAttribute("point velocity cone angle:degrees#initial velocity is inside the cone defined by " +
            "the marker\'s forward vector and this angle", typeof(Single))]
        public Single PointVelocityConeAngle;
        [Abide.Guerilla.Tags.FieldAttribute("inherited velocity fraction#fraction of parent object\'s velocity that is inherite" +
            "d by contrail points.", typeof(Single))]
        public Single InheritedVelocityFraction;
        [Abide.Guerilla.Tags.FieldAttribute("render type#this specifies how the contrail is oriented in space", typeof(Int16))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(RenderTypeOptions), false)]
        public Int16 RenderType;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(2)]
        public Byte[] EmptyString;
        [Abide.Guerilla.Tags.FieldAttribute("texture repeats u#texture repeats per contrail segment", typeof(Single))]
        public Single TextureRepeatsU;
        [Abide.Guerilla.Tags.FieldAttribute("texture repeats v#texture repeats across contrail width", typeof(Single))]
        public Single TextureRepeatsV;
        [Abide.Guerilla.Tags.FieldAttribute("texture animation u:repeats per second#the texture along the contrail is animated" +
            " by this value", typeof(Single))]
        public Single TextureAnimationU;
        [Abide.Guerilla.Tags.FieldAttribute("texture animation v:repeats per second#the texture across the contrail is animate" +
            "d by this value", typeof(Single))]
        public Single TextureAnimationV;
        [Abide.Guerilla.Tags.FieldAttribute("animation rate:frames per second", typeof(Single))]
        public Single AnimationRate;
        [Abide.Guerilla.Tags.FieldAttribute("bitmap", typeof(TagReference))]
        public TagReference Bitmap;
        [Abide.Guerilla.Tags.FieldAttribute("first sequence index", typeof(Int16))]
        public Int16 FirstSequenceIndex;
        [Abide.Guerilla.Tags.FieldAttribute("sequence count", typeof(Int16))]
        public Int16 SequenceCount;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(40)]
        public Byte[] EmptyString2;
        [Abide.Guerilla.Tags.FieldAttribute("shader flags", typeof(Int16))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(ShaderFlagsOptions), true)]
        public Int16 ShaderFlags;
        [Abide.Guerilla.Tags.FieldAttribute("framebuffer blend function", typeof(Int16))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(FramebufferBlendFunctionOptions), false)]
        public Int16 FramebufferBlendFunction;
        [Abide.Guerilla.Tags.FieldAttribute("framebuffer fade mode", typeof(Int16))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(FramebufferFadeModeOptions), false)]
        public Int16 FramebufferFadeMode;
        [Abide.Guerilla.Tags.FieldAttribute("map flags", typeof(Int16))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(MapFlagsOptions), true)]
        public Int16 MapFlags;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(28)]
        public Byte[] EmptyString3;
        [Abide.Guerilla.Tags.FieldAttribute("bitmap", typeof(TagReference))]
        public TagReference Bitmap1;
        [Abide.Guerilla.Tags.FieldAttribute("anchor", typeof(Int16))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(AnchorOptions), false)]
        public Int16 Anchor;
        [Abide.Guerilla.Tags.FieldAttribute("flags", typeof(Int16))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions1), true)]
        public Int16 Flags1;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(2)]
        public Byte[] EmptyString4;
        [Abide.Guerilla.Tags.FieldAttribute("u-animation function", typeof(Int16))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(UAnimationFunctionOptions), false)]
        public Int16 UAnimationFunction;
        [Abide.Guerilla.Tags.FieldAttribute("u-animation period:seconds#0 defaults to 1", typeof(Single))]
        public Single UAnimationPeriod;
        [Abide.Guerilla.Tags.FieldAttribute("u-animation phase", typeof(Single))]
        public Single UAnimationPhase;
        [Abide.Guerilla.Tags.FieldAttribute("u-animation scale:repeats#0 defaults to 1", typeof(Single))]
        public Single UAnimationScale;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(2)]
        public Byte[] EmptyString5;
        [Abide.Guerilla.Tags.FieldAttribute("v-animation function", typeof(Int16))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(VAnimationFunctionOptions), false)]
        public Int16 VAnimationFunction;
        [Abide.Guerilla.Tags.FieldAttribute("v-animation period:seconds#0 defaults to 1", typeof(Single))]
        public Single VAnimationPeriod;
        [Abide.Guerilla.Tags.FieldAttribute("v-animation phase", typeof(Single))]
        public Single VAnimationPhase;
        [Abide.Guerilla.Tags.FieldAttribute("v-animation scale:repeats#0 defaults to 1", typeof(Single))]
        public Single VAnimationScale;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(2)]
        public Byte[] EmptyString6;
        [Abide.Guerilla.Tags.FieldAttribute("rotation-animation function", typeof(Int16))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(RotationAnimationFunctionOptions), false)]
        public Int16 RotationAnimationFunction;
        [Abide.Guerilla.Tags.FieldAttribute("rotation-animation period:seconds#0 defaults to 1", typeof(Single))]
        public Single RotationAnimationPeriod;
        [Abide.Guerilla.Tags.FieldAttribute("rotation-animation phase", typeof(Single))]
        public Single RotationAnimationPhase;
        [Abide.Guerilla.Tags.FieldAttribute("rotation-animation scale:degrees#0 defaults to 360", typeof(Single))]
        public Single RotationAnimationScale;
        [Abide.Guerilla.Tags.FieldAttribute("rotation-animation center", typeof(Vector2))]
        public Vector2 RotationAnimationCenter;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(4)]
        public Byte[] EmptyString7;
        [Abide.Guerilla.Tags.FieldAttribute("zsprite radius scale", typeof(Single))]
        public Single ZspriteRadiusScale;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(20)]
        public Byte[] EmptyString8;
        [Abide.Guerilla.Tags.FieldAttribute("point states", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("contrail_point_states_block", 16, typeof(ContrailPointStatesBlock))]
        public TagBlock PointStates;
        public int Size
        {
            get
            {
                return 260;
            }
        }
        public void Initialize()
        {
        }
        public void Read(System.IO.BinaryReader reader)
        {
        }
        public void Write(System.IO.BinaryWriter writer)
        {
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(72, 4)]
        public sealed class ContrailPointStatesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("physics", typeof(TagReference))]
            public TagReference Physics;
            [Abide.Guerilla.Tags.FieldAttribute("width:world units#contrail width at this point", typeof(Single))]
            public Single Width;
            [Abide.Guerilla.Tags.FieldAttribute("color lower bound#contrail color at this point", typeof(ColorArgbF))]
            public ColorArgbF ColorLowerBound;
            [Abide.Guerilla.Tags.FieldAttribute("color upper bound#contrail color at this point", typeof(ColorArgbF))]
            public ColorArgbF ColorUpperBound;
            [Abide.Guerilla.Tags.FieldAttribute("scale flags#these flags determine which fields are scaled by the contrail density" +
                "", typeof(Int32))]
            [Abide.Guerilla.Tags.OptionsAttribute(typeof(ScaleFlagsOptions), true)]
            public Int32 ScaleFlags;
            public int Size
            {
                get
                {
                    return 72;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            public enum ScaleFlagsOptions
            {
                Duration = 1,
                DurationDelta = 2,
                TransitionDuration = 4,
                TransitionDurationDelta = 8,
                Width = 16,
                Color = 32,
            }
        }
        public enum FlagsOptions
        {
            FirstPointUnfaded = 1,
            LastPointUnfaded = 2,
            PointsStartPinnedToMedia = 4,
            PointsStartPinnedToGround = 8,
            PointsAlwaysPinnedToMedia = 16,
            PointsAlwaysPinnedToGround = 32,
            EdgeEffectFadesSlowly = 64,
            DonttInheritObjectChangeColor = 128,
        }
        public enum ScaleFlagsOptions
        {
            PointGenerationRate = 1,
            PointVelocity = 2,
            PointVelocityDelta = 4,
            PointVelocityConeAngle = 8,
            InheritedVelocityFraction = 16,
            SequenceAnimationRate = 32,
            TextureScaleU = 64,
            TextureScaleV = 128,
            TextureAnimationU = 256,
            TextureAnimationV = 512,
        }
        public enum RenderTypeOptions
        {
            VerticalOrientation = 0,
            HorizontalOrientation = 1,
            MediaMapped = 2,
            GroundMapped = 3,
            ViewerFacing = 4,
            DoubleMarkerLinked = 5,
        }
        public enum ShaderFlagsOptions
        {
            SortBias = 1,
            NonlinearTint = 2,
            DontOverdrawFpWeapon = 4,
        }
        public enum FramebufferBlendFunctionOptions
        {
            AlphaBlend = 0,
            Multiply = 1,
            DoubleMultiply = 2,
            Add = 3,
            Subtract = 4,
            ComponentMin = 5,
            ComponentMax = 6,
            AlphaMultiplyAdd = 7,
            ConstantColorBlend = 8,
            InverseConstantColorBlend = 9,
            None = 10,
        }
        public enum FramebufferFadeModeOptions
        {
            None = 0,
            FadeWhenPerpendicular = 1,
            FadeWhenParallel = 2,
        }
        public enum MapFlagsOptions
        {
            Unfiltered = 1,
        }
        public enum AnchorOptions
        {
            WithPrimary = 0,
            WithScreenSpace = 1,
            Zsprite = 2,
        }
        public enum FlagsOptions1
        {
            Unfiltered = 1,
        }
        public enum UAnimationFunctionOptions
        {
            One = 0,
            Zero = 1,
            Cosine = 2,
            CosineVariablePeriod = 3,
            DiagonalWave = 4,
            DiagonalWaveVariablePeriod = 5,
            Slide = 6,
            SlideVariablePeriod = 7,
            Noise = 8,
            Jitter = 9,
            Wander = 10,
            Spark = 11,
        }
        public enum VAnimationFunctionOptions
        {
            One = 0,
            Zero = 1,
            Cosine = 2,
            CosineVariablePeriod = 3,
            DiagonalWave = 4,
            DiagonalWaveVariablePeriod = 5,
            Slide = 6,
            SlideVariablePeriod = 7,
            Noise = 8,
            Jitter = 9,
            Wander = 10,
            Spark = 11,
        }
        public enum RotationAnimationFunctionOptions
        {
            One = 0,
            Zero = 1,
            Cosine = 2,
            CosineVariablePeriod = 3,
            DiagonalWave = 4,
            DiagonalWaveVariablePeriod = 5,
            Slide = 6,
            SlideVariablePeriod = 7,
            Noise = 8,
            Jitter = 9,
            Wander = 10,
            Spark = 11,
        }
    }
}
#pragma warning restore CS1591
