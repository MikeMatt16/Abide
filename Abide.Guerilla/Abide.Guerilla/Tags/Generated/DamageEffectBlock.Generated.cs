#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Abide.Guerilla.Tags
{
    using Abide.Guerilla.Types;
    using Abide.HaloLibrary;
    using System;
    
    [Abide.Guerilla.Tags.FieldSetAttribute(212, 4)]
    [Abide.Guerilla.Tags.TagGroupAttribute("damage_effect", 1785754657u, 4294967293u, typeof(DamageEffectBlock))]
    public sealed class DamageEffectBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
    {
        [Abide.Guerilla.Tags.FieldAttribute("cutoff scale:[0,1]", typeof(Single))]
        public Single CutoffScale;
        [Abide.Guerilla.Tags.FieldAttribute("flags", typeof(Int32))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
        public Int32 Flags;
        [Abide.Guerilla.Tags.FieldAttribute("side effect", typeof(Int16))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(SideEffectOptions), false)]
        public Int16 SideEffect;
        [Abide.Guerilla.Tags.FieldAttribute("category", typeof(Int16))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(CategoryOptions), false)]
        public Int16 Category;
        [Abide.Guerilla.Tags.FieldAttribute("flags", typeof(Int32))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions1), true)]
        public Int32 Flags1;
        [Abide.Guerilla.Tags.FieldAttribute("AOE core radius:world units#if this is area of effect damage", typeof(Single))]
        public Single AoeCoreRadius;
        [Abide.Guerilla.Tags.FieldAttribute("damage lower bound", typeof(Single))]
        public Single DamageLowerBound;
        [Abide.Guerilla.Tags.FieldAttribute("dmg inner cone angle", typeof(Single))]
        public Single DmgInnerConeAngle;
        [Abide.Guerilla.Tags.FieldAttribute("blah", typeof(DamageOuterConeAngleStructBlock))]
        public DamageOuterConeAngleStructBlock Blah;
        [Abide.Guerilla.Tags.FieldAttribute("active camouflage damage:[0,1]#how much more visible this damage makes a player w" +
            "ho is active camouflaged", typeof(Single))]
        public Single ActiveCamouflageDamage;
        [Abide.Guerilla.Tags.FieldAttribute("stun:[0,1]#amount of stun added to damaged unit", typeof(Single))]
        public Single Stun;
        [Abide.Guerilla.Tags.FieldAttribute("maximum stun:[0,1]#damaged unit\'s stun will never exceed this amount", typeof(Single))]
        public Single MaximumStun;
        [Abide.Guerilla.Tags.FieldAttribute("stun time:seconds#duration of stun due to this damage", typeof(Single))]
        public Single StunTime;
        [Abide.Guerilla.Tags.FieldAttribute("instantaneous acceleration:[0,+inf]", typeof(Single))]
        public Single InstantaneousAcceleration;
        [Abide.Guerilla.Tags.FieldAttribute("rider direct damage scale", typeof(Single))]
        public Single RiderDirectDamageScale;
        [Abide.Guerilla.Tags.FieldAttribute("rider maximum transfer damage scale", typeof(Single))]
        public Single RiderMaximumTransferDamageScale;
        [Abide.Guerilla.Tags.FieldAttribute("rider minimum transfer damage scale", typeof(Single))]
        public Single RiderMinimumTransferDamageScale;
        [Abide.Guerilla.Tags.FieldAttribute("general_damage", typeof(StringId))]
        public StringId GeneralDamage;
        [Abide.Guerilla.Tags.FieldAttribute("specific_damage", typeof(StringId))]
        public StringId SpecificDamage;
        [Abide.Guerilla.Tags.FieldAttribute("AI stun radius:world units", typeof(Single))]
        public Single AiStunRadius;
        [Abide.Guerilla.Tags.FieldAttribute("shake radius", typeof(Single))]
        public Single ShakeRadius;
        [Abide.Guerilla.Tags.FieldAttribute("EMP radius", typeof(Single))]
        public Single EmpRadius;
        [Abide.Guerilla.Tags.FieldAttribute("player responses", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("damage_effect_player_response_block", 2, typeof(DamageEffectPlayerResponseBlock))]
        public TagBlock PlayerResponses;
        [Abide.Guerilla.Tags.FieldAttribute("duration:seconds", typeof(Single))]
        public Single Duration;
        [Abide.Guerilla.Tags.FieldAttribute("fade function", typeof(Int16))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(FadeFunctionOptions), false)]
        public Int16 FadeFunction;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(2)]
        public Byte[] EmptyString4;
        [Abide.Guerilla.Tags.FieldAttribute("rotation:degrees", typeof(Single))]
        public Single Rotation;
        [Abide.Guerilla.Tags.FieldAttribute("pushback:world units", typeof(Single))]
        public Single Pushback;
        [Abide.Guerilla.Tags.FieldAttribute("duration:seconds#the effect will last for this duration.", typeof(Single))]
        public Single Duration1;
        [Abide.Guerilla.Tags.FieldAttribute("falloff function#a function to envelope the effect\'s magnitude over time", typeof(Int16))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(FalloffFunctionOptions), false)]
        public Int16 FalloffFunction;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(2)]
        public Byte[] EmptyString7;
        [Abide.Guerilla.Tags.FieldAttribute("random translation:world units#random translation in all directions", typeof(Single))]
        public Single RandomTranslation;
        [Abide.Guerilla.Tags.FieldAttribute("random rotation:degrees#random rotation in all directions", typeof(Single))]
        public Single RandomRotation;
        [Abide.Guerilla.Tags.FieldAttribute("wobble function#a function to perturb the effect\'s behavior over time", typeof(Int16))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(WobbleFunctionOptions), false)]
        public Int16 WobbleFunction;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(2)]
        public Byte[] EmptyString9;
        [Abide.Guerilla.Tags.FieldAttribute("wobble function period:seconds", typeof(Single))]
        public Single WobbleFunctionPeriod;
        [Abide.Guerilla.Tags.FieldAttribute("wobble weight#a value of 0.0 signifies that the wobble function has no effect; a " +
            "value of 1.0 signifies that the effect will not be felt when the wobble function" +
            "\'s value is zero.", typeof(Single))]
        public Single WobbleWeight;
        [Abide.Guerilla.Tags.FieldAttribute("sound", typeof(TagReference))]
        public TagReference Sound1;
        [Abide.Guerilla.Tags.FieldAttribute("forward velocity:world units per second", typeof(Single))]
        public Single ForwardVelocity;
        [Abide.Guerilla.Tags.FieldAttribute("forward radius:world units", typeof(Single))]
        public Single ForwardRadius;
        [Abide.Guerilla.Tags.FieldAttribute("forward exponent", typeof(Single))]
        public Single ForwardExponent;
        [Abide.Guerilla.Tags.FieldAttribute("outward velocity:world units per second", typeof(Single))]
        public Single OutwardVelocity;
        [Abide.Guerilla.Tags.FieldAttribute("outward radius:world units", typeof(Single))]
        public Single OutwardRadius;
        [Abide.Guerilla.Tags.FieldAttribute("outward exponent", typeof(Single))]
        public Single OutwardExponent;
        public int Size
        {
            get
            {
                return 212;
            }
        }
        public void Initialize()
        {
        }
        public void Read(System.IO.BinaryReader reader)
        {
        }
        public void Write(System.IO.BinaryWriter writer)
        {
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(88, 4)]
        public sealed class DamageEffectPlayerResponseBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("response type", typeof(Int16))]
            [Abide.Guerilla.Tags.OptionsAttribute(typeof(ResponseTypeOptions), false)]
            public Int16 ResponseType;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(2)]
            public Byte[] EmptyString;
            [Abide.Guerilla.Tags.FieldAttribute("screen flash*", typeof(ScreenFlashDefinitionStructBlock))]
            public ScreenFlashDefinitionStructBlock ScreenFlash1;
            [Abide.Guerilla.Tags.FieldAttribute("vibration*", typeof(VibrationDefinitionStructBlock))]
            public VibrationDefinitionStructBlock Vibration1;
            [Abide.Guerilla.Tags.FieldAttribute("sound effect", typeof(DamageEffectSoundEffectDefinitionBlock))]
            public DamageEffectSoundEffectDefinitionBlock SoundEffect1;
            public int Size
            {
                get
                {
                    return 88;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(32, 4)]
            public sealed class ScreenFlashDefinitionStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("type", typeof(Int16))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(TypeOptions), false)]
                public Int16 Type;
                [Abide.Guerilla.Tags.FieldAttribute("priority", typeof(Int16))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(PriorityOptions), false)]
                public Int16 Priority;
                [Abide.Guerilla.Tags.FieldAttribute("duration:seconds", typeof(Single))]
                public Single Duration;
                [Abide.Guerilla.Tags.FieldAttribute("fade function", typeof(Int16))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(FadeFunctionOptions), false)]
                public Int16 FadeFunction;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(2)]
                public Byte[] EmptyString1;
                [Abide.Guerilla.Tags.FieldAttribute("maximum intensity:[0,1]", typeof(Single))]
                public Single MaximumIntensity;
                [Abide.Guerilla.Tags.FieldAttribute("color", typeof(ColorArgbF))]
                public ColorArgbF Color;
                public int Size
                {
                    get
                    {
                        return 32;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                public enum TypeOptions
                {
                    None = 0,
                    Lighten = 1,
                    Darken = 2,
                    Max = 3,
                    Min = 4,
                    Invert = 5,
                    Tint = 6,
                }
                public enum PriorityOptions
                {
                    Low = 0,
                    Medium = 1,
                    High = 2,
                }
                public enum FadeFunctionOptions
                {
                    Linear = 0,
                    Late = 1,
                    VeryLate = 2,
                    Early = 3,
                    VeryEarly = 4,
                    Cosine = 5,
                    Zero = 6,
                    One = 7,
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(32, 4)]
            public sealed class VibrationDefinitionStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("low frequency vibration", typeof(VibrationFrequencyDefinitionStructBlock))]
                public VibrationFrequencyDefinitionStructBlock LowFrequencyVibration1;
                [Abide.Guerilla.Tags.FieldAttribute("high frequency vibration", typeof(VibrationFrequencyDefinitionStructBlock))]
                public VibrationFrequencyDefinitionStructBlock HighFrequencyVibration1;
                public int Size
                {
                    get
                    {
                        return 32;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(16, 4)]
                public sealed class VibrationFrequencyDefinitionStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("duration:seconds", typeof(Single))]
                    public Single Duration;
                    [Abide.Guerilla.Tags.FieldAttribute("dirty whore", typeof(MappingFunctionBlock))]
                    public MappingFunctionBlock DirtyWhore;
                    public int Size
                    {
                        get
                        {
                            return 16;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(12, 4)]
                    public sealed class MappingFunctionBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("data", typeof(TagBlock))]
                        [Abide.Guerilla.Tags.BlockAttribute("byte_block", 1024, typeof(ByteBlock))]
                        public TagBlock Data;
                        public int Size
                        {
                            get
                            {
                                return 12;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                        [Abide.Guerilla.Tags.FieldSetAttribute(1, 4)]
                        public sealed class ByteBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("Value", typeof(Byte))]
                            public Byte Value;
                            public int Size
                            {
                                get
                                {
                                    return 1;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                        }
                    }
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(20, 4)]
            public sealed class DamageEffectSoundEffectDefinitionBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("effect name", typeof(StringId))]
                public StringId EffectName;
                [Abide.Guerilla.Tags.FieldAttribute("duration:seconds", typeof(Single))]
                public Single Duration;
                [Abide.Guerilla.Tags.FieldAttribute("effect scale function", typeof(MappingFunctionBlock))]
                public MappingFunctionBlock EffectScaleFunction1;
                public int Size
                {
                    get
                    {
                        return 20;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(12, 4)]
                public sealed class MappingFunctionBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("data", typeof(TagBlock))]
                    [Abide.Guerilla.Tags.BlockAttribute("byte_block", 1024, typeof(ByteBlock))]
                    public TagBlock Data;
                    public int Size
                    {
                        get
                        {
                            return 12;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(1, 4)]
                    public sealed class ByteBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Value", typeof(Byte))]
                        public Byte Value;
                        public int Size
                        {
                            get
                            {
                                return 1;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                }
            }
            public enum ResponseTypeOptions
            {
                Shielded = 0,
                Unshielded = 1,
                All = 2,
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(4, 4)]
        public sealed class DamageOuterConeAngleStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("dmg outer cone angle", typeof(Single))]
            public Single DmgOuterConeAngle;
            public int Size
            {
                get
                {
                    return 4;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
        }
        public enum FlagsOptions
        {
            DontScaleDamageByDistance = 1,
            AreaDamagePlayersOnly = 2,
        }
        public enum SideEffectOptions
        {
            None = 0,
            Harmless = 1,
            LethalToTheUnsuspecting = 2,
            Emp = 3,
        }
        public enum CategoryOptions
        {
            None = 0,
            Falling = 1,
            Bullet = 2,
            Grenade = 3,
            HighExplosive = 4,
            Sniper = 5,
            Melee = 6,
            Flame = 7,
            MountedWeapon = 8,
            Vehicle = 9,
            Plasma = 10,
            Needle = 11,
            Shotgun = 12,
        }
        public enum FlagsOptions1
        {
            DoesNotHurtOwner = 1,
            CanCauseHeadshots = 2,
            PingsResistantUnits = 4,
            DoesNotHurtFriends = 8,
            DoesNotPingUnits = 16,
            DetonatesExplosives = 32,
            OnlyHurtsShields = 64,
            CausesFlamingDeath = 128,
            DamageIndicatorsAlwaysPointDown = 256,
            SkipsShields = 512,
            OnlyHurtsOneInfectionForm = 1024,
            ObsoleteWasCanCauseMultiplayerHeadshots = 2048,
            InfectionFormPop = 4096,
            IgnoreSeatScaleForDirDmg = 8192,
            ForcesHardPing = 16384,
            DoesNotHurtPlayers = 32768,
        }
        public enum FadeFunctionOptions
        {
            Linear = 0,
            Late = 1,
            VeryLate = 2,
            Early = 3,
            VeryEarly = 4,
            Cosine = 5,
            Zero = 6,
            One = 7,
        }
        public enum FalloffFunctionOptions
        {
            Linear = 0,
            Late = 1,
            VeryLate = 2,
            Early = 3,
            VeryEarly = 4,
            Cosine = 5,
            Zero = 6,
            One = 7,
        }
        public enum WobbleFunctionOptions
        {
            One = 0,
            Zero = 1,
            Cosine = 2,
            CosineVariablePeriod = 3,
            DiagonalWave = 4,
            DiagonalWaveVariablePeriod = 5,
            Slide = 6,
            SlideVariablePeriod = 7,
            Noise = 8,
            Jitter = 9,
            Wander = 10,
            Spark = 11,
        }
    }
}
#pragma warning restore CS1591
