#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Abide.Guerilla.Tags
{
    using Abide.Guerilla.Types;
    using Abide.HaloLibrary;
    using System;
    using System.IO;
    
    [FieldSetAttribute(40, 4)]
    [TagGroupAttribute("sound_effect_template", 1013348414u, 4294967293u, typeof(SoundEffectTemplateBlock))]
    public sealed class SoundEffectTemplateBlock : AbideTagBlock
    {
        private TagBlockList<SoundEffectTemplatesBlock> templateCollectionList = new TagBlockList<SoundEffectTemplatesBlock>(8);
        private TagBlockList<SoundEffectTemplateAdditionalSoundInputBlock> additionalSoundInputsList = new TagBlockList<SoundEffectTemplateAdditionalSoundInputBlock>(1);
        private TagBlockList<PlatformSoundEffectTemplateCollectionBlock> emptyStringList = new TagBlockList<PlatformSoundEffectTemplateCollectionBlock>(1);
        [FieldAttribute("template collection", typeof(TagBlock))]
        [BlockAttribute("sound_effect_templates_block", 8, typeof(SoundEffectTemplatesBlock))]
        public TagBlock TemplateCollection;
        [FieldAttribute("input effect name", typeof(StringId))]
        public StringId InputEffectName;
        [FieldAttribute("additional sound inputs", typeof(TagBlock))]
        [BlockAttribute("sound_effect_template_additional_sound_input_block", 1, typeof(SoundEffectTemplateAdditionalSoundInputBlock))]
        public TagBlock AdditionalSoundInputs;
        [FieldAttribute("", typeof(TagBlock))]
        [BlockAttribute("platform_sound_effect_template_collection_block", 1, typeof(PlatformSoundEffectTemplateCollectionBlock))]
        public TagBlock EmptyString;
        public TagBlockList<SoundEffectTemplatesBlock> TemplateCollectionList
        {
            get
            {
                return this.templateCollectionList;
            }
        }
        public TagBlockList<SoundEffectTemplateAdditionalSoundInputBlock> AdditionalSoundInputsList
        {
            get
            {
                return this.additionalSoundInputsList;
            }
        }
        public TagBlockList<PlatformSoundEffectTemplateCollectionBlock> EmptyStringList
        {
            get
            {
                return this.emptyStringList;
            }
        }
        public override int Size
        {
            get
            {
                return 40;
            }
        }
        public override void Initialize()
        {
            this.templateCollectionList.Clear();
            this.additionalSoundInputsList.Clear();
            this.emptyStringList.Clear();
            this.TemplateCollection = TagBlock.Zero;
            this.InputEffectName = StringId.Zero;
            this.AdditionalSoundInputs = TagBlock.Zero;
            this.EmptyString = TagBlock.Zero;
        }
        public override void Read(BinaryReader reader)
        {
            this.TemplateCollection = reader.ReadInt64();
            this.templateCollectionList.Read(reader, this.TemplateCollection);
            this.InputEffectName = reader.ReadInt32();
            this.AdditionalSoundInputs = reader.ReadInt64();
            this.additionalSoundInputsList.Read(reader, this.AdditionalSoundInputs);
            this.EmptyString = reader.ReadInt64();
            this.emptyStringList.Read(reader, this.EmptyString);
        }
        public override void Write(BinaryWriter writer)
        {
        }
        [FieldSetAttribute(44, 4)]
        public sealed class SoundEffectTemplatesBlock : AbideTagBlock
        {
            private DataList explanationList = new DataList(65536);
            private TagBlockList<SoundEffectTemplateParameterBlock> parametersList = new TagBlockList<SoundEffectTemplateParameterBlock>(128);
            [FieldAttribute("dsp effect", typeof(StringId))]
            public StringId DspEffect;
            [FieldAttribute("explanation", typeof(TagBlock))]
            [DataAttribute(65536)]
            public TagBlock Explanation;
            [FieldAttribute("flags", typeof(FlagsOptions))]
            [OptionsAttribute(typeof(FlagsOptions), true)]
            public FlagsOptions Flags;
            [FieldAttribute("", typeof(Int16))]
            public Int16 EmptyString;
            [FieldAttribute("", typeof(Int16))]
            public Int16 EmptyString1;
            [FieldAttribute("parameters", typeof(TagBlock))]
            [BlockAttribute("sound_effect_template_parameter_block", 128, typeof(SoundEffectTemplateParameterBlock))]
            public TagBlock Parameters;
            public DataList ExplanationList
            {
                get
                {
                    return this.explanationList;
                }
            }
            public TagBlockList<SoundEffectTemplateParameterBlock> ParametersList
            {
                get
                {
                    return this.parametersList;
                }
            }
            public override int Size
            {
                get
                {
                    return 44;
                }
            }
            public override void Initialize()
            {
                this.explanationList.Clear();
                this.parametersList.Clear();
                this.DspEffect = StringId.Zero;
                this.Explanation = TagBlock.Zero;
                this.Flags = ((FlagsOptions)(0));
                this.EmptyString = 0;
                this.EmptyString1 = 0;
                this.Parameters = TagBlock.Zero;
            }
            public override void Read(BinaryReader reader)
            {
                this.DspEffect = reader.ReadInt32();
                this.Explanation = reader.ReadInt64();
                this.Flags = ((FlagsOptions)(reader.ReadInt32()));
                this.EmptyString = reader.ReadInt16();
                this.EmptyString1 = reader.ReadInt16();
                this.Parameters = reader.ReadInt64();
                this.parametersList.Read(reader, this.Parameters);
            }
            public override void Write(BinaryWriter writer)
            {
            }
            [FieldSetAttribute(40, 4)]
            public sealed class SoundEffectTemplateParameterBlock : AbideTagBlock
            {
                [FieldAttribute("name", typeof(StringId))]
                public StringId Name;
                [FieldAttribute("type", typeof(TypeOptions))]
                [OptionsAttribute(typeof(TypeOptions), false)]
                public TypeOptions Type;
                [FieldAttribute("flags", typeof(FlagsOptions))]
                [OptionsAttribute(typeof(FlagsOptions), true)]
                public FlagsOptions Flags;
                [FieldAttribute("hardware offset", typeof(Int32))]
                public Int32 HardwareOffset;
                [FieldAttribute("default enum integer value", typeof(Int32))]
                public Int32 DefaultEnumIntegerValue;
                [FieldAttribute("default scalar value", typeof(Single))]
                public Single DefaultScalarValue;
                [FieldAttribute("default function", typeof(MappingFunctionBlock))]
                public MappingFunctionBlock DefaultFunction;
                [FieldAttribute("minimum scalar value", typeof(Single))]
                public Single MinimumScalarValue;
                [FieldAttribute("maximum scalar value", typeof(Single))]
                public Single MaximumScalarValue;
                public override int Size
                {
                    get
                    {
                        return 40;
                    }
                }
                public override void Initialize()
                {
                    this.Name = StringId.Zero;
                    this.Type = ((TypeOptions)(0));
                    this.Flags = ((FlagsOptions)(0));
                    this.HardwareOffset = 0;
                    this.DefaultEnumIntegerValue = 0;
                    this.DefaultScalarValue = 0;
                    this.DefaultFunction = new MappingFunctionBlock();
                    this.MinimumScalarValue = 0;
                    this.MaximumScalarValue = 0;
                }
                public override void Read(BinaryReader reader)
                {
                    this.Name = reader.ReadInt32();
                    this.Type = ((TypeOptions)(reader.ReadInt16()));
                    this.Flags = ((FlagsOptions)(reader.ReadInt16()));
                    this.HardwareOffset = reader.ReadInt32();
                    this.DefaultEnumIntegerValue = reader.ReadInt32();
                    this.DefaultScalarValue = reader.ReadSingle();
                    this.DefaultFunction = reader.ReadDataStructure<MappingFunctionBlock>();
                    this.MinimumScalarValue = reader.ReadSingle();
                    this.MaximumScalarValue = reader.ReadSingle();
                }
                public override void Write(BinaryWriter writer)
                {
                }
                [FieldSetAttribute(12, 4)]
                public sealed class MappingFunctionBlock : AbideTagBlock
                {
                    private TagBlockList<ByteBlock> dataList = new TagBlockList<ByteBlock>(1024);
                    [FieldAttribute("data", typeof(TagBlock))]
                    [BlockAttribute("byte_block", 1024, typeof(ByteBlock))]
                    public TagBlock Data;
                    public TagBlockList<ByteBlock> DataList
                    {
                        get
                        {
                            return this.dataList;
                        }
                    }
                    public override int Size
                    {
                        get
                        {
                            return 12;
                        }
                    }
                    public override void Initialize()
                    {
                        this.dataList.Clear();
                        this.Data = TagBlock.Zero;
                    }
                    public override void Read(BinaryReader reader)
                    {
                        this.Data = reader.ReadInt64();
                        this.dataList.Read(reader, this.Data);
                    }
                    public override void Write(BinaryWriter writer)
                    {
                    }
                    [FieldSetAttribute(1, 4)]
                    public sealed class ByteBlock : AbideTagBlock
                    {
                        [FieldAttribute("Value", typeof(Byte))]
                        public Byte Value;
                        public override int Size
                        {
                            get
                            {
                                return 1;
                            }
                        }
                        public override void Initialize()
                        {
                            this.Value = 0;
                        }
                        public override void Read(BinaryReader reader)
                        {
                            this.Value = reader.ReadByte();
                        }
                        public override void Write(BinaryWriter writer)
                        {
                        }
                    }
                }
                public enum TypeOptions : Int16
                {
                    Integer = 0,
                    Real = 1,
                    FilterType = 2,
                }
                public enum FlagsOptions : Int16
                {
                    ExposeAsFunction = 1,
                }
            }
            public enum FlagsOptions : Int32
            {
                UseHighLevelParameters = 1,
                CustomParameters = 2,
            }
        }
        [FieldSetAttribute(20, 4)]
        public sealed class SoundEffectTemplateAdditionalSoundInputBlock : AbideTagBlock
        {
            [FieldAttribute("dsp effect", typeof(StringId))]
            public StringId DspEffect;
            [FieldAttribute("low frequency sound", typeof(MappingFunctionBlock))]
            public MappingFunctionBlock LowFrequencySound;
            [FieldAttribute("time period: seconds", typeof(Single))]
            public Single TimePeriod;
            public override int Size
            {
                get
                {
                    return 20;
                }
            }
            public override void Initialize()
            {
                this.DspEffect = StringId.Zero;
                this.LowFrequencySound = new MappingFunctionBlock();
                this.TimePeriod = 0;
            }
            public override void Read(BinaryReader reader)
            {
                this.DspEffect = reader.ReadInt32();
                this.LowFrequencySound = reader.ReadDataStructure<MappingFunctionBlock>();
                this.TimePeriod = reader.ReadSingle();
            }
            public override void Write(BinaryWriter writer)
            {
            }
            [FieldSetAttribute(12, 4)]
            public sealed class MappingFunctionBlock : AbideTagBlock
            {
                private TagBlockList<ByteBlock> dataList = new TagBlockList<ByteBlock>(1024);
                [FieldAttribute("data", typeof(TagBlock))]
                [BlockAttribute("byte_block", 1024, typeof(ByteBlock))]
                public TagBlock Data;
                public TagBlockList<ByteBlock> DataList
                {
                    get
                    {
                        return this.dataList;
                    }
                }
                public override int Size
                {
                    get
                    {
                        return 12;
                    }
                }
                public override void Initialize()
                {
                    this.dataList.Clear();
                    this.Data = TagBlock.Zero;
                }
                public override void Read(BinaryReader reader)
                {
                    this.Data = reader.ReadInt64();
                    this.dataList.Read(reader, this.Data);
                }
                public override void Write(BinaryWriter writer)
                {
                }
                [FieldSetAttribute(1, 4)]
                public sealed class ByteBlock : AbideTagBlock
                {
                    [FieldAttribute("Value", typeof(Byte))]
                    public Byte Value;
                    public override int Size
                    {
                        get
                        {
                            return 1;
                        }
                    }
                    public override void Initialize()
                    {
                        this.Value = 0;
                    }
                    public override void Read(BinaryReader reader)
                    {
                        this.Value = reader.ReadByte();
                    }
                    public override void Write(BinaryWriter writer)
                    {
                    }
                }
            }
        }
        [FieldSetAttribute(16, 4)]
        public sealed class PlatformSoundEffectTemplateCollectionBlock : AbideTagBlock
        {
            private TagBlockList<PlatformSoundEffectTemplateBlock> platformEffectTemplatesList = new TagBlockList<PlatformSoundEffectTemplateBlock>(8);
            [FieldAttribute("platform effect templates", typeof(TagBlock))]
            [BlockAttribute("platform_sound_effect_template_block", 8, typeof(PlatformSoundEffectTemplateBlock))]
            public TagBlock PlatformEffectTemplates;
            [FieldAttribute("input dsp effect name", typeof(StringId))]
            public StringId InputDspEffectName;
            public TagBlockList<PlatformSoundEffectTemplateBlock> PlatformEffectTemplatesList
            {
                get
                {
                    return this.platformEffectTemplatesList;
                }
            }
            public override int Size
            {
                get
                {
                    return 16;
                }
            }
            public override void Initialize()
            {
                this.platformEffectTemplatesList.Clear();
                this.PlatformEffectTemplates = TagBlock.Zero;
                this.InputDspEffectName = StringId.Zero;
            }
            public override void Read(BinaryReader reader)
            {
                this.PlatformEffectTemplates = reader.ReadInt64();
                this.platformEffectTemplatesList.Read(reader, this.PlatformEffectTemplates);
                this.InputDspEffectName = reader.ReadInt32();
            }
            public override void Write(BinaryWriter writer)
            {
            }
            [FieldSetAttribute(28, 4)]
            public sealed class PlatformSoundEffectTemplateBlock : AbideTagBlock
            {
                private TagBlockList<PlatformSoundEffectTemplateComponentBlock> componentsList = new TagBlockList<PlatformSoundEffectTemplateComponentBlock>(16);
                [FieldAttribute("input dsp effect name", typeof(StringId))]
                public StringId InputDspEffectName;
                [FieldAttribute("", typeof(Byte[]))]
                [PaddingAttribute(12)]
                public Byte[] EmptyString;
                [FieldAttribute("components", typeof(TagBlock))]
                [BlockAttribute("platform_sound_effect_template_component_block", 16, typeof(PlatformSoundEffectTemplateComponentBlock))]
                public TagBlock Components;
                public TagBlockList<PlatformSoundEffectTemplateComponentBlock> ComponentsList
                {
                    get
                    {
                        return this.componentsList;
                    }
                }
                public override int Size
                {
                    get
                    {
                        return 28;
                    }
                }
                public override void Initialize()
                {
                    this.componentsList.Clear();
                    this.InputDspEffectName = StringId.Zero;
                    this.EmptyString = new byte[12];
                    this.Components = TagBlock.Zero;
                }
                public override void Read(BinaryReader reader)
                {
                    this.InputDspEffectName = reader.ReadInt32();
                    this.EmptyString = reader.ReadBytes(12);
                    this.Components = reader.ReadInt64();
                    this.componentsList.Read(reader, this.Components);
                }
                public override void Write(BinaryWriter writer)
                {
                }
                [FieldSetAttribute(16, 4)]
                public sealed class PlatformSoundEffectTemplateComponentBlock : AbideTagBlock
                {
                    [FieldAttribute("value type", typeof(ValueTypeOptions))]
                    [OptionsAttribute(typeof(ValueTypeOptions), false)]
                    public ValueTypeOptions ValueType;
                    [FieldAttribute("default value", typeof(Single))]
                    public Single DefaultValue;
                    [FieldAttribute("minimum value", typeof(Single))]
                    public Single MinimumValue;
                    [FieldAttribute("maximum value", typeof(Single))]
                    public Single MaximumValue;
                    public override int Size
                    {
                        get
                        {
                            return 16;
                        }
                    }
                    public override void Initialize()
                    {
                        this.ValueType = ((ValueTypeOptions)(0));
                        this.DefaultValue = 0;
                        this.MinimumValue = 0;
                        this.MaximumValue = 0;
                    }
                    public override void Read(BinaryReader reader)
                    {
                        this.ValueType = ((ValueTypeOptions)(reader.ReadInt32()));
                        this.DefaultValue = reader.ReadSingle();
                        this.MinimumValue = reader.ReadSingle();
                        this.MaximumValue = reader.ReadSingle();
                    }
                    public override void Write(BinaryWriter writer)
                    {
                    }
                    public enum ValueTypeOptions : Int32
                    {
                        Zero = 0,
                        Time = 1,
                        Scale = 2,
                        Rolloff = 3,
                    }
                }
            }
        }
    }
}
#pragma warning restore CS1591
