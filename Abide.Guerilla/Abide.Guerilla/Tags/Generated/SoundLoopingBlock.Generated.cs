#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Abide.Guerilla.Tags
{
    using Abide.Guerilla.Types;
    using Abide.HaloLibrary;
    using System;
    
    [Abide.Guerilla.Tags.FieldSetAttribute(60, 4)]
    [Abide.Guerilla.Tags.TagGroupAttribute("sound_looping", 1819504228u, 4294967293u, typeof(SoundLoopingBlock))]
    public sealed class SoundLoopingBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
    {
        [Abide.Guerilla.Tags.FieldAttribute("flags", typeof(Int32))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
        public Int32 Flags;
        [Abide.Guerilla.Tags.FieldAttribute("marty\'s music time: seconds", typeof(Single))]
        public Single MartysMusicTime;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Single))]
        public Single EmptyString;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(8)]
        public Byte[] EmptyString1;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(TagReference))]
        public TagReference EmptyString2;
        [Abide.Guerilla.Tags.FieldAttribute("tracks#tracks play in parallel and loop continuously for the duration of the loop" +
            "ing sound.", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("looping_sound_track_block", 3, typeof(LoopingSoundTrackBlock))]
        public TagBlock Tracks;
        [Abide.Guerilla.Tags.FieldAttribute("detail sounds#detail sounds play at random throughout the duration of the looping" +
            " sound.", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("looping_sound_detail_block", 12, typeof(LoopingSoundDetailBlock))]
        public TagBlock DetailSounds;
        public int Size
        {
            get
            {
                return 60;
            }
        }
        public void Initialize()
        {
        }
        public void Read(System.IO.BinaryReader reader)
        {
        }
        public void Write(System.IO.BinaryWriter writer)
        {
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(144, 4)]
        public sealed class LoopingSoundTrackBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("name^", typeof(StringId))]
            public StringId Name;
            [Abide.Guerilla.Tags.FieldAttribute("flags", typeof(Int32))]
            [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
            public Int32 Flags;
            [Abide.Guerilla.Tags.FieldAttribute("gain:dB", typeof(Single))]
            public Single Gain;
            [Abide.Guerilla.Tags.FieldAttribute("fade in duration:seconds", typeof(Single))]
            public Single FadeInDuration;
            [Abide.Guerilla.Tags.FieldAttribute("fade out duration:seconds", typeof(Single))]
            public Single FadeOutDuration;
            [Abide.Guerilla.Tags.FieldAttribute("in", typeof(TagReference))]
            public TagReference In;
            [Abide.Guerilla.Tags.FieldAttribute("loop", typeof(TagReference))]
            public TagReference Loop;
            [Abide.Guerilla.Tags.FieldAttribute("out", typeof(TagReference))]
            public TagReference Out;
            [Abide.Guerilla.Tags.FieldAttribute("alt loop", typeof(TagReference))]
            public TagReference AltLoop;
            [Abide.Guerilla.Tags.FieldAttribute("alt out", typeof(TagReference))]
            public TagReference AltOut;
            [Abide.Guerilla.Tags.FieldAttribute("output effect", typeof(Int16))]
            [Abide.Guerilla.Tags.OptionsAttribute(typeof(OutputEffectOptions), false)]
            public Int16 OutputEffect;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(2)]
            public Byte[] EmptyString1;
            [Abide.Guerilla.Tags.FieldAttribute("alt trans in", typeof(TagReference))]
            public TagReference AltTransIn;
            [Abide.Guerilla.Tags.FieldAttribute("alt trans out", typeof(TagReference))]
            public TagReference AltTransOut;
            [Abide.Guerilla.Tags.FieldAttribute("alt crossfade duration:seconds", typeof(Single))]
            public Single AltCrossfadeDuration;
            [Abide.Guerilla.Tags.FieldAttribute("alt fade out duration:seconds", typeof(Single))]
            public Single AltFadeOutDuration;
            public int Size
            {
                get
                {
                    return 144;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            public enum FlagsOptions
            {
                FadeInAtStart = 1,
                FadeOutAtStop = 2,
                CrossfadeAltLoop = 4,
                MasterSurroundSoundTrack = 8,
                FadeOutAtAltStop = 16,
            }
            public enum OutputEffectOptions
            {
                None = 0,
                OutputFrontSpeakers = 1,
                OutputRearSpeakers = 2,
                OutputCenterSpeakers = 3,
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(60, 4)]
        public sealed class LoopingSoundDetailBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("name^", typeof(StringId))]
            public StringId Name;
            [Abide.Guerilla.Tags.FieldAttribute("sound", typeof(TagReference))]
            public TagReference Sound;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Single))]
            public Single EmptyString;
            [Abide.Guerilla.Tags.FieldAttribute("flags", typeof(Int32))]
            [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
            public Int32 Flags;
            public int Size
            {
                get
                {
                    return 60;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            public enum FlagsOptions
            {
                DontPlayWithAlternate = 1,
                DontPlayWithoutAlternate = 2,
                StartImmediatelyWithLoop = 4,
            }
        }
        public enum FlagsOptions
        {
            DeafeningToAis = 1,
            NotALoop = 2,
            StopsMusic = 4,
            AlwaysSpatialize = 8,
            SynchronizePlayback = 16,
            SynchronizeTracks = 32,
            FakeSpatializationWithDistance = 64,
            CombineAll3dPlayback = 128,
        }
    }
}
#pragma warning restore CS1591
