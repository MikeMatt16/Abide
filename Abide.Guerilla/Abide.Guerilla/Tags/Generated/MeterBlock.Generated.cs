#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Abide.Guerilla.Tags
{
    using Abide.Guerilla.Types;
    using Abide.HaloLibrary;
    using System;
    
    [Abide.Guerilla.Tags.FieldSetAttribute(172, 4)]
    [Abide.Guerilla.Tags.TagGroupAttribute("meter", 1835365490u, 4294967293u, typeof(MeterBlock))]
    public sealed class MeterBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
    {
        [Abide.Guerilla.Tags.FieldAttribute("flags", typeof(Int32))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
        public Int32 Flags;
        [Abide.Guerilla.Tags.FieldAttribute("stencil bitmaps#two bitmaps specifying the mask and the meter levels", typeof(TagReference))]
        public TagReference StencilBitmaps;
        [Abide.Guerilla.Tags.FieldAttribute("source bitmap#optional bitmap to draw into the unmasked regions of the meter (mod" +
            "ulated by the colors below)", typeof(TagReference))]
        public TagReference SourceBitmap;
        [Abide.Guerilla.Tags.FieldAttribute("stencil sequence index", typeof(Int16))]
        public Int16 StencilSequenceIndex;
        [Abide.Guerilla.Tags.FieldAttribute("source sequence index", typeof(Int16))]
        public Int16 SourceSequenceIndex;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(16)]
        public Byte[] EmptyString;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(4)]
        public Byte[] EmptyString1;
        [Abide.Guerilla.Tags.FieldAttribute("interpolate colors...", typeof(Int16))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(InterpolateColorsOptions), false)]
        public Int16 InterpolateColors;
        [Abide.Guerilla.Tags.FieldAttribute("anchor colors...", typeof(Int16))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(AnchorColorsOptions), false)]
        public Int16 AnchorColors;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(8)]
        public Byte[] EmptyString2;
        [Abide.Guerilla.Tags.FieldAttribute("empty color", typeof(ColorArgbF))]
        public ColorArgbF EmptyColor;
        [Abide.Guerilla.Tags.FieldAttribute("full color", typeof(ColorArgbF))]
        public ColorArgbF FullColor;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(20)]
        public Byte[] EmptyString3;
        [Abide.Guerilla.Tags.FieldAttribute("unmask distance:meter units#fade from fully masked to fully unmasked this distanc" +
            "e beyond full (and below empty)", typeof(Single))]
        public Single UnmaskDistance;
        [Abide.Guerilla.Tags.FieldAttribute("mask distance:meter units#fade from fully unmasked to fully masked this distance " +
            "below full (and beyond empty)", typeof(Single))]
        public Single MaskDistance;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(20)]
        public Byte[] EmptyString4;
        public int Size
        {
            get
            {
                return 172;
            }
        }
        public void Initialize()
        {
        }
        public void Read(System.IO.BinaryReader reader)
        {
        }
        public void Write(System.IO.BinaryWriter writer)
        {
        }
        public enum FlagsOptions
        {
        }
        public enum InterpolateColorsOptions
        {
            Linearly = 0,
            FasterNearEmpty = 1,
            FasterNearFull = 2,
            ThroughRandomNoise = 3,
        }
        public enum AnchorColorsOptions
        {
            AtBothEnds = 0,
            AtEmpty = 1,
            AtFull = 2,
        }
    }
}
#pragma warning restore CS1591
