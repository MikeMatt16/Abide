#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Abide.Guerilla.Tags
{
    using Abide.Guerilla.Types;
    using Abide.HaloLibrary;
    using System;
    
    [Abide.Guerilla.Tags.FieldSetAttribute(172, 4)]
    [Abide.Guerilla.Tags.TagGroupAttribute("sound", 1936614433u, 4294967293u, typeof(SoundBlock))]
    public sealed class SoundBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
    {
        [Abide.Guerilla.Tags.FieldAttribute("flags", typeof(Int32))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
        public Int32 Flags;
        [Abide.Guerilla.Tags.FieldAttribute("class", typeof(Byte))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(ClassOptions), false)]
        public Byte Class;
        [Abide.Guerilla.Tags.FieldAttribute("sample rate*", typeof(Byte))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(SampleRateOptions), false)]
        public Byte SampleRate;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(EmptyStringOptions), false)]
        public Byte EmptyString;
        [Abide.Guerilla.Tags.FieldAttribute("import type*", typeof(Byte))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(ImportTypeOptions), false)]
        public Byte ImportType;
        [Abide.Guerilla.Tags.FieldAttribute("playback", typeof(SoundPlaybackParametersStructBlock))]
        public SoundPlaybackParametersStructBlock Playback;
        [Abide.Guerilla.Tags.FieldAttribute("scale", typeof(SoundScaleModifiersStructBlock))]
        public SoundScaleModifiersStructBlock Scale;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(2)]
        public Byte[] EmptyString1;
        [Abide.Guerilla.Tags.FieldAttribute("encoding*", typeof(Byte))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(EncodingOptions), false)]
        public Byte Encoding;
        [Abide.Guerilla.Tags.FieldAttribute("compression*", typeof(Byte))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(CompressionOptions), false)]
        public Byte Compression;
        [Abide.Guerilla.Tags.FieldAttribute("promotion", typeof(SoundPromotionParametersStructBlock))]
        public SoundPromotionParametersStructBlock Promotion;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(12)]
        public Byte[] EmptyString2;
        [Abide.Guerilla.Tags.FieldAttribute("pitch ranges*#pitch ranges allow multiple samples to represent the same sound at " +
            "different pitches", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("sound_pitch_range_block", 9, typeof(SoundPitchRangeBlock))]
        public TagBlock PitchRanges;
        [Abide.Guerilla.Tags.FieldAttribute("platform parameters", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("sound_platform_sound_playback_block", 1, typeof(SoundPlatformSoundPlaybackBlock))]
        public TagBlock PlatformParameters;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("sound_extra_info_block", 1, typeof(SoundExtraInfoBlock))]
        public TagBlock EmptyString3;
        public int Size
        {
            get
            {
                return 172;
            }
        }
        public void Initialize()
        {
        }
        public void Read(System.IO.BinaryReader reader)
        {
        }
        public void Write(System.IO.BinaryWriter writer)
        {
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(32, 4)]
        public sealed class SoundPitchRangeBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("name*#the name of the imported pitch range directory", typeof(StringId))]
            public StringId Name;
            [Abide.Guerilla.Tags.FieldAttribute("natural pitch:cents#the apparent pitch when these samples are played at their rec" +
                "orded pitch.", typeof(Int16))]
            public Int16 NaturalPitch;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(2)]
            public Byte[] EmptyString;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString2;
            [Abide.Guerilla.Tags.FieldAttribute("permutations*#permutations represent equivalent variations of this sound.", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("sound_permutations_block", 32, typeof(SoundPermutationsBlock))]
            public TagBlock Permutations;
            public int Size
            {
                get
                {
                    return 32;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(32, 4)]
            public sealed class SoundPermutationsBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("name*^#name of the file from which this sample was imported", typeof(StringId))]
                public StringId Name;
                [Abide.Guerilla.Tags.FieldAttribute("skip fraction#fraction of requests to play this permutation that are ignored (a d" +
                    "ifferent permutation is selected.)", typeof(Single))]
                public Single SkipFraction;
                [Abide.Guerilla.Tags.FieldAttribute("gain:dB#additional attenuation when played", typeof(Single))]
                public Single Gain;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Int32))]
                public Int32 EmptyString1;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Int16))]
                public Int16 EmptyString2;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Int16))]
                public Int16 EmptyString3;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("sound_permutation_chunk_block", 32767, typeof(SoundPermutationChunkBlock))]
                public TagBlock EmptyString4;
                public int Size
                {
                    get
                    {
                        return 32;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(12, 4)]
                public sealed class SoundPermutationChunkBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("file offset*", typeof(Int32))]
                    public Int32 FileOffset;
                    [Abide.Guerilla.Tags.FieldAttribute("", typeof(Int32))]
                    public Int32 EmptyString;
                    [Abide.Guerilla.Tags.FieldAttribute("", typeof(Int32))]
                    public Int32 EmptyString1;
                    public int Size
                    {
                        get
                        {
                            return 12;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                }
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(84, 4)]
        public sealed class SoundPlatformSoundPlaybackBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("playback definition", typeof(SimplePlatformSoundPlaybackStructBlock))]
            public SimplePlatformSoundPlaybackStructBlock PlaybackDefinition;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("g_null_block", 0, typeof(GNullBlock))]
            public TagBlock EmptyString;
            public int Size
            {
                get
                {
                    return 84;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(0, 4)]
            public sealed class GNullBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                public int Size
                {
                    get
                    {
                        return 0;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(72, 4)]
            public sealed class SimplePlatformSoundPlaybackStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("platform_sound_override_mixbins_block", 8, typeof(PlatformSoundOverrideMixbinsBlock))]
                public TagBlock EmptyString;
                [Abide.Guerilla.Tags.FieldAttribute("flags", typeof(Int32))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
                public Int32 Flags;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(8)]
                public Byte[] EmptyString1;
                [Abide.Guerilla.Tags.FieldAttribute("filter", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("platform_sound_filter_block", 1, typeof(PlatformSoundFilterBlock))]
                public TagBlock Filter;
                [Abide.Guerilla.Tags.FieldAttribute("pitch lfo", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("platform_sound_pitch_lfo_block", 1, typeof(PlatformSoundPitchLfoBlock))]
                public TagBlock PitchLfo;
                [Abide.Guerilla.Tags.FieldAttribute("filter lfo", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("platform_sound_filter_lfo_block", 1, typeof(PlatformSoundFilterLfoBlock))]
                public TagBlock FilterLfo;
                [Abide.Guerilla.Tags.FieldAttribute("sound effect", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("sound_effect_playback_block", 1, typeof(SoundEffectPlaybackBlock))]
                public TagBlock SoundEffect;
                public int Size
                {
                    get
                    {
                        return 72;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(8, 4)]
                public sealed class PlatformSoundOverrideMixbinsBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("mixbin", typeof(Int32))]
                    [Abide.Guerilla.Tags.OptionsAttribute(typeof(MixbinOptions), false)]
                    public Int32 Mixbin;
                    [Abide.Guerilla.Tags.FieldAttribute("gain:dB", typeof(Single))]
                    public Single Gain;
                    public int Size
                    {
                        get
                        {
                            return 8;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    public enum MixbinOptions
                    {
                        FrontLeft = 0,
                        FrontRight = 1,
                        BackLeft = 2,
                        BackRight = 3,
                        Center = 4,
                        LowFrequency = 5,
                        Reverb = 6,
                        _3dFrontLeft = 7,
                        _3dFrontRight = 8,
                        _3dBackLeft = 9,
                        _3dBackRight = 10,
                        DefaultLeftSpeakers = 11,
                        DefaultRightSpeakers = 12,
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(72, 4)]
                public sealed class PlatformSoundFilterBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("filter type", typeof(Int32))]
                    [Abide.Guerilla.Tags.OptionsAttribute(typeof(FilterTypeOptions), false)]
                    public Int32 FilterType;
                    [Abide.Guerilla.Tags.FieldAttribute("filter width:[0,7]", typeof(Int32))]
                    public Int32 FilterWidth;
                    [Abide.Guerilla.Tags.FieldAttribute("left filter frequency", typeof(SoundPlaybackParameterDefinitionBlock))]
                    public SoundPlaybackParameterDefinitionBlock LeftFilterFrequency1;
                    [Abide.Guerilla.Tags.FieldAttribute("left filter gain", typeof(SoundPlaybackParameterDefinitionBlock))]
                    public SoundPlaybackParameterDefinitionBlock LeftFilterGain1;
                    [Abide.Guerilla.Tags.FieldAttribute("right filter frequency", typeof(SoundPlaybackParameterDefinitionBlock))]
                    public SoundPlaybackParameterDefinitionBlock RightFilterFrequency1;
                    [Abide.Guerilla.Tags.FieldAttribute("right filter gain", typeof(SoundPlaybackParameterDefinitionBlock))]
                    public SoundPlaybackParameterDefinitionBlock RightFilterGain1;
                    public int Size
                    {
                        get
                        {
                            return 72;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(16, 4)]
                    public sealed class SoundPlaybackParameterDefinitionBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        public int Size
                        {
                            get
                            {
                                return 16;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                    public enum FilterTypeOptions
                    {
                        ParametricEq = 0,
                        Dls2 = 1,
                        BothOnlyValidForMono = 2,
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(48, 4)]
                public sealed class PlatformSoundPitchLfoBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("delay", typeof(SoundPlaybackParameterDefinitionBlock))]
                    public SoundPlaybackParameterDefinitionBlock Delay1;
                    [Abide.Guerilla.Tags.FieldAttribute("frequency", typeof(SoundPlaybackParameterDefinitionBlock))]
                    public SoundPlaybackParameterDefinitionBlock Frequency1;
                    [Abide.Guerilla.Tags.FieldAttribute("pitch modulation", typeof(SoundPlaybackParameterDefinitionBlock))]
                    public SoundPlaybackParameterDefinitionBlock PitchModulation1;
                    public int Size
                    {
                        get
                        {
                            return 48;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(16, 4)]
                    public sealed class SoundPlaybackParameterDefinitionBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        public int Size
                        {
                            get
                            {
                                return 16;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(64, 4)]
                public sealed class PlatformSoundFilterLfoBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("delay", typeof(SoundPlaybackParameterDefinitionBlock))]
                    public SoundPlaybackParameterDefinitionBlock Delay1;
                    [Abide.Guerilla.Tags.FieldAttribute("frequency", typeof(SoundPlaybackParameterDefinitionBlock))]
                    public SoundPlaybackParameterDefinitionBlock Frequency1;
                    [Abide.Guerilla.Tags.FieldAttribute("cutoff modulation", typeof(SoundPlaybackParameterDefinitionBlock))]
                    public SoundPlaybackParameterDefinitionBlock CutoffModulation1;
                    [Abide.Guerilla.Tags.FieldAttribute("gain modulation", typeof(SoundPlaybackParameterDefinitionBlock))]
                    public SoundPlaybackParameterDefinitionBlock GainModulation1;
                    public int Size
                    {
                        get
                        {
                            return 64;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(16, 4)]
                    public sealed class SoundPlaybackParameterDefinitionBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        public int Size
                        {
                            get
                            {
                                return 16;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(72, 4)]
                public sealed class SoundEffectPlaybackBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("sound effect struct", typeof(SoundEffectStructDefinitionBlock))]
                    public SoundEffectStructDefinitionBlock SoundEffectStruct;
                    public int Size
                    {
                        get
                        {
                            return 72;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(72, 4)]
                    public sealed class SoundEffectStructDefinitionBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("", typeof(TagReference))]
                        public TagReference EmptyString;
                        [Abide.Guerilla.Tags.FieldAttribute("components", typeof(TagBlock))]
                        [Abide.Guerilla.Tags.BlockAttribute("sound_effect_component_block", 16, typeof(SoundEffectComponentBlock))]
                        public TagBlock Components;
                        [Abide.Guerilla.Tags.FieldAttribute("", typeof(TagBlock))]
                        [Abide.Guerilla.Tags.BlockAttribute("sound_effect_overrides_block", 128, typeof(SoundEffectOverridesBlock))]
                        public TagBlock EmptyString1;
                        [Abide.Guerilla.Tags.FieldAttribute("", typeof(TagBlock))]
                        [Abide.Guerilla.Tags.BlockAttribute("platform_sound_effect_collection_block", 1, typeof(PlatformSoundEffectCollectionBlock))]
                        public TagBlock EmptyString3;
                        public int Size
                        {
                            get
                            {
                                return 72;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                        [Abide.Guerilla.Tags.FieldSetAttribute(24, 4)]
                        public sealed class SoundEffectComponentBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("sound^", typeof(TagReference))]
                            public TagReference Sound;
                            [Abide.Guerilla.Tags.FieldAttribute("gain:dB#additional attenuation to sound", typeof(Single))]
                            public Single Gain;
                            [Abide.Guerilla.Tags.FieldAttribute("flags", typeof(Int32))]
                            [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
                            public Int32 Flags;
                            public int Size
                            {
                                get
                                {
                                    return 24;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                            public enum FlagsOptions
                            {
                                DontPlayAtStart = 1,
                                PlayOnStop = 2,
                                EmptyString = 4,
                                PlayAlternate = 8,
                                EmptyString1 = 16,
                                SyncWithOriginLoopingSound = 32,
                            }
                        }
                        [Abide.Guerilla.Tags.FieldSetAttribute(16, 4)]
                        public sealed class SoundEffectOverridesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("name", typeof(StringId))]
                            public StringId Name;
                            [Abide.Guerilla.Tags.FieldAttribute("overrides", typeof(TagBlock))]
                            [Abide.Guerilla.Tags.BlockAttribute("sound_effect_override_parameters_block", 128, typeof(SoundEffectOverrideParametersBlock))]
                            public TagBlock Overrides;
                            public int Size
                            {
                                get
                                {
                                    return 16;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                            [Abide.Guerilla.Tags.FieldSetAttribute(36, 4)]
                            public sealed class SoundEffectOverrideParametersBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                            {
                                [Abide.Guerilla.Tags.FieldAttribute("name", typeof(StringId))]
                                public StringId Name;
                                [Abide.Guerilla.Tags.FieldAttribute("input", typeof(StringId))]
                                public StringId Input;
                                [Abide.Guerilla.Tags.FieldAttribute("range", typeof(StringId))]
                                public StringId Range;
                                [Abide.Guerilla.Tags.FieldAttribute("time period: seconds", typeof(Single))]
                                public Single TimePeriod;
                                [Abide.Guerilla.Tags.FieldAttribute("integer value", typeof(Int32))]
                                public Int32 IntegerValue;
                                [Abide.Guerilla.Tags.FieldAttribute("real value", typeof(Single))]
                                public Single RealValue;
                                [Abide.Guerilla.Tags.FieldAttribute("function value", typeof(MappingFunctionBlock))]
                                public MappingFunctionBlock FunctionValue;
                                public int Size
                                {
                                    get
                                    {
                                        return 36;
                                    }
                                }
                                public void Initialize()
                                {
                                }
                                public void Read(System.IO.BinaryReader reader)
                                {
                                }
                                public void Write(System.IO.BinaryWriter writer)
                                {
                                }
                                [Abide.Guerilla.Tags.FieldSetAttribute(12, 4)]
                                public sealed class MappingFunctionBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                                {
                                    [Abide.Guerilla.Tags.FieldAttribute("data", typeof(TagBlock))]
                                    [Abide.Guerilla.Tags.BlockAttribute("byte_block", 1024, typeof(ByteBlock))]
                                    public TagBlock Data;
                                    public int Size
                                    {
                                        get
                                        {
                                            return 12;
                                        }
                                    }
                                    public void Initialize()
                                    {
                                    }
                                    public void Read(System.IO.BinaryReader reader)
                                    {
                                    }
                                    public void Write(System.IO.BinaryWriter writer)
                                    {
                                    }
                                    [Abide.Guerilla.Tags.FieldSetAttribute(1, 4)]
                                    public sealed class ByteBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                                    {
                                        [Abide.Guerilla.Tags.FieldAttribute("Value", typeof(Byte))]
                                        public Byte Value;
                                        public int Size
                                        {
                                            get
                                            {
                                                return 1;
                                            }
                                        }
                                        public void Initialize()
                                        {
                                        }
                                        public void Read(System.IO.BinaryReader reader)
                                        {
                                        }
                                        public void Write(System.IO.BinaryWriter writer)
                                        {
                                        }
                                    }
                                }
                            }
                        }
                        [Abide.Guerilla.Tags.FieldSetAttribute(28, 4)]
                        public sealed class PlatformSoundEffectCollectionBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("sound effects*", typeof(TagBlock))]
                            [Abide.Guerilla.Tags.BlockAttribute("platform_sound_effect_block", 8, typeof(PlatformSoundEffectBlock))]
                            public TagBlock SoundEffects;
                            [Abide.Guerilla.Tags.FieldAttribute("low frequency input*", typeof(TagBlock))]
                            [Abide.Guerilla.Tags.BlockAttribute("platform_sound_effect_function_block", 16, typeof(PlatformSoundEffectFunctionBlock))]
                            public TagBlock LowFrequencyInput;
                            [Abide.Guerilla.Tags.FieldAttribute("sound effect overrides", typeof(Int32))]
                            public Int32 SoundEffectOverrides;
                            public int Size
                            {
                                get
                                {
                                    return 28;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                            [Abide.Guerilla.Tags.FieldSetAttribute(40, 4)]
                            public sealed class PlatformSoundEffectBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                            {
                                [Abide.Guerilla.Tags.FieldAttribute("function inputs", typeof(TagBlock))]
                                [Abide.Guerilla.Tags.BlockAttribute("platform_sound_effect_function_block", 16, typeof(PlatformSoundEffectFunctionBlock))]
                                public TagBlock FunctionInputs;
                                [Abide.Guerilla.Tags.FieldAttribute("constant inputs", typeof(TagBlock))]
                                [Abide.Guerilla.Tags.BlockAttribute("platform_sound_effect_constant_block", 16, typeof(PlatformSoundEffectConstantBlock))]
                                public TagBlock ConstantInputs;
                                [Abide.Guerilla.Tags.FieldAttribute("template override descriptors", typeof(TagBlock))]
                                [Abide.Guerilla.Tags.BlockAttribute("platform_sound_effect_override_descriptor_block", 16, typeof(PlatformSoundEffectOverrideDescriptorBlock))]
                                public TagBlock TemplateOverrideDescriptors;
                                [Abide.Guerilla.Tags.FieldAttribute("input overrides", typeof(Int32))]
                                public Int32 InputOverrides;
                                public int Size
                                {
                                    get
                                    {
                                        return 40;
                                    }
                                }
                                public void Initialize()
                                {
                                }
                                public void Read(System.IO.BinaryReader reader)
                                {
                                }
                                public void Write(System.IO.BinaryWriter writer)
                                {
                                }
                                [Abide.Guerilla.Tags.FieldSetAttribute(20, 4)]
                                public sealed class PlatformSoundEffectFunctionBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                                {
                                    [Abide.Guerilla.Tags.FieldAttribute("input", typeof(Int16))]
                                    [Abide.Guerilla.Tags.OptionsAttribute(typeof(InputOptions), false)]
                                    public Int16 Input;
                                    [Abide.Guerilla.Tags.FieldAttribute("range", typeof(Int16))]
                                    [Abide.Guerilla.Tags.OptionsAttribute(typeof(RangeOptions), false)]
                                    public Int16 Range;
                                    [Abide.Guerilla.Tags.FieldAttribute("function", typeof(MappingFunctionBlock))]
                                    public MappingFunctionBlock Function;
                                    [Abide.Guerilla.Tags.FieldAttribute("time period: seconds", typeof(Single))]
                                    public Single TimePeriod;
                                    public int Size
                                    {
                                        get
                                        {
                                            return 20;
                                        }
                                    }
                                    public void Initialize()
                                    {
                                    }
                                    public void Read(System.IO.BinaryReader reader)
                                    {
                                    }
                                    public void Write(System.IO.BinaryWriter writer)
                                    {
                                    }
                                    [Abide.Guerilla.Tags.FieldSetAttribute(12, 4)]
                                    public sealed class MappingFunctionBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                                    {
                                        [Abide.Guerilla.Tags.FieldAttribute("data", typeof(TagBlock))]
                                        [Abide.Guerilla.Tags.BlockAttribute("byte_block", 1024, typeof(ByteBlock))]
                                        public TagBlock Data;
                                        public int Size
                                        {
                                            get
                                            {
                                                return 12;
                                            }
                                        }
                                        public void Initialize()
                                        {
                                        }
                                        public void Read(System.IO.BinaryReader reader)
                                        {
                                        }
                                        public void Write(System.IO.BinaryWriter writer)
                                        {
                                        }
                                        [Abide.Guerilla.Tags.FieldSetAttribute(1, 4)]
                                        public sealed class ByteBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                                        {
                                            [Abide.Guerilla.Tags.FieldAttribute("Value", typeof(Byte))]
                                            public Byte Value;
                                            public int Size
                                            {
                                                get
                                                {
                                                    return 1;
                                                }
                                            }
                                            public void Initialize()
                                            {
                                            }
                                            public void Read(System.IO.BinaryReader reader)
                                            {
                                            }
                                            public void Write(System.IO.BinaryWriter writer)
                                            {
                                            }
                                        }
                                    }
                                    public enum InputOptions
                                    {
                                        Zero = 0,
                                        Time = 1,
                                        Scale = 2,
                                        Rolloff = 3,
                                    }
                                    public enum RangeOptions
                                    {
                                        Zero = 0,
                                        Time = 1,
                                        Scale = 2,
                                        Rolloff = 3,
                                    }
                                }
                                [Abide.Guerilla.Tags.FieldSetAttribute(4, 4)]
                                public sealed class PlatformSoundEffectConstantBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                                {
                                    [Abide.Guerilla.Tags.FieldAttribute("constant value", typeof(Single))]
                                    public Single ConstantValue;
                                    public int Size
                                    {
                                        get
                                        {
                                            return 4;
                                        }
                                    }
                                    public void Initialize()
                                    {
                                    }
                                    public void Read(System.IO.BinaryReader reader)
                                    {
                                    }
                                    public void Write(System.IO.BinaryWriter writer)
                                    {
                                    }
                                }
                                [Abide.Guerilla.Tags.FieldSetAttribute(1, 4)]
                                public sealed class PlatformSoundEffectOverrideDescriptorBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                                {
                                    [Abide.Guerilla.Tags.FieldAttribute("override descriptor", typeof(Byte))]
                                    public Byte OverrideDescriptor;
                                    public int Size
                                    {
                                        get
                                        {
                                            return 1;
                                        }
                                    }
                                    public void Initialize()
                                    {
                                    }
                                    public void Read(System.IO.BinaryReader reader)
                                    {
                                    }
                                    public void Write(System.IO.BinaryWriter writer)
                                    {
                                    }
                                }
                            }
                            [Abide.Guerilla.Tags.FieldSetAttribute(20, 4)]
                            public sealed class PlatformSoundEffectFunctionBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                            {
                                [Abide.Guerilla.Tags.FieldAttribute("input", typeof(Int16))]
                                [Abide.Guerilla.Tags.OptionsAttribute(typeof(InputOptions), false)]
                                public Int16 Input;
                                [Abide.Guerilla.Tags.FieldAttribute("range", typeof(Int16))]
                                [Abide.Guerilla.Tags.OptionsAttribute(typeof(RangeOptions), false)]
                                public Int16 Range;
                                [Abide.Guerilla.Tags.FieldAttribute("function", typeof(MappingFunctionBlock))]
                                public MappingFunctionBlock Function;
                                [Abide.Guerilla.Tags.FieldAttribute("time period: seconds", typeof(Single))]
                                public Single TimePeriod;
                                public int Size
                                {
                                    get
                                    {
                                        return 20;
                                    }
                                }
                                public void Initialize()
                                {
                                }
                                public void Read(System.IO.BinaryReader reader)
                                {
                                }
                                public void Write(System.IO.BinaryWriter writer)
                                {
                                }
                                [Abide.Guerilla.Tags.FieldSetAttribute(12, 4)]
                                public sealed class MappingFunctionBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                                {
                                    [Abide.Guerilla.Tags.FieldAttribute("data", typeof(TagBlock))]
                                    [Abide.Guerilla.Tags.BlockAttribute("byte_block", 1024, typeof(ByteBlock))]
                                    public TagBlock Data;
                                    public int Size
                                    {
                                        get
                                        {
                                            return 12;
                                        }
                                    }
                                    public void Initialize()
                                    {
                                    }
                                    public void Read(System.IO.BinaryReader reader)
                                    {
                                    }
                                    public void Write(System.IO.BinaryWriter writer)
                                    {
                                    }
                                    [Abide.Guerilla.Tags.FieldSetAttribute(1, 4)]
                                    public sealed class ByteBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                                    {
                                        [Abide.Guerilla.Tags.FieldAttribute("Value", typeof(Byte))]
                                        public Byte Value;
                                        public int Size
                                        {
                                            get
                                            {
                                                return 1;
                                            }
                                        }
                                        public void Initialize()
                                        {
                                        }
                                        public void Read(System.IO.BinaryReader reader)
                                        {
                                        }
                                        public void Write(System.IO.BinaryWriter writer)
                                        {
                                        }
                                    }
                                }
                                public enum InputOptions
                                {
                                    Zero = 0,
                                    Time = 1,
                                    Scale = 2,
                                    Rolloff = 3,
                                }
                                public enum RangeOptions
                                {
                                    Zero = 0,
                                    Time = 1,
                                    Scale = 2,
                                    Rolloff = 3,
                                }
                            }
                        }
                    }
                }
                public enum FlagsOptions
                {
                    Use3dRadioHack = 1,
                }
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(64, 4)]
        public sealed class SoundExtraInfoBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("language permutation info", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("sound_definition_language_permutation_info_block", 576, typeof(SoundDefinitionLanguagePermutationInfoBlock))]
            public TagBlock LanguagePermutationInfo;
            [Abide.Guerilla.Tags.FieldAttribute("encoded permutation section", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("sound_encoded_dialogue_section_block", 1, typeof(SoundEncodedDialogueSectionBlock))]
            public TagBlock EncodedPermutationSection;
            [Abide.Guerilla.Tags.FieldAttribute("geometry block info", typeof(GlobalGeometryBlockInfoStructBlock))]
            public GlobalGeometryBlockInfoStructBlock GeometryBlockInfo;
            public int Size
            {
                get
                {
                    return 64;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(12, 4)]
            public sealed class SoundDefinitionLanguagePermutationInfoBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("raw info block", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("sound_permutation_raw_info_block", 18, typeof(SoundPermutationRawInfoBlock))]
                public TagBlock RawInfoBlock;
                public int Size
                {
                    get
                    {
                        return 12;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(80, 4)]
                public sealed class SoundPermutationRawInfoBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("skip fraction name", typeof(StringId))]
                    public StringId SkipFractionName;
                    [Abide.Guerilla.Tags.FieldAttribute("", typeof(TagBlock))]
                    [Abide.Guerilla.Tags.BlockAttribute("sound_permutation_marker_block", 65535, typeof(SoundPermutationMarkerBlock))]
                    public TagBlock EmptyString4;
                    [Abide.Guerilla.Tags.FieldAttribute("compression*", typeof(Int16))]
                    [Abide.Guerilla.Tags.OptionsAttribute(typeof(CompressionOptions), false)]
                    public Int16 Compression;
                    [Abide.Guerilla.Tags.FieldAttribute("language*", typeof(Byte))]
                    [Abide.Guerilla.Tags.OptionsAttribute(typeof(LanguageOptions), false)]
                    public Byte Language;
                    [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                    [Abide.Guerilla.Tags.PaddingAttribute(1)]
                    public Byte[] EmptyString5;
                    public int Size
                    {
                        get
                        {
                            return 80;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(12, 4)]
                    public sealed class SoundPermutationMarkerBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("marker id*", typeof(Int32))]
                        public Int32 MarkerId;
                        [Abide.Guerilla.Tags.FieldAttribute("name^*", typeof(StringId))]
                        public StringId Name;
                        [Abide.Guerilla.Tags.FieldAttribute("sample offset*", typeof(Int32))]
                        public Int32 SampleOffset;
                        public int Size
                        {
                            get
                            {
                                return 12;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                    public enum CompressionOptions
                    {
                        NoneBigEndian = 0,
                        XboxAdpcm = 1,
                        ImaAdpcm = 2,
                        NoneLittleEndian = 3,
                        Wma = 4,
                    }
                    public enum LanguageOptions
                    {
                        English = 0,
                        Japanese = 1,
                        German = 2,
                        French = 3,
                        Spanish = 4,
                        Italian = 5,
                        Korean = 6,
                        Chinese = 7,
                        Portuguese = 8,
                    }
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(32, 4)]
            public sealed class SoundEncodedDialogueSectionBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("sound dialogue info", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("sound_permutation_dialogue_info_block", 288, typeof(SoundPermutationDialogueInfoBlock))]
                public TagBlock SoundDialogueInfo;
                public int Size
                {
                    get
                    {
                        return 32;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(16, 4)]
                public sealed class SoundPermutationDialogueInfoBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("mouth data offset", typeof(Int32))]
                    public Int32 MouthDataOffset;
                    [Abide.Guerilla.Tags.FieldAttribute("mouth data length", typeof(Int32))]
                    public Int32 MouthDataLength;
                    [Abide.Guerilla.Tags.FieldAttribute("lipsync data offset", typeof(Int32))]
                    public Int32 LipsyncDataOffset;
                    [Abide.Guerilla.Tags.FieldAttribute("lipsync data length", typeof(Int32))]
                    public Int32 LipsyncDataLength;
                    public int Size
                    {
                        get
                        {
                            return 16;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(40, 4)]
            public sealed class GlobalGeometryBlockInfoStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("Block Offset*", typeof(Int32))]
                public Int32 BlockOffset;
                [Abide.Guerilla.Tags.FieldAttribute("Block Size*", typeof(Int32))]
                public Int32 BlockSize;
                [Abide.Guerilla.Tags.FieldAttribute("Section Data Size*", typeof(Int32))]
                public Int32 SectionDataSize;
                [Abide.Guerilla.Tags.FieldAttribute("Resource Data Size*", typeof(Int32))]
                public Int32 ResourceDataSize;
                [Abide.Guerilla.Tags.FieldAttribute("Resources*", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("block resources", 1024, typeof(GlobalGeometryBlockResourceBlock))]
                public TagBlock Resources;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(4)]
                public Byte[] EmptyString;
                [Abide.Guerilla.Tags.FieldAttribute("Owner Tag Section Offset*", typeof(Int16))]
                public Int16 OwnerTagSectionOffset;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(2)]
                public Byte[] EmptyString1;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(4)]
                public Byte[] EmptyString2;
                public int Size
                {
                    get
                    {
                        return 40;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(16, 4)]
                public sealed class GlobalGeometryBlockResourceBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("Type*", typeof(Byte))]
                    [Abide.Guerilla.Tags.OptionsAttribute(typeof(TypeOptions), false)]
                    public Byte Type;
                    [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                    [Abide.Guerilla.Tags.PaddingAttribute(3)]
                    public Byte[] EmptyString;
                    [Abide.Guerilla.Tags.FieldAttribute("Primary Locator*", typeof(Int16))]
                    public Int16 PrimaryLocator;
                    [Abide.Guerilla.Tags.FieldAttribute("Secondary Locator*", typeof(Int16))]
                    public Int16 SecondaryLocator;
                    [Abide.Guerilla.Tags.FieldAttribute("Resource Data Size*", typeof(Int32))]
                    public Int32 ResourceDataSize;
                    [Abide.Guerilla.Tags.FieldAttribute("Resource Data Offset*", typeof(Int32))]
                    public Int32 ResourceDataOffset;
                    public int Size
                    {
                        get
                        {
                            return 16;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    public enum TypeOptions
                    {
                        TagBlock = 0,
                        TagData = 1,
                        VertexBuffer = 2,
                    }
                }
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(56, 4)]
        public sealed class SoundPlaybackParametersStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("minimum distance:world units#the distance below which this sound no longer gets l" +
                "ouder", typeof(Single))]
            public Single MinimumDistance;
            [Abide.Guerilla.Tags.FieldAttribute("maximum distance:world units#the distance beyond which this sound is no longer au" +
                "dible", typeof(Single))]
            public Single MaximumDistance;
            [Abide.Guerilla.Tags.FieldAttribute("skip fraction#fraction of requests to play this sound that will be ignored (0 mea" +
                "ns always play.)", typeof(Single))]
            public Single SkipFraction;
            [Abide.Guerilla.Tags.FieldAttribute("maximum bend per second:cents", typeof(Single))]
            public Single MaximumBendPerSecond;
            [Abide.Guerilla.Tags.FieldAttribute("gain base:dB#sound\'s random gain will start here", typeof(Single))]
            public Single GainBase;
            [Abide.Guerilla.Tags.FieldAttribute("gain variance:dB#sound\'s gain will be randomly modulated within this range", typeof(Single))]
            public Single GainVariance;
            [Abide.Guerilla.Tags.FieldAttribute("inner cone angle:degrees#within the cone defined by this angle and the sound\'s di" +
                "rection, the sound plays with a gain of 1.0.", typeof(Single))]
            public Single InnerConeAngle;
            [Abide.Guerilla.Tags.FieldAttribute("outer cone angle:degrees#outside the cone defined by this angle and the sound\'s d" +
                "irection, the sound plays with a gain of OUTER CONE GAIN. (0 means the sound doe" +
                "s not attenuate with direction.)", typeof(Single))]
            public Single OuterConeAngle;
            [Abide.Guerilla.Tags.FieldAttribute("outer cone gain:dB#the gain to use when the sound is directed away from the liste" +
                "ner", typeof(Single))]
            public Single OuterConeGain;
            [Abide.Guerilla.Tags.FieldAttribute("flags", typeof(Int32))]
            [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
            public Int32 Flags;
            [Abide.Guerilla.Tags.FieldAttribute("azimuth", typeof(Single))]
            public Single Azimuth;
            [Abide.Guerilla.Tags.FieldAttribute("positional gain:dB", typeof(Single))]
            public Single PositionalGain;
            [Abide.Guerilla.Tags.FieldAttribute("first person gain:dB", typeof(Single))]
            public Single FirstPersonGain;
            public int Size
            {
                get
                {
                    return 56;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            public enum FlagsOptions
            {
                OverrideAzimuth = 1,
                Override3dGain = 2,
                OverrideSpeakerGain = 4,
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(20, 4)]
        public sealed class SoundScaleModifiersStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            public int Size
            {
                get
                {
                    return 20;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(28, 4)]
        public sealed class SoundPromotionParametersStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("promotion rules", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("sound_promotion_rule_block", 9, typeof(SoundPromotionRuleBlock))]
            public TagBlock PromotionRules;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("sound_promotion_runtime_timer_block", 9, typeof(SoundPromotionRuntimeTimerBlock))]
            public TagBlock EmptyString;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(12)]
            public Byte[] EmptyString1;
            public int Size
            {
                get
                {
                    return 28;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(16, 4)]
            public sealed class SoundPromotionRuleBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("pitch range^", typeof(Int16))]
                public Int16 PitchRange;
                [Abide.Guerilla.Tags.FieldAttribute("maximum playing count", typeof(Int16))]
                public Int16 MaximumPlayingCount;
                [Abide.Guerilla.Tags.FieldAttribute("suppression time:seconds#time from when first permutation plays to when another s" +
                    "ound from an equal or lower promotion can play", typeof(Single))]
                public Single SuppressionTime;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(8)]
                public Byte[] EmptyString;
                public int Size
                {
                    get
                    {
                        return 16;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(4, 4)]
            public sealed class SoundPromotionRuntimeTimerBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Int32))]
                public Int32 EmptyString;
                public int Size
                {
                    get
                    {
                        return 4;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
        }
        public enum FlagsOptions
        {
            FitToAdpcmBlocksize = 1,
            SplitLongSoundIntoPermutations = 2,
            AlwaysSpatialize = 4,
            NeverObstruct = 8,
            InternalDontTouch = 16,
            UseHugeSoundTransmission = 32,
            LinkCountToOwnerUnit = 64,
            PitchRangeIsLanguage = 128,
            DontUseSoundClassSpeakerFlag = 256,
            DontUseLipsyncData = 512,
        }
        public enum ClassOptions
        {
            ProjectileImpact = 0,
            ProjectileDetonation = 1,
            ProjectileFlyby = 2,
            EmptyString = 3,
            WeaponFire = 4,
            WeaponReady = 5,
            WeaponReload = 6,
            WeaponEmpty = 7,
            WeaponCharge = 8,
            WeaponOverheat = 9,
            WeaponIdle = 10,
            WeaponMelee = 11,
            WeaponAnimation = 12,
            ObjectImpacts = 13,
            ParticleImpacts = 14,
            EmptyString1 = 15,
            EmptyString2 = 16,
            EmptyString3 = 17,
            UnitFootsteps = 18,
            UnitDialog = 19,
            UnitAnimation = 20,
            EmptyString4 = 21,
            VehicleCollision = 22,
            VehicleEngine = 23,
            VehicleAnimation = 24,
            EmptyString5 = 25,
            DeviceDoor = 26,
            EmptyString6 = 27,
            DeviceMachinery = 28,
            DeviceStationary = 29,
            EmptyString7 = 30,
            EmptyString8 = 31,
            Music = 32,
            AmbientNature = 33,
            AmbientMachinery = 34,
            EmptyString9 = 35,
            HugeAss = 36,
            ObjectLooping = 37,
            CinematicMusic = 38,
            EmptyString10 = 39,
            EmptyString11 = 40,
            EmptyString12 = 41,
            EmptyString13 = 42,
            EmptyString14 = 43,
            EmptyString15 = 44,
            CortanaMission = 45,
            CortanaCinematic = 46,
            MissionDialog = 47,
            CinematicDialog = 48,
            ScriptedCinematicFoley = 49,
            GameEvent = 50,
            Ui = 51,
            Test = 52,
            MultilingualTest = 53,
        }
        public enum SampleRateOptions
        {
            _22khz = 0,
            _44khz = 1,
            _32khz = 2,
        }
        public enum EmptyStringOptions
        {
            None = 0,
            OutputFrontSpeakers = 1,
            OutputRearSpeakers = 2,
            OutputCenterSpeakers = 3,
        }
        public enum ImportTypeOptions
        {
            Unknown = 0,
            SingleShot = 1,
            SingleLayer = 2,
            MultiLayer = 3,
        }
        public enum EncodingOptions
        {
            Mono = 0,
            Stereo = 1,
            Codec = 2,
        }
        public enum CompressionOptions
        {
            NoneBigEndian = 0,
            XboxAdpcm = 1,
            ImaAdpcm = 2,
            NoneLittleEndian = 3,
            Wma = 4,
        }
    }
}
#pragma warning restore CS1591
