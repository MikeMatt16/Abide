#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Abide.Guerilla.Tags
{
    using Abide.Guerilla.Types;
    using Abide.HaloLibrary;
    using System;
    
    [Abide.Guerilla.Tags.FieldSetAttribute(348, 4)]
    [Abide.Guerilla.Tags.TagGroupAttribute("model", 1751936372u, 4294967293u, typeof(ModelBlock))]
    public sealed class ModelBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
    {
        [Abide.Guerilla.Tags.FieldAttribute("render model", typeof(TagReference))]
        public TagReference RenderModel;
        [Abide.Guerilla.Tags.FieldAttribute("collision model", typeof(TagReference))]
        public TagReference CollisionModel;
        [Abide.Guerilla.Tags.FieldAttribute("animation", typeof(TagReference))]
        public TagReference Animation;
        [Abide.Guerilla.Tags.FieldAttribute("physics", typeof(TagReference))]
        public TagReference Physics;
        [Abide.Guerilla.Tags.FieldAttribute("physics_model", typeof(TagReference))]
        public TagReference PhysicsModel;
        [Abide.Guerilla.Tags.FieldAttribute("disappear distance:world units", typeof(Single))]
        public Single DisappearDistance;
        [Abide.Guerilla.Tags.FieldAttribute("begin fade distance:world units", typeof(Single))]
        public Single BeginFadeDistance;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(4)]
        public Byte[] EmptyString1;
        [Abide.Guerilla.Tags.FieldAttribute("reduce to L1:world units (super low)", typeof(Single))]
        public Single ReduceToL1;
        [Abide.Guerilla.Tags.FieldAttribute("reduce to L2:world units (low)", typeof(Single))]
        public Single ReduceToL2;
        [Abide.Guerilla.Tags.FieldAttribute("reduce to L3:world units (medium)", typeof(Single))]
        public Single ReduceToL3;
        [Abide.Guerilla.Tags.FieldAttribute("reduce to L4:world units (high)", typeof(Single))]
        public Single ReduceToL4;
        [Abide.Guerilla.Tags.FieldAttribute("reduce to L5:world units (super high)", typeof(Single))]
        public Single ReduceToL5;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(4)]
        public Byte[] EmptyString2;
        [Abide.Guerilla.Tags.FieldAttribute("shadow fade distance", typeof(Int16))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(ShadowFadeDistanceOptions), false)]
        public Int16 ShadowFadeDistance;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(2)]
        public Byte[] EmptyString3;
        [Abide.Guerilla.Tags.FieldAttribute("variants", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("variant", 64, typeof(ModelVariantBlock))]
        public TagBlock Variants;
        [Abide.Guerilla.Tags.FieldAttribute("materials", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("material", 32, typeof(ModelMaterialBlock))]
        public TagBlock Materials;
        [Abide.Guerilla.Tags.FieldAttribute("new damage info", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("global_damage_info_block", 1, typeof(GlobalDamageInfoBlock))]
        public TagBlock NewDamageInfo;
        [Abide.Guerilla.Tags.FieldAttribute("targets", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("model_target_block", 32, typeof(ModelTargetBlock))]
        public TagBlock Targets;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("model_region_block", 16, typeof(ModelRegionBlock))]
        public TagBlock EmptyString4;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("model_node_block", 255, typeof(ModelNodeBlock))]
        public TagBlock EmptyString5;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(4)]
        public Byte[] EmptyString6;
        [Abide.Guerilla.Tags.FieldAttribute("model object data", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("model_object_data_block", 1, typeof(ModelObjectDataBlock))]
        public TagBlock ModelObjectData;
        [Abide.Guerilla.Tags.FieldAttribute("default dialogue#The default dialogue tag for this model (overriden by variants)", typeof(TagReference))]
        public TagReference DefaultDialogue;
        [Abide.Guerilla.Tags.FieldAttribute("UNUSED*", typeof(TagReference))]
        public TagReference Unused;
        [Abide.Guerilla.Tags.FieldAttribute("flags", typeof(Int32))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
        public Int32 Flags;
        [Abide.Guerilla.Tags.FieldAttribute("default dialogue effect#The default dialogue tag for this model (overriden by var" +
            "iants)", typeof(StringId))]
        public StringId DefaultDialogueEffect;
        [Abide.Guerilla.Tags.FieldAttribute("render-only node flags*", typeof(RenderOnlyNodeFlagsElement[]))]
        [Abide.Guerilla.Tags.ArrayAttribute(32, typeof(RenderOnlyNodeFlagsElement))]
        public RenderOnlyNodeFlagsElement[] RenderOnlyNodeFlags;
        [Abide.Guerilla.Tags.FieldAttribute("render-only section flags*", typeof(RenderOnlySectionFlagsElement[]))]
        [Abide.Guerilla.Tags.ArrayAttribute(32, typeof(RenderOnlySectionFlagsElement))]
        public RenderOnlySectionFlagsElement[] RenderOnlySectionFlags;
        [Abide.Guerilla.Tags.FieldAttribute("runtime flags*", typeof(Int32))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(RuntimeFlagsOptions), true)]
        public Int32 RuntimeFlags;
        [Abide.Guerilla.Tags.FieldAttribute("scenario load parameters", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("scenario load parameters", 32, typeof(GlobalScenarioLoadParametersBlock))]
        public TagBlock ScenarioLoadParameters;
        [Abide.Guerilla.Tags.FieldAttribute("hologram shader", typeof(TagReference))]
        public TagReference HologramShader;
        [Abide.Guerilla.Tags.FieldAttribute("hologram control function", typeof(StringId))]
        public StringId HologramControlFunction;
        public int Size
        {
            get
            {
                return 348;
            }
        }
        public void Initialize()
        {
        }
        public void Read(System.IO.BinaryReader reader)
        {
        }
        public void Write(System.IO.BinaryWriter writer)
        {
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(72, 4)]
        public sealed class ModelVariantBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("name^", typeof(StringId))]
            public StringId Name;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(16)]
            public Byte[] EmptyString;
            [Abide.Guerilla.Tags.FieldAttribute("regions", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("region", 16, typeof(ModelVariantRegionBlock))]
            public TagBlock Regions;
            [Abide.Guerilla.Tags.FieldAttribute("objects", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("object", 16, typeof(ModelVariantObjectBlock))]
            public TagBlock Objects;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(8)]
            public Byte[] EmptyString1;
            [Abide.Guerilla.Tags.FieldAttribute("dialogue sound effect", typeof(StringId))]
            public StringId DialogueSoundEffect;
            [Abide.Guerilla.Tags.FieldAttribute("dialogue", typeof(TagReference))]
            public TagReference Dialogue;
            public int Size
            {
                get
                {
                    return 72;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(24, 4)]
            public sealed class ModelVariantRegionBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("region name^:must match region name in render_model", typeof(StringId))]
                public StringId RegionName;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(1)]
                public Byte[] EmptyString;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(1)]
                public Byte[] EmptyString1;
                [Abide.Guerilla.Tags.FieldAttribute("parent variant", typeof(Int16))]
                public Int16 ParentVariant;
                [Abide.Guerilla.Tags.FieldAttribute("permutations", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("permutation", 32, typeof(ModelVariantPermutationBlock))]
                public TagBlock Permutations;
                [Abide.Guerilla.Tags.FieldAttribute("sort order#negative values mean closer to the camera", typeof(Int16))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(SortOrderOptions), false)]
                public Int16 SortOrder;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(2)]
                public Byte[] EmptyString2;
                public int Size
                {
                    get
                    {
                        return 24;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(36, 4)]
                public sealed class ModelVariantPermutationBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("permutation name^", typeof(StringId))]
                    public StringId PermutationName;
                    [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                    [Abide.Guerilla.Tags.PaddingAttribute(1)]
                    public Byte[] EmptyString;
                    [Abide.Guerilla.Tags.FieldAttribute("flags", typeof(Byte))]
                    [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
                    public Byte Flags;
                    [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                    [Abide.Guerilla.Tags.PaddingAttribute(2)]
                    public Byte[] EmptyString1;
                    [Abide.Guerilla.Tags.FieldAttribute("probability:(0,+inf)", typeof(Single))]
                    public Single Probability;
                    [Abide.Guerilla.Tags.FieldAttribute("states", typeof(TagBlock))]
                    [Abide.Guerilla.Tags.BlockAttribute("model_variant_state_block", 10, typeof(ModelVariantStateBlock))]
                    public TagBlock States;
                    [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                    [Abide.Guerilla.Tags.PaddingAttribute(5)]
                    public Byte[] EmptyString2;
                    [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                    [Abide.Guerilla.Tags.PaddingAttribute(7)]
                    public Byte[] EmptyString3;
                    public int Size
                    {
                        get
                        {
                            return 36;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(32, 4)]
                    public sealed class ModelVariantStateBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("permutation name", typeof(StringId))]
                        public StringId PermutationName;
                        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                        [Abide.Guerilla.Tags.PaddingAttribute(1)]
                        public Byte[] EmptyString;
                        [Abide.Guerilla.Tags.FieldAttribute("property flags", typeof(Byte))]
                        [Abide.Guerilla.Tags.OptionsAttribute(typeof(PropertyFlagsOptions), true)]
                        public Byte PropertyFlags;
                        [Abide.Guerilla.Tags.FieldAttribute("state^", typeof(Int16))]
                        [Abide.Guerilla.Tags.OptionsAttribute(typeof(StateOptions), false)]
                        public Int16 State;
                        [Abide.Guerilla.Tags.FieldAttribute("looping effect#played while the model is in this state", typeof(TagReference))]
                        public TagReference LoopingEffect;
                        [Abide.Guerilla.Tags.FieldAttribute("looping effect marker name", typeof(StringId))]
                        public StringId LoopingEffectMarkerName;
                        [Abide.Guerilla.Tags.FieldAttribute("initial probability", typeof(Single))]
                        public Single InitialProbability;
                        public int Size
                        {
                            get
                            {
                                return 32;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                        public enum PropertyFlagsOptions
                        {
                            Blurred = 1,
                            HellaBlurred = 2,
                            Shielded = 4,
                        }
                        public enum StateOptions
                        {
                            Default = 0,
                            MinorDamage = 1,
                            MediumDamage = 2,
                            MajorDamage = 3,
                            Destroyed = 4,
                        }
                    }
                    public enum FlagsOptions
                    {
                        CopyStatesToAllPermutations = 1,
                    }
                }
                public enum SortOrderOptions
                {
                    NoSorting = 0,
                    _5Closest = 1,
                    _4 = 2,
                    _3 = 3,
                    _2 = 4,
                    _1 = 5,
                    _0SameAsModel = 6,
                    _11 = 7,
                    _21 = 8,
                    _31 = 9,
                    _41 = 10,
                    _5Farthest = 11,
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(24, 4)]
            public sealed class ModelVariantObjectBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("parent marker^", typeof(StringId))]
                public StringId ParentMarker;
                [Abide.Guerilla.Tags.FieldAttribute("child marker", typeof(StringId))]
                public StringId ChildMarker;
                [Abide.Guerilla.Tags.FieldAttribute("child object", typeof(TagReference))]
                public TagReference ChildObject;
                public int Size
                {
                    get
                    {
                        return 24;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(20, 4)]
        public sealed class ModelMaterialBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("material name", typeof(StringId))]
            public StringId MaterialName;
            [Abide.Guerilla.Tags.FieldAttribute("material type", typeof(Int16))]
            [Abide.Guerilla.Tags.OptionsAttribute(typeof(MaterialTypeOptions), false)]
            public Int16 MaterialType;
            [Abide.Guerilla.Tags.FieldAttribute("damage section", typeof(Int16))]
            public Int16 DamageSection;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(2)]
            public Byte[] EmptyString;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(2)]
            public Byte[] EmptyString1;
            [Abide.Guerilla.Tags.FieldAttribute("global material name", typeof(StringId))]
            public StringId GlobalMaterialName;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString2;
            public int Size
            {
                get
                {
                    return 20;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            public enum MaterialTypeOptions
            {
                Dirt = 0,
                Sand = 1,
                Stone = 2,
                Snow = 3,
                Wood = 4,
                MetalHollow = 5,
                MetalThin = 6,
                MetalThick = 7,
                Rubber = 8,
                Glass = 9,
                ForceField = 10,
                Grunt = 11,
                HunterArmor = 12,
                HunterSkin = 13,
                Elite = 14,
                Jackal = 15,
                JackalEnergyShield = 16,
                EngineerSkin = 17,
                EngineerForceField = 18,
                FloodCombatForm = 19,
                FloodCarrierForm = 20,
                CyborgArmor = 21,
                CyborgEnergyShield = 22,
                HumanArmor = 23,
                HumanSkin = 24,
                Sentinel = 25,
                Monitor = 26,
                Plastic = 27,
                Water = 28,
                Leaves = 29,
                EliteEnergyShield = 30,
                Ice = 31,
                HunterShield = 32,
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(320, 4)]
        public sealed class GlobalDamageInfoBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("flags", typeof(Int32))]
            [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
            public Int32 Flags;
            [Abide.Guerilla.Tags.FieldAttribute("global indirect material name#absorbes AOE or child damage", typeof(StringId))]
            public StringId GlobalIndirectMaterialName;
            [Abide.Guerilla.Tags.FieldAttribute("indirect damage section#absorbes AOE or child damage", typeof(Int16))]
            public Int16 IndirectDamageSection;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(2)]
            public Byte[] EmptyString;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString1;
            [Abide.Guerilla.Tags.FieldAttribute("collision damage reporting type", typeof(Byte))]
            [Abide.Guerilla.Tags.OptionsAttribute(typeof(CollisionDamageReportingTypeOptions), false)]
            public Byte CollisionDamageReportingType;
            [Abide.Guerilla.Tags.FieldAttribute("response damage reporting type", typeof(Byte))]
            [Abide.Guerilla.Tags.OptionsAttribute(typeof(ResponseDamageReportingTypeOptions), false)]
            public Byte ResponseDamageReportingType;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(2)]
            public Byte[] EmptyString2;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(20)]
            public Byte[] EmptyString3;
            [Abide.Guerilla.Tags.FieldAttribute("maximum vitality", typeof(Single))]
            public Single MaximumVitality;
            [Abide.Guerilla.Tags.FieldAttribute("minimum stun damage#the minimum damage required to stun this object\'s health", typeof(Single))]
            public Single MinimumStunDamage;
            [Abide.Guerilla.Tags.FieldAttribute("stun time:seconds#the length of time the health stay stunned (do not recharge) af" +
                "ter taking damage", typeof(Single))]
            public Single StunTime;
            [Abide.Guerilla.Tags.FieldAttribute("recharge time:seconds#the length of time it would take for the shields to fully r" +
                "echarge after being completely depleted", typeof(Single))]
            public Single RechargeTime;
            [Abide.Guerilla.Tags.FieldAttribute("recharge fraction#0 defaults to 1 - to what maximum level the body health will be" +
                " allowed to recharge", typeof(Single))]
            public Single RechargeFraction;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(64)]
            public Byte[] EmptyString4;
            [Abide.Guerilla.Tags.FieldAttribute("shield damaged first person shader", typeof(TagReference))]
            public TagReference ShieldDamagedFirstPersonShader;
            [Abide.Guerilla.Tags.FieldAttribute("shield damaged shader", typeof(TagReference))]
            public TagReference ShieldDamagedShader;
            [Abide.Guerilla.Tags.FieldAttribute("maximum shield vitality#the default initial and maximum shield vitality of this o" +
                "bject", typeof(Single))]
            public Single MaximumShieldVitality;
            [Abide.Guerilla.Tags.FieldAttribute("global shield material name", typeof(StringId))]
            public StringId GlobalShieldMaterialName;
            [Abide.Guerilla.Tags.FieldAttribute("minimum stun damage#the minimum damage required to stun this object\'s shields", typeof(Single))]
            public Single MinimumStunDamage1;
            [Abide.Guerilla.Tags.FieldAttribute("stun time:seconds#the length of time the shields stay stunned (do not recharge) a" +
                "fter taking damage", typeof(Single))]
            public Single StunTime1;
            [Abide.Guerilla.Tags.FieldAttribute("recharge time:seconds#the length of time it would take for the shields to fully r" +
                "echarge after being completely depleted", typeof(Single))]
            public Single RechargeTime1;
            [Abide.Guerilla.Tags.FieldAttribute("shield damaged threshold", typeof(Single))]
            public Single ShieldDamagedThreshold;
            [Abide.Guerilla.Tags.FieldAttribute("shield damaged effect", typeof(TagReference))]
            public TagReference ShieldDamagedEffect;
            [Abide.Guerilla.Tags.FieldAttribute("shield depleted effect", typeof(TagReference))]
            public TagReference ShieldDepletedEffect;
            [Abide.Guerilla.Tags.FieldAttribute("shield recharging effect", typeof(TagReference))]
            public TagReference ShieldRechargingEffect;
            [Abide.Guerilla.Tags.FieldAttribute("damage sections", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("global_damage_section_block", 16, typeof(GlobalDamageSectionBlock))]
            public TagBlock DamageSections;
            [Abide.Guerilla.Tags.FieldAttribute("nodes*", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("global_damage_nodes_block", 255, typeof(GlobalDamageNodesBlock))]
            public TagBlock Nodes;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(2)]
            public Byte[] EmptyString5;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(2)]
            public Byte[] EmptyString6;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString7;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString8;
            [Abide.Guerilla.Tags.FieldAttribute("damage seats", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("damage_seat_info_block", 16, typeof(DamageSeatInfoBlock))]
            public TagBlock DamageSeats;
            [Abide.Guerilla.Tags.FieldAttribute("damage constraints", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("damage_constraint_info_block", 16, typeof(DamageConstraintInfoBlock))]
            public TagBlock DamageConstraints;
            [Abide.Guerilla.Tags.FieldAttribute("overshield first person shader", typeof(TagReference))]
            public TagReference OvershieldFirstPersonShader;
            [Abide.Guerilla.Tags.FieldAttribute("overshield shader", typeof(TagReference))]
            public TagReference OvershieldShader;
            public int Size
            {
                get
                {
                    return 320;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(68, 4)]
            public sealed class GlobalDamageSectionBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("name^", typeof(StringId))]
                public StringId Name;
                [Abide.Guerilla.Tags.FieldAttribute("flags", typeof(Int32))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
                public Int32 Flags;
                [Abide.Guerilla.Tags.FieldAttribute("vitality percentage:[0.1]#percentage of total object vitality", typeof(Single))]
                public Single VitalityPercentage;
                [Abide.Guerilla.Tags.FieldAttribute("instant responses", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("instantaneous_damage_repsonse_block", 16, typeof(InstantaneousDamageRepsonseBlock))]
                public TagBlock InstantResponses;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("g_null_block", 0, typeof(GNullBlock))]
                public TagBlock EmptyString;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("g_null_block", 0, typeof(GNullBlock))]
                public TagBlock EmptyString1;
                [Abide.Guerilla.Tags.FieldAttribute("stun time:seconds", typeof(Single))]
                public Single StunTime;
                [Abide.Guerilla.Tags.FieldAttribute("recharge time:seconds", typeof(Single))]
                public Single RechargeTime;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(4)]
                public Byte[] EmptyString2;
                [Abide.Guerilla.Tags.FieldAttribute("resurrection restored region name", typeof(StringId))]
                public StringId ResurrectionRestoredRegionName;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(4)]
                public Byte[] EmptyString3;
                public int Size
                {
                    get
                    {
                        return 68;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(104, 4)]
                public sealed class InstantaneousDamageRepsonseBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("response type", typeof(Int16))]
                    [Abide.Guerilla.Tags.OptionsAttribute(typeof(ResponseTypeOptions), false)]
                    public Int16 ResponseType;
                    [Abide.Guerilla.Tags.FieldAttribute("constraint damage type", typeof(Int16))]
                    [Abide.Guerilla.Tags.OptionsAttribute(typeof(ConstraintDamageTypeOptions), false)]
                    public Int16 ConstraintDamageType1;
                    [Abide.Guerilla.Tags.FieldAttribute("flags", typeof(Int32))]
                    [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
                    public Int32 Flags;
                    [Abide.Guerilla.Tags.FieldAttribute("damage threshold#repsonse fires after crossing this threshold.  1=full health", typeof(Single))]
                    public Single DamageThreshold;
                    [Abide.Guerilla.Tags.FieldAttribute("transition effect", typeof(TagReference))]
                    public TagReference TransitionEffect;
                    [Abide.Guerilla.Tags.FieldAttribute("damage effect", typeof(InstantaneousResponseDamageEffectStructBlock))]
                    public InstantaneousResponseDamageEffectStructBlock DamageEffect;
                    [Abide.Guerilla.Tags.FieldAttribute("region", typeof(StringId))]
                    public StringId Region;
                    [Abide.Guerilla.Tags.FieldAttribute("new state", typeof(Int16))]
                    [Abide.Guerilla.Tags.OptionsAttribute(typeof(NewStateOptions), false)]
                    public Int16 NewState;
                    [Abide.Guerilla.Tags.FieldAttribute("runtime region index*", typeof(Int16))]
                    public Int16 RuntimeRegionIndex;
                    [Abide.Guerilla.Tags.FieldAttribute("effect marker name", typeof(StringId))]
                    public StringId EffectMarkerName;
                    [Abide.Guerilla.Tags.FieldAttribute("damage effect marker", typeof(InstantaneousResponseDamageEffectMarkerStructBlock))]
                    public InstantaneousResponseDamageEffectMarkerStructBlock DamageEffectMarker;
                    [Abide.Guerilla.Tags.FieldAttribute("response delay#in seconds", typeof(Single))]
                    public Single ResponseDelay1;
                    [Abide.Guerilla.Tags.FieldAttribute("delay effect", typeof(TagReference))]
                    public TagReference DelayEffect;
                    [Abide.Guerilla.Tags.FieldAttribute("delay effect marker name", typeof(StringId))]
                    public StringId DelayEffectMarkerName;
                    [Abide.Guerilla.Tags.FieldAttribute("constraint/group name", typeof(StringId))]
                    public StringId ConstraintgroupName;
                    [Abide.Guerilla.Tags.FieldAttribute("ejecting seat label", typeof(StringId))]
                    public StringId EjectingSeatLabel;
                    [Abide.Guerilla.Tags.FieldAttribute("skip fraction", typeof(Single))]
                    public Single SkipFraction1;
                    [Abide.Guerilla.Tags.FieldAttribute("destroyed child object marker name", typeof(StringId))]
                    public StringId DestroyedChildObjectMarkerName1;
                    [Abide.Guerilla.Tags.FieldAttribute("total damage threshold", typeof(Single))]
                    public Single TotalDamageThreshold1;
                    public int Size
                    {
                        get
                        {
                            return 104;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(16, 4)]
                    public sealed class InstantaneousResponseDamageEffectStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("transition damage effect", typeof(TagReference))]
                        public TagReference TransitionDamageEffect;
                        public int Size
                        {
                            get
                            {
                                return 16;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(4, 4)]
                    public sealed class InstantaneousResponseDamageEffectMarkerStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("damage effect marker name", typeof(StringId))]
                        public StringId DamageEffectMarkerName;
                        public int Size
                        {
                            get
                            {
                                return 4;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                    public enum ResponseTypeOptions
                    {
                        ReceivesAllDamage = 0,
                        ReceivesAreaEffectDamage = 1,
                        ReceivesLocalDamage = 2,
                    }
                    public enum ConstraintDamageTypeOptions
                    {
                        None = 0,
                        DestroyOneOfGroup = 1,
                        DestroyEntireGroup = 2,
                        LoosenOneOfGroup = 3,
                        LoosenEntireGroup = 4,
                    }
                    public enum FlagsOptions
                    {
                        KillsObject = 1,
                        InhibitsMeleeAttack = 2,
                        InhibitsWeaponAttack = 4,
                        InhibitsWalking = 8,
                        ForcesDropWeapon = 16,
                        KillsWeaponPrimaryTrigger = 32,
                        KillsWeaponSecondaryTrigger = 64,
                        DestroysObject = 128,
                        DamagesWeaponPrimaryTrigger = 256,
                        DamagesWeaponSecondaryTrigger = 512,
                        LightDamageLeftTurn = 1024,
                        MajorDamageLeftTurn = 2048,
                        LightDamageRightTurn = 4096,
                        MajorDamageRightTurn = 8192,
                        LightDamageEngine = 16384,
                        MajorDamageEngine = 32768,
                        KillsObjectNoPlayerSolo = 65536,
                        CausesDetonation = 131072,
                        DestroyAllGroupConstraints = 262144,
                        KillsVariantObjects = 524288,
                        ForceUnattachedEffects = 1048576,
                        FiresUnderThreshold = 2097152,
                        TriggersSpecialDeath = 4194304,
                        OnlyOnSpecialDeath = 8388608,
                        OnlyNotOnSpecialDeath = 16777216,
                    }
                    public enum NewStateOptions
                    {
                        Default = 0,
                        MinorDamage = 1,
                        MediumDamage = 2,
                        MajorDamage = 3,
                        Destroyed = 4,
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(0, 4)]
                public sealed class GNullBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    public int Size
                    {
                        get
                        {
                            return 0;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                }
                public enum FlagsOptions
                {
                    AbsorbsBodyDamage = 1,
                    TakesFullDmgWhenObjectDies = 2,
                    CannotDieWithRiders = 4,
                    TakesFullDmgWhenObjDstryd = 8,
                    RestoredOnRessurection = 16,
                    Unused = 32,
                    Unused1 = 64,
                    Heatshottable = 128,
                    IgnoresShields = 256,
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(16, 4)]
            public sealed class GlobalDamageNodesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(2)]
                public Byte[] EmptyString;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(2)]
                public Byte[] EmptyString1;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(12)]
                public Byte[] EmptyString2;
                public int Size
                {
                    get
                    {
                        return 16;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(20, 4)]
            public sealed class DamageSeatInfoBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("seat label^", typeof(StringId))]
                public StringId SeatLabel;
                [Abide.Guerilla.Tags.FieldAttribute("direct damage scale#0==no damage, 1==full damage", typeof(Single))]
                public Single DirectDamageScale;
                [Abide.Guerilla.Tags.FieldAttribute("damage transfer fall-off radius", typeof(Single))]
                public Single DamageTransferFallOffRadius;
                [Abide.Guerilla.Tags.FieldAttribute("maximum transfer damage scale", typeof(Single))]
                public Single MaximumTransferDamageScale;
                [Abide.Guerilla.Tags.FieldAttribute("minimum transfer damage scale", typeof(Single))]
                public Single MinimumTransferDamageScale;
                public int Size
                {
                    get
                    {
                        return 20;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(20, 4)]
            public sealed class DamageConstraintInfoBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("physics model constraint name", typeof(StringId))]
                public StringId PhysicsModelConstraintName;
                [Abide.Guerilla.Tags.FieldAttribute("damage constraint name", typeof(StringId))]
                public StringId DamageConstraintName;
                [Abide.Guerilla.Tags.FieldAttribute("damage constraint group name", typeof(StringId))]
                public StringId DamageConstraintGroupName;
                [Abide.Guerilla.Tags.FieldAttribute("group probability scale", typeof(Single))]
                public Single GroupProbabilityScale;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(4)]
                public Byte[] EmptyString;
                public int Size
                {
                    get
                    {
                        return 20;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
            public enum FlagsOptions
            {
                TakesShieldDamageForChildren = 1,
                TakesBodyDamageForChildren = 2,
                AlwaysShieldsFriendlyDamage = 4,
                PassesAreaDamageToChildren = 8,
                ParentNeverTakesBodyDamageForUs = 16,
                OnlyDamagedByExplosives = 32,
                ParentNeverTakesShieldDamageForUs = 64,
                CannotDieFromDamage = 128,
                PassesAttachedDamageToRiders = 256,
            }
            public enum CollisionDamageReportingTypeOptions
            {
                TehGuardians11 = 0,
                FallingDamage = 1,
                GenericCollisionDamage = 2,
                GenericMeleeDamage = 3,
                GenericExplosion = 4,
                MagnumPistol = 5,
                PlasmaPistol = 6,
                Needler = 7,
                Smg = 8,
                PlasmaRifle = 9,
                BattleRifle = 10,
                Carbine = 11,
                Shotgun = 12,
                SniperRifle = 13,
                BeamRifle = 14,
                RocketLauncher = 15,
                FlakCannon = 16,
                BruteShot = 17,
                Disintegrator = 18,
                BrutePlasmaRifle = 19,
                EnergySword = 20,
                FragGrenade = 21,
                PlasmaGrenade = 22,
                FlagMeleeDamage = 23,
                BombMeleeDamage = 24,
                BombExplosionDamage = 25,
                BallMeleeDamage = 26,
                HumanTurret = 27,
                PlasmaTurret = 28,
                Banshee = 29,
                Ghost = 30,
                Mongoose = 31,
                Scorpion = 32,
                SpectreDriver = 33,
                SpectreGunner = 34,
                WarthogDriver = 35,
                WarthogGunner = 36,
                Wraith = 37,
                Tank = 38,
                SentinelBeam = 39,
                SentinelRpg = 40,
                Teleporter = 41,
            }
            public enum ResponseDamageReportingTypeOptions
            {
                TehGuardians11 = 0,
                FallingDamage = 1,
                GenericCollisionDamage = 2,
                GenericMeleeDamage = 3,
                GenericExplosion = 4,
                MagnumPistol = 5,
                PlasmaPistol = 6,
                Needler = 7,
                Smg = 8,
                PlasmaRifle = 9,
                BattleRifle = 10,
                Carbine = 11,
                Shotgun = 12,
                SniperRifle = 13,
                BeamRifle = 14,
                RocketLauncher = 15,
                FlakCannon = 16,
                BruteShot = 17,
                Disintegrator = 18,
                BrutePlasmaRifle = 19,
                EnergySword = 20,
                FragGrenade = 21,
                PlasmaGrenade = 22,
                FlagMeleeDamage = 23,
                BombMeleeDamage = 24,
                BombExplosionDamage = 25,
                BallMeleeDamage = 26,
                HumanTurret = 27,
                PlasmaTurret = 28,
                Banshee = 29,
                Ghost = 30,
                Mongoose = 31,
                Scorpion = 32,
                SpectreDriver = 33,
                SpectreGunner = 34,
                WarthogDriver = 35,
                WarthogGunner = 36,
                Wraith = 37,
                Tank = 38,
                SentinelBeam = 39,
                SentinelRpg = 40,
                Teleporter = 41,
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(28, 4)]
        public sealed class ModelTargetBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("marker name^#multiple markers become multiple spheres of the same radius", typeof(StringId))]
            public StringId MarkerName;
            [Abide.Guerilla.Tags.FieldAttribute("size#sphere radius", typeof(Single))]
            public Single Size1;
            [Abide.Guerilla.Tags.FieldAttribute("cone angle#the target is only visible when viewed within this angle of the marker" +
                "\'s x axis", typeof(Single))]
            public Single ConeAngle;
            [Abide.Guerilla.Tags.FieldAttribute("damage section#the target is associated with this damage section", typeof(Int16))]
            public Int16 DamageSection;
            [Abide.Guerilla.Tags.FieldAttribute("variant#the target will only appear with this variant", typeof(Int16))]
            public Int16 Variant;
            [Abide.Guerilla.Tags.FieldAttribute("targeting relevance#higher relevances turn into stronger magnetisms", typeof(Single))]
            public Single TargetingRelevance;
            [Abide.Guerilla.Tags.FieldAttribute("lock-on data", typeof(ModelTargetLockOnDataStructBlock))]
            public ModelTargetLockOnDataStructBlock LockOnData;
            public int Size
            {
                get
                {
                    return 28;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(8, 4)]
            public sealed class ModelTargetLockOnDataStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("flags", typeof(Int32))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
                public Int32 Flags;
                [Abide.Guerilla.Tags.FieldAttribute("lock on distance", typeof(Single))]
                public Single LockOnDistance;
                public int Size
                {
                    get
                    {
                        return 8;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                public enum FlagsOptions
                {
                    LockedByHumanTracking = 1,
                    LockedByPlasmaTracking = 2,
                    Headshot = 4,
                    Vulnerable = 8,
                    AlwasLockedByPlasmaTracking = 16,
                }
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(20, 4)]
        public sealed class ModelRegionBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("name*^", typeof(StringId))]
            public StringId Name;
            [Abide.Guerilla.Tags.FieldAttribute("collision region index*", typeof(Byte))]
            public Byte CollisionRegionIndex;
            [Abide.Guerilla.Tags.FieldAttribute("physics region index*", typeof(Byte))]
            public Byte PhysicsRegionIndex;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(2)]
            public Byte[] EmptyString;
            [Abide.Guerilla.Tags.FieldAttribute("permutations*", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("model_permutation_block", 32, typeof(ModelPermutationBlock))]
            public TagBlock Permutations;
            public int Size
            {
                get
                {
                    return 20;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(8, 4)]
            public sealed class ModelPermutationBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("name*^", typeof(StringId))]
                public StringId Name;
                [Abide.Guerilla.Tags.FieldAttribute("flags*", typeof(Byte))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
                public Byte Flags;
                [Abide.Guerilla.Tags.FieldAttribute("collision permutation index*", typeof(Byte))]
                public Byte CollisionPermutationIndex;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(2)]
                public Byte[] EmptyString;
                public int Size
                {
                    get
                    {
                        return 8;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                public enum FlagsOptions
                {
                    CannotBeChosenRandomly = 1,
                }
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(92, 4)]
        public sealed class ModelNodeBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("name*^", typeof(StringId))]
            public StringId Name;
            [Abide.Guerilla.Tags.FieldAttribute("parent node*", typeof(Int16))]
            public Int16 ParentNode;
            [Abide.Guerilla.Tags.FieldAttribute("first child node*", typeof(Int16))]
            public Int16 FirstChildNode;
            [Abide.Guerilla.Tags.FieldAttribute("next sibling node*", typeof(Int16))]
            public Int16 NextSiblingNode;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(2)]
            public Byte[] EmptyString;
            [Abide.Guerilla.Tags.FieldAttribute("default translation*", typeof(Vector3))]
            public Vector3 DefaultTranslation;
            [Abide.Guerilla.Tags.FieldAttribute("default rotation*", typeof(Quaternion))]
            public Quaternion DefaultRotation;
            [Abide.Guerilla.Tags.FieldAttribute("default inverse scale*", typeof(Single))]
            public Single DefaultInverseScale;
            [Abide.Guerilla.Tags.FieldAttribute("default inverse forward*", typeof(Vector3))]
            public Vector3 DefaultInverseForward;
            [Abide.Guerilla.Tags.FieldAttribute("default inverse left*", typeof(Vector3))]
            public Vector3 DefaultInverseLeft;
            [Abide.Guerilla.Tags.FieldAttribute("default inverse up*", typeof(Vector3))]
            public Vector3 DefaultInverseUp;
            [Abide.Guerilla.Tags.FieldAttribute("default inverse position*", typeof(Vector3))]
            public Vector3 DefaultInversePosition;
            public int Size
            {
                get
                {
                    return 92;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(20, 4)]
        public sealed class ModelObjectDataBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("type*", typeof(Int16))]
            [Abide.Guerilla.Tags.OptionsAttribute(typeof(TypeOptions), false)]
            public Int16 Type;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(2)]
            public Byte[] EmptyString;
            [Abide.Guerilla.Tags.FieldAttribute("offset*", typeof(Vector3))]
            public Vector3 Offset;
            [Abide.Guerilla.Tags.FieldAttribute("radius*", typeof(Single))]
            public Single Radius;
            public int Size
            {
                get
                {
                    return 20;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            public enum TypeOptions
            {
                NotSet = 0,
                UserDefined = 1,
                AutoGenerated = 2,
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(68, 4)]
        public sealed class GlobalScenarioLoadParametersBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("scenario^", typeof(TagReference))]
            public TagReference Scenario;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(32)]
            public Byte[] EmptyString;
            public int Size
            {
                get
                {
                    return 68;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
        }
        public sealed class RenderOnlyNodeFlagsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte))]
            public Byte EmptyString;
            public int Size
            {
                get
                {
                    return 0;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
        }
        public sealed class RenderOnlySectionFlagsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte))]
            public Byte EmptyString;
            public int Size
            {
                get
                {
                    return 0;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
        }
        public enum ShadowFadeDistanceOptions
        {
            FadeAtSuperHighDetailLevel = 0,
            FadeAtHighDetailLevel = 1,
            FadeAtMediumDetailLevel = 2,
            FadeAtLowDetailLevel = 3,
            FadeAtSuperLowDetailLevel = 4,
            FadeNever = 5,
        }
        public enum FlagsOptions
        {
            ActiveCamoAlwaysOn = 1,
            ActiveCamoAlwaysMerge = 2,
            ActiveCamoNeverMerge = 4,
        }
        public enum RuntimeFlagsOptions
        {
            ContainsRunTimeNodes = 1,
        }
    }
}
#pragma warning restore CS1591
