#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Abide.Guerilla.Tags
{
    using Abide.Guerilla.Types;
    using Abide.HaloLibrary;
    using System;
    
    [Abide.Guerilla.Tags.FieldSetAttribute(652, 4)]
    [Abide.Guerilla.Tags.TagGroupAttribute("user_interface_shared_globals_definition", 2003396460u, 4294967293u, typeof(UserInterfaceSharedGlobalsDefinitionBlock))]
    public sealed class UserInterfaceSharedGlobalsDefinitionBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
    {
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(2)]
        public Byte[] EmptyString;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(2)]
        public Byte[] EmptyString1;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(16)]
        public Byte[] EmptyString2;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(8)]
        public Byte[] EmptyString3;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(8)]
        public Byte[] EmptyString4;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(16)]
        public Byte[] EmptyString5;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(8)]
        public Byte[] EmptyString6;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(8)]
        public Byte[] EmptyString7;
        [Abide.Guerilla.Tags.FieldAttribute("overlayed screen alpha mod", typeof(Single))]
        public Single OverlayedScreenAlphaMod;
        [Abide.Guerilla.Tags.FieldAttribute("inc. text update period:milliseconds", typeof(Int16))]
        public Int16 IncTextUpdatePeriod;
        [Abide.Guerilla.Tags.FieldAttribute("inc. text block character:ASCII code", typeof(Int16))]
        public Int16 IncTextBlockCharacter;
        [Abide.Guerilla.Tags.FieldAttribute("callout text scale", typeof(Single))]
        public Single CalloutTextScale;
        [Abide.Guerilla.Tags.FieldAttribute("progress bar color", typeof(ColorArgbF))]
        public ColorArgbF ProgressBarColor;
        [Abide.Guerilla.Tags.FieldAttribute("near clip plane distance:objects closer than this are not drawn", typeof(Single))]
        public Single NearClipPlaneDistance;
        [Abide.Guerilla.Tags.FieldAttribute("projection plane distance:distance at which objects are rendered when z=0 (normal" +
            " size)", typeof(Single))]
        public Single ProjectionPlaneDistance;
        [Abide.Guerilla.Tags.FieldAttribute("far clip plane distance:objects farther than this are not drawn", typeof(Single))]
        public Single FarClipPlaneDistance;
        [Abide.Guerilla.Tags.FieldAttribute("overlayed interface color", typeof(ColorArgbF))]
        public ColorArgbF OverlayedInterfaceColor;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(12)]
        public Byte[] EmptyString8;
        [Abide.Guerilla.Tags.FieldAttribute("errors", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("ui_error_category_block", 100, typeof(UiErrorCategoryBlock))]
        public TagBlock Errors;
        [Abide.Guerilla.Tags.FieldAttribute("sound tag", typeof(TagReference))]
        public TagReference SoundTag;
        [Abide.Guerilla.Tags.FieldAttribute("sound tag", typeof(TagReference))]
        public TagReference SoundTag1;
        [Abide.Guerilla.Tags.FieldAttribute("sound tag", typeof(TagReference))]
        public TagReference SoundTag2;
        [Abide.Guerilla.Tags.FieldAttribute("sound tag", typeof(TagReference))]
        public TagReference SoundTag3;
        [Abide.Guerilla.Tags.FieldAttribute("sound tag", typeof(TagReference))]
        public TagReference SoundTag4;
        [Abide.Guerilla.Tags.FieldAttribute("sound tag", typeof(TagReference))]
        public TagReference SoundTag5;
        [Abide.Guerilla.Tags.FieldAttribute("sound tag", typeof(TagReference))]
        public TagReference SoundTag6;
        [Abide.Guerilla.Tags.FieldAttribute("sound tag", typeof(TagReference))]
        public TagReference SoundTag7;
        [Abide.Guerilla.Tags.FieldAttribute("sound tag", typeof(TagReference))]
        public TagReference SoundTag8;
        [Abide.Guerilla.Tags.FieldAttribute("sound tag", typeof(TagReference))]
        public TagReference SoundTag9;
        [Abide.Guerilla.Tags.FieldAttribute("sound tag", typeof(TagReference))]
        public TagReference SoundTag10;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(TagReference))]
        public TagReference EmptyString9;
        [Abide.Guerilla.Tags.FieldAttribute("sound tag", typeof(TagReference))]
        public TagReference SoundTag11;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(TagReference))]
        public TagReference EmptyString10;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(TagReference))]
        public TagReference EmptyString11;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(TagReference))]
        public TagReference EmptyString12;
        [Abide.Guerilla.Tags.FieldAttribute("global bitmaps tag", typeof(TagReference))]
        public TagReference GlobalBitmapsTag;
        [Abide.Guerilla.Tags.FieldAttribute("unicode string list tag", typeof(TagReference))]
        public TagReference UnicodeStringListTag;
        [Abide.Guerilla.Tags.FieldAttribute("screen animations", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("animation_reference_block", 64, typeof(AnimationReferenceBlock))]
        public TagBlock ScreenAnimations1;
        [Abide.Guerilla.Tags.FieldAttribute("shape groups", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("shape_group_reference_block", 64, typeof(ShapeGroupReferenceBlock))]
        public TagBlock ShapeGroups;
        [Abide.Guerilla.Tags.FieldAttribute("animations", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("persistent_background_animation_block", 100, typeof(PersistentBackgroundAnimationBlock))]
        public TagBlock Animations;
        [Abide.Guerilla.Tags.FieldAttribute("list item skins", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("list_skin_reference_block", 32, typeof(ListSkinReferenceBlock))]
        public TagBlock ListItemSkins;
        [Abide.Guerilla.Tags.FieldAttribute("button key type strings", typeof(TagReference))]
        public TagReference ButtonKeyTypeStrings;
        [Abide.Guerilla.Tags.FieldAttribute("game type strings", typeof(TagReference))]
        public TagReference GameTypeStrings;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(TagReference))]
        public TagReference EmptyString13;
        [Abide.Guerilla.Tags.FieldAttribute("skill mappings", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("skill_to_rank_mapping_block", 65535, typeof(SkillToRankMappingBlock))]
        public TagBlock SkillMappings;
        [Abide.Guerilla.Tags.FieldAttribute("full screen header text font", typeof(Int16))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(FullScreenHeaderTextFontOptions), false)]
        public Int16 FullScreenHeaderTextFont;
        [Abide.Guerilla.Tags.FieldAttribute("large dialog header text font", typeof(Int16))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(LargeDialogHeaderTextFontOptions), false)]
        public Int16 LargeDialogHeaderTextFont;
        [Abide.Guerilla.Tags.FieldAttribute("half dialog header text font", typeof(Int16))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(HalfDialogHeaderTextFontOptions), false)]
        public Int16 HalfDialogHeaderTextFont;
        [Abide.Guerilla.Tags.FieldAttribute("qtr dialog header text font", typeof(Int16))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(QtrDialogHeaderTextFontOptions), false)]
        public Int16 QtrDialogHeaderTextFont;
        [Abide.Guerilla.Tags.FieldAttribute("default text color", typeof(ColorArgbF))]
        public ColorArgbF DefaultTextColor;
        [Abide.Guerilla.Tags.FieldAttribute("full screen header text bounds", typeof(Vector2))]
        public Vector2 FullScreenHeaderTextBounds;
        [Abide.Guerilla.Tags.FieldAttribute("full screen button key text bounds", typeof(Vector2))]
        public Vector2 FullScreenButtonKeyTextBounds;
        [Abide.Guerilla.Tags.FieldAttribute("large dialog header text bounds", typeof(Vector2))]
        public Vector2 LargeDialogHeaderTextBounds;
        [Abide.Guerilla.Tags.FieldAttribute("large dialog button key text bounds", typeof(Vector2))]
        public Vector2 LargeDialogButtonKeyTextBounds;
        [Abide.Guerilla.Tags.FieldAttribute("half dialog header text bounds", typeof(Vector2))]
        public Vector2 HalfDialogHeaderTextBounds;
        [Abide.Guerilla.Tags.FieldAttribute("half dialog button key text bounds", typeof(Vector2))]
        public Vector2 HalfDialogButtonKeyTextBounds;
        [Abide.Guerilla.Tags.FieldAttribute("qtr dialog header text bounds", typeof(Vector2))]
        public Vector2 QtrDialogHeaderTextBounds;
        [Abide.Guerilla.Tags.FieldAttribute("qtr dialog button key text bounds", typeof(Vector2))]
        public Vector2 QtrDialogButtonKeyTextBounds;
        [Abide.Guerilla.Tags.FieldAttribute("main menu music", typeof(TagReference))]
        public TagReference MainMenuMusic1;
        [Abide.Guerilla.Tags.FieldAttribute("music fade time:milliseconds", typeof(Int32))]
        public Int32 MusicFadeTime;
        public int Size
        {
            get
            {
                return 652;
            }
        }
        public void Initialize()
        {
        }
        public void Read(System.IO.BinaryReader reader)
        {
        }
        public void Write(System.IO.BinaryWriter writer)
        {
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(52, 4)]
        public sealed class UiErrorCategoryBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("category name^", typeof(StringId))]
            public StringId CategoryName;
            [Abide.Guerilla.Tags.FieldAttribute("flags", typeof(Int16))]
            [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
            public Int16 Flags;
            [Abide.Guerilla.Tags.FieldAttribute("default button", typeof(Byte))]
            [Abide.Guerilla.Tags.OptionsAttribute(typeof(DefaultButtonOptions), false)]
            public Byte DefaultButton;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(1)]
            public Byte[] EmptyString;
            [Abide.Guerilla.Tags.FieldAttribute("string tag", typeof(TagReference))]
            public TagReference StringTag;
            [Abide.Guerilla.Tags.FieldAttribute("default title", typeof(StringId))]
            public StringId DefaultTitle;
            [Abide.Guerilla.Tags.FieldAttribute("default message", typeof(StringId))]
            public StringId DefaultMessage;
            [Abide.Guerilla.Tags.FieldAttribute("default ok", typeof(StringId))]
            public StringId DefaultOk;
            [Abide.Guerilla.Tags.FieldAttribute("default cancel", typeof(StringId))]
            public StringId DefaultCancel;
            [Abide.Guerilla.Tags.FieldAttribute("error block", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("ui_error_block", 100, typeof(UiErrorBlock))]
            public TagBlock ErrorBlock;
            public int Size
            {
                get
                {
                    return 52;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(24, 4)]
            public sealed class UiErrorBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("error", typeof(Int32))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(ErrorOptions), false)]
                public Int32 Error;
                [Abide.Guerilla.Tags.FieldAttribute("flags", typeof(Int16))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
                public Int16 Flags;
                [Abide.Guerilla.Tags.FieldAttribute("default button", typeof(Byte))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(DefaultButtonOptions), false)]
                public Byte DefaultButton;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(1)]
                public Byte[] EmptyString;
                [Abide.Guerilla.Tags.FieldAttribute("title", typeof(StringId))]
                public StringId Title;
                [Abide.Guerilla.Tags.FieldAttribute("message", typeof(StringId))]
                public StringId Message;
                [Abide.Guerilla.Tags.FieldAttribute("ok", typeof(StringId))]
                public StringId Ok;
                [Abide.Guerilla.Tags.FieldAttribute("cancel", typeof(StringId))]
                public StringId Cancel;
                public int Size
                {
                    get
                    {
                        return 24;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                public enum ErrorOptions
                {
                    ErrorUnknown = 0,
                    ErrorGeneric = 1,
                    ErrorGenericNetworking = 2,
                    ErrorSystemLinkGenericJoinFailure = 3,
                    ErrorSystemLinkNoNetworkConnection = 4,
                    ErrorSystemLinkConnectionLost = 5,
                    ErrorNetworkGameOos = 6,
                    ErrorXboxLiveSignOutConfirmation = 7,
                    ErrorConfirmRevertToLastSave = 8,
                    ErrorConfirmQuitWithoutSave = 9,
                    ErrorConfirmDeletePlayerProfile = 10,
                    ErrorConfirmDeleteVariantFile = 11,
                    ErrorPlayerProfileCreationFailed = 12,
                    ErrorVariantProfileCreationFailed = 13,
                    ErrorPlaylistCreationFailed = 14,
                    ErrorCoreFileLoadFailed = 15,
                    ErrorMuRemovedDuringPlayerProfileSave = 16,
                    ErrorMuRemovedDuringVariantSave = 17,
                    ErrorMuRemovedDuringPlaylistSave = 18,
                    ErrorMessageSavingToMu = 19,
                    ErrorMessageSavingFile = 20,
                    ErrorMessageCreatingPlayerProfile = 21,
                    ErrorMessageCreatingVariantProfile = 22,
                    ErrorMessageSavingCheckpoint = 23,
                    ErrorFailedToLoadPlayerProfile = 24,
                    ErrorFailedToLoadVariant = 25,
                    ErrorFailedToLoadPlaylist = 26,
                    ErrorFailedToLoadSaveGame = 27,
                    ErrorController1Removed = 28,
                    ErrorController2Removed = 29,
                    ErrorController3Removed = 30,
                    ErrorController4Removed = 31,
                    ErrorNeedMoreFreeBlocksToSave = 32,
                    ErrorMaximumSavedGameFilesAlreadyExist = 33,
                    ErrorDirtyDisk = 34,
                    ErrorXbliveCannotAccessService = 35,
                    ErrorXbliveTitleUpdateRequired = 36,
                    ErrorXbliveServersTooBusy = 37,
                    ErrorXbliveDuplicateLogon = 38,
                    ErrorXbliveAccountManagementRequired = 39,
                    ErrorWarningXbliveRecommendedMessagesAvailable = 40,
                    ErrorXbliveInvalidMatchSession = 41,
                    ErrorWarningXblivePoorNetworkPerformance = 42,
                    ErrorNotEnoughOpenSlotsToJoinMatchSession = 43,
                    ErrorXbliveCorruptDownloadContent = 44,
                    ErrorConfirmXbliveCorruptSavedGameFileRemoval = 45,
                    ErrorXbliveInvalidUserAccount = 46,
                    ErrorConfirmBootClanMember = 47,
                    ErrorConfirmControllerSignOut = 48,
                    ErrorBetaXbliveServiceQosReport = 49,
                    ErrorBetaFeatureDisabled = 50,
                    ErrorBetaNetworkConnectionRequired = 51,
                    ErrorConfirmFriendRemoval = 52,
                    ErrorConfirmBootToDash = 53,
                    ErrorConfirmLaunchXdemos = 54,
                    ErrorConfirmExitGameSession = 55,
                    ErrorXbliveConnectionToXboxLiveLost = 56,
                    ErrorXbliveMessageSendFailure = 57,
                    ErrorNetworkLinkLost = 58,
                    ErrorNetworkLinkRequired = 59,
                    ErrorXbliveInvalidPasscode = 60,
                    ErrorJoinAborted = 61,
                    ErrorJoinSessionNotFound = 62,
                    ErrorJoinQosFailure = 63,
                    ErrorJoinDataDecodeFailure = 64,
                    ErrorJoinGameFull = 65,
                    ErrorJoinGameClosed = 66,
                    ErrorJoinVersionMismatch = 67,
                    ErrorJoinFailedUnknownReason = 68,
                    ErrorJoinFailedFriendInMatchmadeGame = 69,
                    ErrorPlayerProfileNameMustBeUnique = 70,
                    ErrorVariantNameMustBeUnique = 71,
                    ErrorPlaylistNameMustBeUnique = 72,
                    ErrorSavedFilmNameMustBeUnique = 73,
                    ErrorNoFreeSlotsPlayerProfile = 74,
                    ErrorNoFreeSlotsVariant = 75,
                    ErrorNoFreeSlotsPlaylist = 76,
                    ErrorNoFreeSlotsSavedFilm = 77,
                    ErrorNeedMoreSpaceForPlayerProfile = 78,
                    ErrorNeedMoreSpaceForVariant = 79,
                    ErrorNeedMoreSpaceForPlaylist = 80,
                    ErrorNeedMoreSpaceForSavedFilm = 81,
                    ErrorCannotSetPrivilegesOnMemberWhoseDataNotKnown = 82,
                    ErrorCantDeleteDefaultProfile = 83,
                    ErrorCantDeleteDefaultVariant = 84,
                    ErrorCantDeleteDefaultPlaylist = 85,
                    ErrorCantDeleteDefaultSavedFilm = 86,
                    ErrorCantDeleteProfileInUse = 87,
                    ErrorPlayerProfileNameMustHaveAlphanumericCharacters = 88,
                    ErrorVariantNameMustHaveAlphanumericCharacters = 89,
                    ErrorPlaylistNameMustHaveAlphanumericCharacters = 90,
                    ErrorSavedFilmNameMustHaveAlphanumericCharacters = 91,
                    ErrorTeamsNotAMember = 92,
                    ErrorTeamsInsufficientPrivileges = 93,
                    ErrorTeamsServerBusy = 94,
                    ErrorTeamsTeamFull = 95,
                    ErrorTeamsMemberPending = 96,
                    ErrorTeamsTooManyRequests = 97,
                    ErrorTeamsUserAlreadyExists = 98,
                    ErrorTeamsUserNotFound = 99,
                    ErrorTeamsUserTeamsFull = 100,
                    ErrorTeamsNoTask = 101,
                    ErrorTeamsTooManyTeams = 102,
                    ErrorTeamsTeamAlreadyExists = 103,
                    ErrorTeamsTeamNotFound = 104,
                    ErrorTeamsNameContainsBadWords = 105,
                    ErrorTeamsDescriptionContainsBadWords = 106,
                    ErrorTeamsMottoContainsBadWords = 107,
                    ErrorTeamsUrlContainsBadWords = 108,
                    ErrorTeamsNoAdmin = 109,
                    ErrorTeamsCannotSetPrivilegesOnMemberWhoseDataNotKnown = 110,
                    ErrorLiveUnknown = 111,
                    ErrorConfirmDeleteProfile = 112,
                    ErrorConfirmDeletePlaylist = 113,
                    ErrorConfirmDeleteSavedFilm = 114,
                    ErrorConfirmLiveSignOut = 115,
                    ErrorConfirmConfirmFriendRemoval = 116,
                    ErrorConfirmPromotionToSuperuser = 117,
                    ErrorWarnNoMoreClanSuperusers = 118,
                    ErrorConfirmCorruptProfile = 119,
                    ErrorConfirmXboxLiveSignOut = 120,
                    ErrorConfirmCorruptGameVariant = 121,
                    ErrorConfirmLeaveClan = 122,
                    ErrorConfirmCorruptPlaylist = 123,
                    ErrorCantJoinGameinviteWithoutSignon = 124,
                    ErrorConfirmProceedToCrossgameInvite = 125,
                    ErrorConfirmDeclineCrossgameInvite = 126,
                    ErrorWarnInsertCdForCrossgameInvite = 127,
                    ErrorNeedMoreSpaceForSavedGame = 128,
                    ErrorSavedGameCannotBeLoaded = 129,
                    ErrorConfirmControllerSignoutWithGuests = 130,
                    ErrorWarningPartyClosed = 131,
                    ErrorWarningPartyRequired = 132,
                    ErrorWarningPartyFull = 133,
                    ErrorWarningPlayerInMmGame = 134,
                    ErrorXbliveFailedToSignIn = 135,
                    ErrorCantSignOutMasterWithGuests = 136,
                    ErrorObsoleteDotCommand = 137,
                    ErrorNotUnlocked = 138,
                    ConfirmLeaveLobby = 139,
                    ErrorConfirmPartyLeaderLeaveMatchmaking = 140,
                    ErrorConfirmSingleBoxLeaveMatchmaking = 141,
                    ErrorInvalidClanName = 142,
                    ErrorPlayerListFull = 143,
                    ErrorBlockedByPlayer = 144,
                    ErrorFriendPending = 145,
                    ErrorTooManyRequests = 146,
                    ErrorPlayerAlreadyInList = 147,
                    ErrorGamertagNotFound = 148,
                    ErrorCannotMessageSelf = 149,
                    ErrorWarningLastOverlordCantLeaveClan = 150,
                    ErrorConfirmBootPlayer = 151,
                    ErrorConfirmPartyMemberLeavePcr = 152,
                    ErrorCannotSignInDuringCountdown = 153,
                    ErrorXblInvalidUser = 154,
                    ErrorXblUserNotAuthorized = 155,
                    Obsolete = 156,
                    Obsolete2 = 157,
                    ErrorXblBannedXbox = 158,
                    ErrorXblBannedUser = 159,
                    ErrorXblBannedTitle = 160,
                    ErrorConfirmExitGameSessionLeader = 161,
                    ErrorMessageObjectionableContent = 162,
                    ErrorConfirmEnterDownloader = 163,
                    ErrorConfirmBlockUser = 164,
                    ErrorConfirmNegativeFeedback = 165,
                    ErrorConfirmChangeClanMemberLevel = 166,
                    ErrorBlankGamertag = 167,
                    ConfirmSaveAndQuitGame = 168,
                    ErrorCantJoinDuringMatchmaking = 169,
                    ErrorConfirmRestartLevel = 170,
                    MatchmakingFailureGeneric = 171,
                    MatchmakingFailureMissingContent = 172,
                    MatchmakingFailureAborted = 173,
                    MatchmakingFailureMembershipChanged = 174,
                    ConfirmEndGameSession = 175,
                    ConfirmExitGameSessionOnlyPlayer = 176,
                    ConfirmExitGameSessionXboxLiveRankedLeader = 177,
                    ConfirmExitGameSessionXboxLiveRanked = 178,
                    ConfirmExitGameSessionXboxLiveLeader = 179,
                    ConfirmExitGameSessionXboxLiveOnlyPlayer = 180,
                    ConfirmExitGameSessionXboxLive = 181,
                    RecipientsListFull = 182,
                    ConfirmQuitCampaignNoSave = 183,
                    XbliveConnectionToXboxLiveLostSaveAndQuit = 184,
                    BootedFromSession = 185,
                    ConfirmExitGameSessionXboxLiveGuest = 186,
                    ConfirmExitGameSessionXboxLiveRankedOnlyPlayer = 187,
                    ConfirmExitGameSessionXboxLiveUnrankedOnlyPlayer = 188,
                    ConfirmExitGameSessionXboxLiveUnrankedLeader = 189,
                    ConfirmExitGameSessionXboxLiveUnranked = 190,
                    CantJoinFriendWhileInMatchmadeGame = 191,
                    MapLoadFailure = 192,
                    ErrorAchievementsInterrupted = 193,
                    ConfirmLoseProgress = 194,
                    ErrorBetaAchievementsDisabled = 195,
                    ErrorCannotConnectVersionsWrong = 196,
                    ConfirmBootedFromSession = 197,
                    ConfirmBootPlayerFromSquad = 198,
                    ConfirmLeaveSystemLinkLobby = 199,
                    ConfirmPartyMemberLeaveMatchmaking = 200,
                    ConfirmQuitSinglePlayer = 201,
                    ErrorControllerRemoved = 202,
                    ErrorDownloadInProgress = 203,
                    ErrorDownloadFail = 204,
                    ErrorFailedToLoadMap = 205,
                    ErrorFeatureRequiresGold = 206,
                    ErrorKeyboardMapping = 207,
                    ErrorKeyboardRemoved = 208,
                    ErrorLiveGameUnavailable = 209,
                    ErrorMapMissing = 210,
                    ErrorMatchmakingFailedGeneric = 211,
                    ErrorMatchmakingFailedMissingContent = 212,
                    ErrorMouseRemoved = 213,
                    ErrorPartyNotAllOnLive = 214,
                    ErrorPartySubnetNotShared = 215,
                    ErrorRequiredGameUpdate = 216,
                    ErrorSavedGameCannotBeSaved = 217,
                    ErrorSoundMicrophoneNotSupported = 218,
                    ErrorSystemLinkDirectIp = 219,
                    ErrorTextChatMuted = 220,
                    ErrorTextChatParentalControls = 221,
                    ErrorUpdateStart = 222,
                    ErrorUpdateFail = 223,
                    ErrorUpdateFailBlocks = 224,
                    ErrorUpdateExists = 225,
                    ErrorInsertOriginal = 226,
                    ErrorUpdateFailNetworkLost = 227,
                    ErrorUpdateMpOutOfSync = 228,
                    ErrorUpdateMustUpgrade = 229,
                    ErrorVoiceGoldRequired = 230,
                    ErrorVoiceParentalControls = 231,
                    ErrorWarningXblivePoorNetworkPerofrmance = 232,
                    ErrorYouMissingMap = 233,
                    ErrorSomeoneMissingMap = 234,
                    ErrorTnpNoSource = 235,
                    ErrorTnpDiskRead = 236,
                    ErrorTnpNoEngineRunning = 237,
                    ErrorTnpSignatureVerification = 238,
                    ErrorTnpDriveRemoved = 239,
                    ErrorTnpDiskFull = 240,
                    ErrorTnpPermissions = 241,
                    ErrorTnpUnknown = 242,
                    ContinueInstall = 243,
                    CancelInstall = 244,
                    ErrorConfirmUpsellGold = 245,
                    ErrorAddToFavorites = 246,
                    ErrorRemoveFromFavorites = 247,
                    ErrorUpdatingFavorites = 248,
                    ChooseExistingCheckpointLocation = 249,
                    ChooseNewCheckpointLocationCheckpointsExistOnLiveAndLocal = 250,
                    ChooseNewCheckpointLocationCheckpointsExistOnLive = 251,
                    ChooseNewCheckpointLocationCheckpointsExistLocally = 252,
                    Xxx = 253,
                }
                public enum FlagsOptions
                {
                    UseLargeDialog = 1,
                }
                public enum DefaultButtonOptions
                {
                    NoDefault = 0,
                    DefaultOk = 1,
                    DefaultCancel = 2,
                }
            }
            public enum FlagsOptions
            {
                UseLargeDialog = 1,
            }
            public enum DefaultButtonOptions
            {
                NoDefault = 0,
                DefaultOk = 1,
                DefaultCancel = 2,
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(56, 4)]
        public sealed class AnimationReferenceBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("flags", typeof(Int32))]
            [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
            public Int32 Flags;
            [Abide.Guerilla.Tags.FieldAttribute("animation period:milliseconds", typeof(Int32))]
            public Int32 AnimationPeriod;
            [Abide.Guerilla.Tags.FieldAttribute("keyframes", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("screen_animation_keyframe_reference_block", 64, typeof(ScreenAnimationKeyframeReferenceBlock))]
            public TagBlock Keyframes;
            [Abide.Guerilla.Tags.FieldAttribute("animation period:milliseconds", typeof(Int32))]
            public Int32 AnimationPeriod1;
            [Abide.Guerilla.Tags.FieldAttribute("keyframes", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("screen_animation_keyframe_reference_block", 64, typeof(ScreenAnimationKeyframeReferenceBlock))]
            public TagBlock Keyframes1;
            [Abide.Guerilla.Tags.FieldAttribute("animation period:milliseconds", typeof(Int32))]
            public Int32 AnimationPeriod2;
            [Abide.Guerilla.Tags.FieldAttribute("ambient animation looping style", typeof(Int16))]
            [Abide.Guerilla.Tags.OptionsAttribute(typeof(AmbientAnimationLoopingStyleOptions), false)]
            public Int16 AmbientAnimationLoopingStyle;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(2)]
            public Byte[] EmptyString4;
            [Abide.Guerilla.Tags.FieldAttribute("keyframes", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("screen_animation_keyframe_reference_block", 64, typeof(ScreenAnimationKeyframeReferenceBlock))]
            public TagBlock Keyframes2;
            public int Size
            {
                get
                {
                    return 56;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(20, 4)]
            public sealed class ScreenAnimationKeyframeReferenceBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(4)]
                public Byte[] EmptyString;
                [Abide.Guerilla.Tags.FieldAttribute("alpha", typeof(Single))]
                public Single Alpha;
                [Abide.Guerilla.Tags.FieldAttribute("position", typeof(Vector3))]
                public Vector3 Position;
                public int Size
                {
                    get
                    {
                        return 20;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
            public enum FlagsOptions
            {
                Unused = 1,
            }
            public enum AmbientAnimationLoopingStyleOptions
            {
                None = 0,
                ReverseLoop = 1,
                Loop = 2,
                DontLoop = 3,
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(36, 4)]
        public sealed class ShapeGroupReferenceBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("shapes", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("shape_block_reference_block", 32, typeof(ShapeBlockReferenceBlock))]
            public TagBlock Shapes;
            [Abide.Guerilla.Tags.FieldAttribute("model scene blocks", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("ui_model_scene_reference_block", 32, typeof(UiModelSceneReferenceBlock))]
            public TagBlock ModelSceneBlocks;
            [Abide.Guerilla.Tags.FieldAttribute("bitmap blocks", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("bitmap_block_reference_block", 64, typeof(BitmapBlockReferenceBlock))]
            public TagBlock BitmapBlocks;
            public int Size
            {
                get
                {
                    return 36;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(52, 4)]
            public sealed class ShapeBlockReferenceBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("flags", typeof(Int32))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
                public Int32 Flags;
                [Abide.Guerilla.Tags.FieldAttribute("animation index", typeof(Int16))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(AnimationIndexOptions), false)]
                public Int16 AnimationIndex;
                [Abide.Guerilla.Tags.FieldAttribute("intro animation delay milliseconds", typeof(Int16))]
                public Int16 IntroAnimationDelayMilliseconds;
                [Abide.Guerilla.Tags.FieldAttribute("color", typeof(ColorArgbF))]
                public ColorArgbF Color;
                [Abide.Guerilla.Tags.FieldAttribute("points", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("point_block_reference_block", 16, typeof(PointBlockReferenceBlock))]
                public TagBlock Points;
                [Abide.Guerilla.Tags.FieldAttribute("render depth bias", typeof(Int16))]
                public Int16 RenderDepthBias;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(14)]
                public Byte[] EmptyString;
                public int Size
                {
                    get
                    {
                        return 52;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(4, 4)]
                public sealed class PointBlockReferenceBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("coordinates", typeof(Vector2))]
                    public Vector2 Coordinates;
                    public int Size
                    {
                        get
                        {
                            return 4;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                }
                public enum FlagsOptions
                {
                    Unused = 1,
                }
                public enum AnimationIndexOptions
                {
                    None = 0,
                    _00 = 1,
                    _01 = 2,
                    _02 = 3,
                    _03 = 4,
                    _04 = 5,
                    _05 = 6,
                    _06 = 7,
                    _07 = 8,
                    _08 = 9,
                    _09 = 10,
                    _10 = 11,
                    _11 = 12,
                    _12 = 13,
                    _13 = 14,
                    _14 = 15,
                    _15 = 16,
                    _16 = 17,
                    _17 = 18,
                    _18 = 19,
                    _19 = 20,
                    _20 = 21,
                    _21 = 22,
                    _22 = 23,
                    _23 = 24,
                    _24 = 25,
                    _25 = 26,
                    _26 = 27,
                    _27 = 28,
                    _28 = 29,
                    _29 = 30,
                    _30 = 31,
                    _31 = 32,
                    _32 = 33,
                    _33 = 34,
                    _34 = 35,
                    _35 = 36,
                    _36 = 37,
                    _37 = 38,
                    _38 = 39,
                    _39 = 40,
                    _40 = 41,
                    _41 = 42,
                    _42 = 43,
                    _43 = 44,
                    _44 = 45,
                    _45 = 46,
                    _46 = 47,
                    _47 = 48,
                    _48 = 49,
                    _49 = 50,
                    _50 = 51,
                    _51 = 52,
                    _52 = 53,
                    _53 = 54,
                    _54 = 55,
                    _55 = 56,
                    _56 = 57,
                    _57 = 58,
                    _58 = 59,
                    _59 = 60,
                    _60 = 61,
                    _61 = 62,
                    _62 = 63,
                    _63 = 64,
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(84, 4)]
            public sealed class UiModelSceneReferenceBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("flags", typeof(Int32))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
                public Int32 Flags;
                [Abide.Guerilla.Tags.FieldAttribute("animation index", typeof(Int16))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(AnimationIndexOptions), false)]
                public Int16 AnimationIndex;
                [Abide.Guerilla.Tags.FieldAttribute("intro animation delay milliseconds", typeof(Int16))]
                public Int16 IntroAnimationDelayMilliseconds;
                [Abide.Guerilla.Tags.FieldAttribute("render depth bias", typeof(Int16))]
                public Int16 RenderDepthBias;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(2)]
                public Byte[] EmptyString;
                [Abide.Guerilla.Tags.FieldAttribute("objects", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("ui_object_reference_block", 32, typeof(UiObjectReferenceBlock))]
                public TagBlock Objects;
                [Abide.Guerilla.Tags.FieldAttribute("lights", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("ui_light_reference_block", 8, typeof(UiLightReferenceBlock))]
                public TagBlock Lights;
                [Abide.Guerilla.Tags.FieldAttribute("animation scale factor", typeof(Vector3))]
                public Vector3 AnimationScaleFactor;
                [Abide.Guerilla.Tags.FieldAttribute("camera position", typeof(Vector3))]
                public Vector3 CameraPosition;
                [Abide.Guerilla.Tags.FieldAttribute("fov degress", typeof(Single))]
                public Single FovDegress;
                [Abide.Guerilla.Tags.FieldAttribute("ui viewport", typeof(Vector2))]
                public Vector2 UiViewport;
                [Abide.Guerilla.Tags.FieldAttribute("UNUSED intro anim", typeof(StringId))]
                public StringId UnusedIntroAnim;
                [Abide.Guerilla.Tags.FieldAttribute("UNUSED outro anim", typeof(StringId))]
                public StringId UnusedOutroAnim;
                [Abide.Guerilla.Tags.FieldAttribute("UNUSED ambient anim", typeof(StringId))]
                public StringId UnusedAmbientAnim;
                public int Size
                {
                    get
                    {
                        return 84;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(32, 4)]
                public sealed class UiObjectReferenceBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("name", typeof(String32))]
                    public String32 Name;
                    public int Size
                    {
                        get
                        {
                            return 32;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(32, 4)]
                public sealed class UiLightReferenceBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("name", typeof(String32))]
                    public String32 Name;
                    public int Size
                    {
                        get
                        {
                            return 32;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                }
                public enum FlagsOptions
                {
                    Unused = 1,
                }
                public enum AnimationIndexOptions
                {
                    None = 0,
                    _00 = 1,
                    _01 = 2,
                    _02 = 3,
                    _03 = 4,
                    _04 = 5,
                    _05 = 6,
                    _06 = 7,
                    _07 = 8,
                    _08 = 9,
                    _09 = 10,
                    _10 = 11,
                    _11 = 12,
                    _12 = 13,
                    _13 = 14,
                    _14 = 15,
                    _15 = 16,
                    _16 = 17,
                    _17 = 18,
                    _18 = 19,
                    _19 = 20,
                    _20 = 21,
                    _21 = 22,
                    _22 = 23,
                    _23 = 24,
                    _24 = 25,
                    _25 = 26,
                    _26 = 27,
                    _27 = 28,
                    _28 = 29,
                    _29 = 30,
                    _30 = 31,
                    _31 = 32,
                    _32 = 33,
                    _33 = 34,
                    _34 = 35,
                    _35 = 36,
                    _36 = 37,
                    _37 = 38,
                    _38 = 39,
                    _39 = 40,
                    _40 = 41,
                    _41 = 42,
                    _42 = 43,
                    _43 = 44,
                    _44 = 45,
                    _45 = 46,
                    _46 = 47,
                    _47 = 48,
                    _48 = 49,
                    _49 = 50,
                    _50 = 51,
                    _51 = 52,
                    _52 = 53,
                    _53 = 54,
                    _54 = 55,
                    _55 = 56,
                    _56 = 57,
                    _57 = 58,
                    _58 = 59,
                    _59 = 60,
                    _60 = 61,
                    _61 = 62,
                    _62 = 63,
                    _63 = 64,
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(64, 4)]
            public sealed class BitmapBlockReferenceBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("flags", typeof(Int32))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
                public Int32 Flags;
                [Abide.Guerilla.Tags.FieldAttribute("animation index", typeof(Int16))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(AnimationIndexOptions), false)]
                public Int16 AnimationIndex;
                [Abide.Guerilla.Tags.FieldAttribute("intro animation delay milliseconds", typeof(Int16))]
                public Int16 IntroAnimationDelayMilliseconds;
                [Abide.Guerilla.Tags.FieldAttribute("bitmap blend method", typeof(Int16))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(BitmapBlendMethodOptions), false)]
                public Int16 BitmapBlendMethod;
                [Abide.Guerilla.Tags.FieldAttribute("initial sprite frame", typeof(Int16))]
                public Int16 InitialSpriteFrame;
                [Abide.Guerilla.Tags.FieldAttribute("top-left", typeof(Vector2))]
                public Vector2 TopLeft;
                [Abide.Guerilla.Tags.FieldAttribute("horiz texture wraps/second", typeof(Single))]
                public Single HorizTextureWrapssecond;
                [Abide.Guerilla.Tags.FieldAttribute("vert texture wraps/second", typeof(Single))]
                public Single VertTextureWrapssecond;
                [Abide.Guerilla.Tags.FieldAttribute("bitmap tag", typeof(TagReference))]
                public TagReference BitmapTag;
                [Abide.Guerilla.Tags.FieldAttribute("render depth bias", typeof(Int16))]
                public Int16 RenderDepthBias;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(2)]
                public Byte[] EmptyString;
                [Abide.Guerilla.Tags.FieldAttribute("sprite animation speed fps", typeof(Single))]
                public Single SpriteAnimationSpeedFps;
                [Abide.Guerilla.Tags.FieldAttribute("progress bottom-left", typeof(Vector2))]
                public Vector2 ProgressBottomLeft;
                [Abide.Guerilla.Tags.FieldAttribute("string identifier", typeof(StringId))]
                public StringId StringIdentifier;
                [Abide.Guerilla.Tags.FieldAttribute("progress scale", typeof(Vector2))]
                public Vector2 ProgressScale;
                public int Size
                {
                    get
                    {
                        return 64;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                public enum FlagsOptions
                {
                    IgnoreForListSkinSizeCalculation = 1,
                    SwapOnRelativeListPosition = 2,
                    RenderAsProgressBar = 4,
                }
                public enum AnimationIndexOptions
                {
                    None = 0,
                    _00 = 1,
                    _01 = 2,
                    _02 = 3,
                    _03 = 4,
                    _04 = 5,
                    _05 = 6,
                    _06 = 7,
                    _07 = 8,
                    _08 = 9,
                    _09 = 10,
                    _10 = 11,
                    _11 = 12,
                    _12 = 13,
                    _13 = 14,
                    _14 = 15,
                    _15 = 16,
                    _16 = 17,
                    _17 = 18,
                    _18 = 19,
                    _19 = 20,
                    _20 = 21,
                    _21 = 22,
                    _22 = 23,
                    _23 = 24,
                    _24 = 25,
                    _25 = 26,
                    _26 = 27,
                    _27 = 28,
                    _28 = 29,
                    _29 = 30,
                    _30 = 31,
                    _31 = 32,
                    _32 = 33,
                    _33 = 34,
                    _34 = 35,
                    _35 = 36,
                    _36 = 37,
                    _37 = 38,
                    _38 = 39,
                    _39 = 40,
                    _40 = 41,
                    _41 = 42,
                    _42 = 43,
                    _43 = 44,
                    _44 = 45,
                    _45 = 46,
                    _46 = 47,
                    _47 = 48,
                    _48 = 49,
                    _49 = 50,
                    _50 = 51,
                    _51 = 52,
                    _52 = 53,
                    _53 = 54,
                    _54 = 55,
                    _55 = 56,
                    _56 = 57,
                    _57 = 58,
                    _58 = 59,
                    _59 = 60,
                    _60 = 61,
                    _61 = 62,
                    _62 = 63,
                    _63 = 64,
                }
                public enum BitmapBlendMethodOptions
                {
                    Standard = 0,
                    Multiply = 1,
                    Unused = 2,
                }
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(20, 4)]
        public sealed class PersistentBackgroundAnimationBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString;
            [Abide.Guerilla.Tags.FieldAttribute("animation period:milliseconds", typeof(Int32))]
            public Int32 AnimationPeriod;
            [Abide.Guerilla.Tags.FieldAttribute("interpolated keyframes", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("background_animation_keyframe_reference_block", 64, typeof(BackgroundAnimationKeyframeReferenceBlock))]
            public TagBlock InterpolatedKeyframes;
            public int Size
            {
                get
                {
                    return 20;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(20, 4)]
            public sealed class BackgroundAnimationKeyframeReferenceBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("start transition index", typeof(Int32))]
                public Int32 StartTransitionIndex;
                [Abide.Guerilla.Tags.FieldAttribute("alpha", typeof(Single))]
                public Single Alpha;
                [Abide.Guerilla.Tags.FieldAttribute("position", typeof(Vector3))]
                public Vector3 Position;
                public int Size
                {
                    get
                    {
                        return 20;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(16, 4)]
        public sealed class ListSkinReferenceBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("list item skins", typeof(TagReference))]
            public TagReference ListItemSkins;
            public int Size
            {
                get
                {
                    return 16;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(4, 4)]
        public sealed class SkillToRankMappingBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            public int Size
            {
                get
                {
                    return 4;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
        }
        public enum FullScreenHeaderTextFontOptions
        {
            Terminal = 0,
            BodyText = 1,
            Title = 2,
            SuperLargeFont = 3,
            LargeBodyText = 4,
            SplitScreenHudMessage = 5,
            FullScreenHudMessage = 6,
            EnglishBodyText = 7,
            HudNumberText = 8,
            SubtitleFont = 9,
            MainMenuFont = 10,
            TextChatFont = 11,
        }
        public enum LargeDialogHeaderTextFontOptions
        {
            Terminal = 0,
            BodyText = 1,
            Title = 2,
            SuperLargeFont = 3,
            LargeBodyText = 4,
            SplitScreenHudMessage = 5,
            FullScreenHudMessage = 6,
            EnglishBodyText = 7,
            HudNumberText = 8,
            SubtitleFont = 9,
            MainMenuFont = 10,
            TextChatFont = 11,
        }
        public enum HalfDialogHeaderTextFontOptions
        {
            Terminal = 0,
            BodyText = 1,
            Title = 2,
            SuperLargeFont = 3,
            LargeBodyText = 4,
            SplitScreenHudMessage = 5,
            FullScreenHudMessage = 6,
            EnglishBodyText = 7,
            HudNumberText = 8,
            SubtitleFont = 9,
            MainMenuFont = 10,
            TextChatFont = 11,
        }
        public enum QtrDialogHeaderTextFontOptions
        {
            Terminal = 0,
            BodyText = 1,
            Title = 2,
            SuperLargeFont = 3,
            LargeBodyText = 4,
            SplitScreenHudMessage = 5,
            FullScreenHudMessage = 6,
            EnglishBodyText = 7,
            HudNumberText = 8,
            SubtitleFont = 9,
            MainMenuFont = 10,
            TextChatFont = 11,
        }
    }
}
#pragma warning restore CS1591
