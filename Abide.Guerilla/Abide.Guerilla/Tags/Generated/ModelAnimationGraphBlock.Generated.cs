#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Abide.Guerilla.Tags
{
    using Abide.Guerilla.Types;
    using Abide.HaloLibrary;
    using System;
    
    [Abide.Guerilla.Tags.FieldSetAttribute(236, 4)]
    [Abide.Guerilla.Tags.TagGroupAttribute("model_animation_graph", 1785553252u, 4294967293u, typeof(ModelAnimationGraphBlock))]
    public sealed class ModelAnimationGraphBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
    {
        [Abide.Guerilla.Tags.FieldAttribute("resources", typeof(AnimationGraphResourcesStructBlock))]
        public AnimationGraphResourcesStructBlock Resources;
        [Abide.Guerilla.Tags.FieldAttribute("content", typeof(AnimationGraphContentsStructBlock))]
        public AnimationGraphContentsStructBlock Content;
        [Abide.Guerilla.Tags.FieldAttribute("run time data", typeof(ModelAnimationRuntimeDataStructBlock))]
        public ModelAnimationRuntimeDataStructBlock RunTimeData;
        [Abide.Guerilla.Tags.FieldAttribute("additional node data", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("additional_node_data_block", 255, typeof(AdditionalNodeDataBlock))]
        public TagBlock AdditionalNodeData;
        public int Size
        {
            get
            {
                return 236;
            }
        }
        public void Initialize()
        {
        }
        public void Read(System.IO.BinaryReader reader)
        {
        }
        public void Write(System.IO.BinaryWriter writer)
        {
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(60, 4)]
        public sealed class AdditionalNodeDataBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("node name^", typeof(StringId))]
            public StringId NodeName;
            [Abide.Guerilla.Tags.FieldAttribute("default rotation*", typeof(Quaternion))]
            public Quaternion DefaultRotation;
            [Abide.Guerilla.Tags.FieldAttribute("default translation*", typeof(Vector3))]
            public Vector3 DefaultTranslation;
            [Abide.Guerilla.Tags.FieldAttribute("default scale*", typeof(Single))]
            public Single DefaultScale;
            [Abide.Guerilla.Tags.FieldAttribute("min bounds", typeof(Vector3))]
            public Vector3 MinBounds;
            [Abide.Guerilla.Tags.FieldAttribute("max bounds", typeof(Vector3))]
            public Vector3 MaxBounds;
            public int Size
            {
                get
                {
                    return 60;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(80, 4)]
        public sealed class AnimationGraphResourcesStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("parent animation graph", typeof(TagReference))]
            public TagReference ParentAnimationGraph;
            [Abide.Guerilla.Tags.FieldAttribute("inheritance flags", typeof(Byte))]
            [Abide.Guerilla.Tags.OptionsAttribute(typeof(InheritanceFlagsOptions), true)]
            public Byte InheritanceFlags;
            [Abide.Guerilla.Tags.FieldAttribute("private flags*", typeof(Byte))]
            [Abide.Guerilla.Tags.OptionsAttribute(typeof(PrivateFlagsOptions), true)]
            public Byte PrivateFlags;
            [Abide.Guerilla.Tags.FieldAttribute("animation codec pack*", typeof(Int16))]
            public Int16 AnimationCodecPack;
            [Abide.Guerilla.Tags.FieldAttribute("skeleton nodes*|ABCDCC", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("animation_graph_node_block", 255, typeof(AnimationGraphNodeBlock))]
            public TagBlock SkeletonNodesabcdcc;
            [Abide.Guerilla.Tags.FieldAttribute("sound references|ABCDCC", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("animation_graph_sound_reference_block", 512, typeof(AnimationGraphSoundReferenceBlock))]
            public TagBlock SoundReferencesabcdcc;
            [Abide.Guerilla.Tags.FieldAttribute("effect references|ABCDCC", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("animation_graph_effect_reference_block", 512, typeof(AnimationGraphEffectReferenceBlock))]
            public TagBlock EffectReferencesabcdcc;
            [Abide.Guerilla.Tags.FieldAttribute("blend screens|ABCDCC", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("animation_blend_screen_block", 64, typeof(AnimationBlendScreenBlock))]
            public TagBlock BlendScreensabcdcc;
            [Abide.Guerilla.Tags.FieldAttribute("animations*|ABCDCC", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("animation_pool_block", 2048, typeof(AnimationPoolBlock))]
            public TagBlock Animationsabcdcc;
            public int Size
            {
                get
                {
                    return 80;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(32, 4)]
            public sealed class AnimationGraphNodeBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("name^", typeof(StringId))]
                public StringId Name;
                [Abide.Guerilla.Tags.FieldAttribute("next sibling node index*", typeof(Int16))]
                public Int16 NextSiblingNodeIndex;
                [Abide.Guerilla.Tags.FieldAttribute("first child node index*", typeof(Int16))]
                public Int16 FirstChildNodeIndex;
                [Abide.Guerilla.Tags.FieldAttribute("parent node index*", typeof(Int16))]
                public Int16 ParentNodeIndex;
                [Abide.Guerilla.Tags.FieldAttribute("model flags*", typeof(Byte))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(ModelFlagsOptions), true)]
                public Byte ModelFlags;
                [Abide.Guerilla.Tags.FieldAttribute("node joint flags", typeof(Byte))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(NodeJointFlagsOptions), true)]
                public Byte NodeJointFlags;
                [Abide.Guerilla.Tags.FieldAttribute("base vector*", typeof(Vector3))]
                public Vector3 BaseVector;
                [Abide.Guerilla.Tags.FieldAttribute("vector range*", typeof(Single))]
                public Single VectorRange;
                [Abide.Guerilla.Tags.FieldAttribute("z_pos*", typeof(Single))]
                public Single ZPos;
                public int Size
                {
                    get
                    {
                        return 32;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                public enum ModelFlagsOptions
                {
                    PrimaryModel = 1,
                    SecondaryModel = 2,
                    LocalRoot = 4,
                    LeftHand = 8,
                    RightHand = 16,
                    LeftArmMember = 32,
                }
                public enum NodeJointFlagsOptions
                {
                    BallSocket = 1,
                    Hinge = 2,
                    NoMovement = 4,
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(20, 4)]
            public sealed class AnimationGraphSoundReferenceBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("sound^", typeof(TagReference))]
                public TagReference Sound;
                [Abide.Guerilla.Tags.FieldAttribute("flags", typeof(Int16))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
                public Int16 Flags;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(2)]
                public Byte[] EmptyString;
                public int Size
                {
                    get
                    {
                        return 20;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                public enum FlagsOptions
                {
                    AllowOnPlayer = 1,
                    LeftArmOnly = 2,
                    RightArmOnly = 4,
                    FirstPersonOnly = 8,
                    ForwardOnly = 16,
                    ReverseOnly = 32,
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(20, 4)]
            public sealed class AnimationGraphEffectReferenceBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("effect^", typeof(TagReference))]
                public TagReference Effect;
                [Abide.Guerilla.Tags.FieldAttribute("flags", typeof(Int16))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
                public Int16 Flags;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(2)]
                public Byte[] EmptyString;
                public int Size
                {
                    get
                    {
                        return 20;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                public enum FlagsOptions
                {
                    AllowOnPlayer = 1,
                    LeftArmOnly = 2,
                    RightArmOnly = 4,
                    FirstPersonOnly = 8,
                    ForwardOnly = 16,
                    ReverseOnly = 32,
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(28, 4)]
            public sealed class AnimationBlendScreenBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("label^", typeof(StringId))]
                public StringId Label;
                [Abide.Guerilla.Tags.FieldAttribute("aiming screen*", typeof(AnimationAimingScreenStructBlock))]
                public AnimationAimingScreenStructBlock AimingScreen;
                public int Size
                {
                    get
                    {
                        return 28;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(24, 4)]
                public sealed class AnimationAimingScreenStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("right yaw per frame", typeof(Single))]
                    public Single RightYawPerFrame;
                    [Abide.Guerilla.Tags.FieldAttribute("left yaw per frame", typeof(Single))]
                    public Single LeftYawPerFrame;
                    [Abide.Guerilla.Tags.FieldAttribute("right frame count", typeof(Int16))]
                    public Int16 RightFrameCount;
                    [Abide.Guerilla.Tags.FieldAttribute("left frame count", typeof(Int16))]
                    public Int16 LeftFrameCount;
                    [Abide.Guerilla.Tags.FieldAttribute("down pitch per frame", typeof(Single))]
                    public Single DownPitchPerFrame;
                    [Abide.Guerilla.Tags.FieldAttribute("up pitch per frame", typeof(Single))]
                    public Single UpPitchPerFrame;
                    [Abide.Guerilla.Tags.FieldAttribute("down pitch frame count", typeof(Int16))]
                    public Int16 DownPitchFrameCount;
                    [Abide.Guerilla.Tags.FieldAttribute("up pitch frame count", typeof(Int16))]
                    public Int16 UpPitchFrameCount;
                    public int Size
                    {
                        get
                        {
                            return 24;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(136, 4)]
            public sealed class AnimationPoolBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("name*^", typeof(StringId))]
                public StringId Name;
                [Abide.Guerilla.Tags.FieldAttribute("node list checksum*", typeof(Int32))]
                public Int32 NodeListChecksum;
                [Abide.Guerilla.Tags.FieldAttribute("production checksum*", typeof(Int32))]
                public Int32 ProductionChecksum;
                [Abide.Guerilla.Tags.FieldAttribute("import_checksum*", typeof(Int32))]
                public Int32 ImportChecksum;
                [Abide.Guerilla.Tags.FieldAttribute("type*", typeof(Byte))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(TypeOptions), false)]
                public Byte Type;
                [Abide.Guerilla.Tags.FieldAttribute("frame info type*", typeof(Byte))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(FrameInfoTypeOptions), false)]
                public Byte FrameInfoType;
                [Abide.Guerilla.Tags.FieldAttribute("blend screen", typeof(Byte))]
                public Byte BlendScreen;
                [Abide.Guerilla.Tags.FieldAttribute("node count*", typeof(Byte))]
                public Byte NodeCount;
                [Abide.Guerilla.Tags.FieldAttribute("frame count*", typeof(Int16))]
                public Int16 FrameCount;
                [Abide.Guerilla.Tags.FieldAttribute("internal flags*", typeof(Byte))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(InternalFlagsOptions), true)]
                public Byte InternalFlags;
                [Abide.Guerilla.Tags.FieldAttribute("production flags", typeof(Byte))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(ProductionFlagsOptions), true)]
                public Byte ProductionFlags;
                [Abide.Guerilla.Tags.FieldAttribute("playback flags", typeof(Int16))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(PlaybackFlagsOptions), true)]
                public Int16 PlaybackFlags;
                [Abide.Guerilla.Tags.FieldAttribute("desired compression", typeof(Byte))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(DesiredCompressionOptions), false)]
                public Byte DesiredCompression;
                [Abide.Guerilla.Tags.FieldAttribute("current compression*", typeof(Byte))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(CurrentCompressionOptions), false)]
                public Byte CurrentCompression;
                [Abide.Guerilla.Tags.FieldAttribute("weight", typeof(Single))]
                public Single Weight;
                [Abide.Guerilla.Tags.FieldAttribute("loop frame index", typeof(Int16))]
                public Int16 LoopFrameIndex;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Int16))]
                public Int16 EmptyString;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Int16))]
                public Int16 EmptyString1;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(2)]
                public Byte[] EmptyString2;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(PackedDataSizesStructBlock))]
                public PackedDataSizesStructBlock EmptyString4;
                [Abide.Guerilla.Tags.FieldAttribute("frame events|ABCDCC", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("animation_frame_event_block", 512, typeof(AnimationFrameEventBlock))]
                public TagBlock FrameEventsabcdcc;
                [Abide.Guerilla.Tags.FieldAttribute("sound events|ABCDCC", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("animation_sound_event_block", 512, typeof(AnimationSoundEventBlock))]
                public TagBlock SoundEventsabcdcc;
                [Abide.Guerilla.Tags.FieldAttribute("effect events|ABCDCC", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("animation_effect_event_block", 512, typeof(AnimationEffectEventBlock))]
                public TagBlock EffectEventsabcdcc;
                [Abide.Guerilla.Tags.FieldAttribute("object-space parent nodes|ABCDCC", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("object_space_node_data_block", 255, typeof(ObjectSpaceNodeDataBlock))]
                public TagBlock ObjectSpaceParentNodesabcdcc;
                public int Size
                {
                    get
                    {
                        return 136;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(4, 4)]
                public sealed class AnimationFrameEventBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("type", typeof(Int16))]
                    [Abide.Guerilla.Tags.OptionsAttribute(typeof(TypeOptions), false)]
                    public Int16 Type;
                    [Abide.Guerilla.Tags.FieldAttribute("frame", typeof(Int16))]
                    public Int16 Frame;
                    public int Size
                    {
                        get
                        {
                            return 4;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    public enum TypeOptions
                    {
                        PrimaryKeyframe = 0,
                        SecondaryKeyframe = 1,
                        LeftFoot = 2,
                        RightFoot = 3,
                        AllowInterruption = 4,
                        TransitionA = 5,
                        TransitionB = 6,
                        TransitionC = 7,
                        TransitionD = 8,
                        BothFeetShuffle = 9,
                        BodyImpact = 10,
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(8, 4)]
                public sealed class AnimationSoundEventBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("sound", typeof(Int16))]
                    public Int16 Sound;
                    [Abide.Guerilla.Tags.FieldAttribute("frame", typeof(Int16))]
                    public Int16 Frame;
                    [Abide.Guerilla.Tags.FieldAttribute("marker name", typeof(StringId))]
                    public StringId MarkerName;
                    public int Size
                    {
                        get
                        {
                            return 8;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(4, 4)]
                public sealed class AnimationEffectEventBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("effect", typeof(Int16))]
                    public Int16 Effect;
                    [Abide.Guerilla.Tags.FieldAttribute("frame", typeof(Int16))]
                    public Int16 Frame;
                    public int Size
                    {
                        get
                        {
                            return 4;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(28, 4)]
                public sealed class ObjectSpaceNodeDataBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("node_index*", typeof(Int16))]
                    public Int16 NodeIndex;
                    [Abide.Guerilla.Tags.FieldAttribute("component flags", typeof(Int16))]
                    [Abide.Guerilla.Tags.OptionsAttribute(typeof(ComponentFlagsOptions), true)]
                    public Int16 ComponentFlags;
                    [Abide.Guerilla.Tags.FieldAttribute("orientation*", typeof(QuantizedOrientationStructBlock))]
                    public QuantizedOrientationStructBlock Orientation;
                    public int Size
                    {
                        get
                        {
                            return 28;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(24, 4)]
                    public sealed class QuantizedOrientationStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("rotation x*", typeof(Int16))]
                        public Int16 RotationX;
                        [Abide.Guerilla.Tags.FieldAttribute("rotation y*", typeof(Int16))]
                        public Int16 RotationY;
                        [Abide.Guerilla.Tags.FieldAttribute("rotation z*", typeof(Int16))]
                        public Int16 RotationZ;
                        [Abide.Guerilla.Tags.FieldAttribute("rotation w*", typeof(Int16))]
                        public Int16 RotationW;
                        [Abide.Guerilla.Tags.FieldAttribute("default translation*", typeof(Vector3))]
                        public Vector3 DefaultTranslation;
                        [Abide.Guerilla.Tags.FieldAttribute("default scale*", typeof(Single))]
                        public Single DefaultScale;
                        public int Size
                        {
                            get
                            {
                                return 24;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                    public enum ComponentFlagsOptions
                    {
                        Rotation = 1,
                        Translation = 2,
                        Scale = 4,
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(16, 4)]
                public sealed class PackedDataSizesStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte))]
                    public Byte EmptyString;
                    [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte))]
                    public Byte EmptyString1;
                    [Abide.Guerilla.Tags.FieldAttribute("", typeof(Int16))]
                    public Int16 EmptyString2;
                    [Abide.Guerilla.Tags.FieldAttribute("", typeof(Int16))]
                    public Int16 EmptyString3;
                    [Abide.Guerilla.Tags.FieldAttribute("", typeof(Int16))]
                    public Int16 EmptyString4;
                    [Abide.Guerilla.Tags.FieldAttribute("", typeof(Int32))]
                    public Int32 EmptyString5;
                    [Abide.Guerilla.Tags.FieldAttribute("", typeof(Int32))]
                    public Int32 EmptyString6;
                    public int Size
                    {
                        get
                        {
                            return 16;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                }
                public enum TypeOptions
                {
                    Base = 0,
                    Overlay = 1,
                    Replacement = 2,
                }
                public enum FrameInfoTypeOptions
                {
                    None = 0,
                    Dxdy = 1,
                    Dxdydyaw = 2,
                    Dxdydzdyaw = 3,
                }
                public enum InternalFlagsOptions
                {
                    LessThanUnused0GreaterThan = 1,
                    WorldRelative = 2,
                    LessThanUnused1GreaterThan = 4,
                    LessThanUnused2GreaterThan = 8,
                    LessThanUnused3GreaterThan = 16,
                    CompressionDisabled = 32,
                    OldProductionChecksum = 64,
                    ValidProductionChecksum = 128,
                }
                public enum ProductionFlagsOptions
                {
                    DoNotMonitorChanges = 1,
                    VerifySoundEvents = 2,
                    DoNotInheritForPlayerGraphs = 4,
                }
                public enum PlaybackFlagsOptions
                {
                    DisableInterpolationIn = 1,
                    DisableInterpolationOut = 2,
                    DisableModeIk = 4,
                    DisableWeaponIk = 8,
                    DisableWeaponAim1stPerson = 16,
                    DisableLookScreen = 32,
                    DisableTransitionAdjustment = 64,
                }
                public enum DesiredCompressionOptions
                {
                    BestScore = 0,
                    BestCompression = 1,
                    BestAccuracy = 2,
                    BestFullframe = 3,
                    BestSmallKeyframe = 4,
                    BestLargeKeyframe = 5,
                }
                public enum CurrentCompressionOptions
                {
                    BestScore = 0,
                    BestCompression = 1,
                    BestAccuracy = 2,
                    BestFullframe = 3,
                    BestSmallKeyframe = 4,
                    BestLargeKeyframe = 5,
                }
            }
            public enum InheritanceFlagsOptions
            {
                InheritRootTransScaleOnly = 1,
                InheritForUseOnPlayer = 2,
            }
            public enum PrivateFlagsOptions
            {
                PreparedForCache = 1,
                Unused = 2,
                ImportedWithCodecCompressors = 4,
                UnusedSmellyFlag = 8,
                WrittenToCache = 16,
                AnimationDataReordered = 32,
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(36, 4)]
        public sealed class AnimationGraphContentsStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("modes|AABBCC", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("animation_mode_block", 512, typeof(AnimationModeBlock))]
            public TagBlock Modesaabbcc;
            [Abide.Guerilla.Tags.FieldAttribute("vehicle suspension|CCAABB", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("vehicle_suspension_block", 32, typeof(VehicleSuspensionBlock))]
            public TagBlock VehicleSuspensionccaabb;
            [Abide.Guerilla.Tags.FieldAttribute("object overlays|CCAABB", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("object_animation_block", 32, typeof(ObjectAnimationBlock))]
            public TagBlock ObjectOverlaysccaabb;
            public int Size
            {
                get
                {
                    return 36;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(28, 4)]
            public sealed class AnimationModeBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("label^", typeof(StringId))]
                public StringId Label;
                [Abide.Guerilla.Tags.FieldAttribute("weapon class|AABBCC", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("weapon_class_block", 64, typeof(WeaponClassBlock))]
                public TagBlock WeaponClassaabbcc;
                [Abide.Guerilla.Tags.FieldAttribute("mode ik|AABBCC", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("animation_ik_block", 8, typeof(AnimationIkBlock))]
                public TagBlock ModeIkaabbcc;
                public int Size
                {
                    get
                    {
                        return 28;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(28, 4)]
                public sealed class WeaponClassBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("label^", typeof(StringId))]
                    public StringId Label;
                    [Abide.Guerilla.Tags.FieldAttribute("weapon type|AABBCC", typeof(TagBlock))]
                    [Abide.Guerilla.Tags.BlockAttribute("weapon_type_block", 64, typeof(WeaponTypeBlock))]
                    public TagBlock WeaponTypeaabbcc;
                    [Abide.Guerilla.Tags.FieldAttribute("weapon ik|AABBCC", typeof(TagBlock))]
                    [Abide.Guerilla.Tags.BlockAttribute("animation_ik_block", 8, typeof(AnimationIkBlock))]
                    public TagBlock WeaponIkaabbcc;
                    public int Size
                    {
                        get
                        {
                            return 28;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(76, 4)]
                    public sealed class WeaponTypeBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("label^", typeof(StringId))]
                        public StringId Label;
                        [Abide.Guerilla.Tags.FieldAttribute("actions|AABBCC", typeof(TagBlock))]
                        [Abide.Guerilla.Tags.BlockAttribute("animation_entry_block", 256, typeof(AnimationEntryBlock))]
                        public TagBlock Actionsaabbcc;
                        [Abide.Guerilla.Tags.FieldAttribute("overlays|AABBCC", typeof(TagBlock))]
                        [Abide.Guerilla.Tags.BlockAttribute("animation_entry_block", 256, typeof(AnimationEntryBlock))]
                        public TagBlock Overlaysaabbcc;
                        [Abide.Guerilla.Tags.FieldAttribute("death and damage|AABBCC", typeof(TagBlock))]
                        [Abide.Guerilla.Tags.BlockAttribute("damage_animation_block", 8, typeof(DamageAnimationBlock))]
                        public TagBlock DeathAndDamageaabbcc;
                        [Abide.Guerilla.Tags.FieldAttribute("transitions|AABBCC", typeof(TagBlock))]
                        [Abide.Guerilla.Tags.BlockAttribute("animation_transition_block", 256, typeof(AnimationTransitionBlock))]
                        public TagBlock Transitionsaabbcc;
                        [Abide.Guerilla.Tags.FieldAttribute("high precache|CCCCC", typeof(TagBlock))]
                        [Abide.Guerilla.Tags.BlockAttribute("precache_list_block", 1024, typeof(PrecacheListBlock))]
                        public TagBlock HighPrecacheccccc;
                        [Abide.Guerilla.Tags.FieldAttribute("low precache|CCCCC", typeof(TagBlock))]
                        [Abide.Guerilla.Tags.BlockAttribute("precache_list_block", 1024, typeof(PrecacheListBlock))]
                        public TagBlock LowPrecacheccccc;
                        public int Size
                        {
                            get
                            {
                                return 76;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                        [Abide.Guerilla.Tags.FieldSetAttribute(8, 4)]
                        public sealed class AnimationEntryBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("label^", typeof(StringId))]
                            public StringId Label;
                            [Abide.Guerilla.Tags.FieldAttribute("animation*", typeof(AnimationIndexStructBlock))]
                            public AnimationIndexStructBlock Animation;
                            public int Size
                            {
                                get
                                {
                                    return 8;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                            [Abide.Guerilla.Tags.FieldSetAttribute(4, 4)]
                            public sealed class AnimationIndexStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                            {
                                [Abide.Guerilla.Tags.FieldAttribute("graph index*", typeof(Int16))]
                                public Int16 GraphIndex;
                                [Abide.Guerilla.Tags.FieldAttribute("animation*", typeof(Int16))]
                                public Int16 Animation;
                                public int Size
                                {
                                    get
                                    {
                                        return 4;
                                    }
                                }
                                public void Initialize()
                                {
                                }
                                public void Read(System.IO.BinaryReader reader)
                                {
                                }
                                public void Write(System.IO.BinaryWriter writer)
                                {
                                }
                            }
                        }
                        [Abide.Guerilla.Tags.FieldSetAttribute(16, 4)]
                        public sealed class DamageAnimationBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("label^", typeof(StringId))]
                            public StringId Label;
                            [Abide.Guerilla.Tags.FieldAttribute("directions*|AABBCC", typeof(TagBlock))]
                            [Abide.Guerilla.Tags.BlockAttribute("damage_direction_block", 4, typeof(DamageDirectionBlock))]
                            public TagBlock Directionsaabbcc;
                            public int Size
                            {
                                get
                                {
                                    return 16;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                            [Abide.Guerilla.Tags.FieldSetAttribute(12, 4)]
                            public sealed class DamageDirectionBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                            {
                                [Abide.Guerilla.Tags.FieldAttribute("regions*|AABBCC", typeof(TagBlock))]
                                [Abide.Guerilla.Tags.BlockAttribute("damage_region_block", 11, typeof(DamageRegionBlock))]
                                public TagBlock Regionsaabbcc;
                                public int Size
                                {
                                    get
                                    {
                                        return 12;
                                    }
                                }
                                public void Initialize()
                                {
                                }
                                public void Read(System.IO.BinaryReader reader)
                                {
                                }
                                public void Write(System.IO.BinaryWriter writer)
                                {
                                }
                                [Abide.Guerilla.Tags.FieldSetAttribute(4, 4)]
                                public sealed class DamageRegionBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                                {
                                    [Abide.Guerilla.Tags.FieldAttribute("animation*", typeof(AnimationIndexStructBlock))]
                                    public AnimationIndexStructBlock Animation;
                                    public int Size
                                    {
                                        get
                                        {
                                            return 4;
                                        }
                                    }
                                    public void Initialize()
                                    {
                                    }
                                    public void Read(System.IO.BinaryReader reader)
                                    {
                                    }
                                    public void Write(System.IO.BinaryWriter writer)
                                    {
                                    }
                                    [Abide.Guerilla.Tags.FieldSetAttribute(4, 4)]
                                    public sealed class AnimationIndexStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                                    {
                                        [Abide.Guerilla.Tags.FieldAttribute("graph index*", typeof(Int16))]
                                        public Int16 GraphIndex;
                                        [Abide.Guerilla.Tags.FieldAttribute("animation*", typeof(Int16))]
                                        public Int16 Animation;
                                        public int Size
                                        {
                                            get
                                            {
                                                return 4;
                                            }
                                        }
                                        public void Initialize()
                                        {
                                        }
                                        public void Read(System.IO.BinaryReader reader)
                                        {
                                        }
                                        public void Write(System.IO.BinaryWriter writer)
                                        {
                                        }
                                    }
                                }
                            }
                        }
                        [Abide.Guerilla.Tags.FieldSetAttribute(24, 4)]
                        public sealed class AnimationTransitionBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("full name^#name of the mode & state of the source", typeof(StringId))]
                            public StringId FullName;
                            [Abide.Guerilla.Tags.FieldAttribute("state info", typeof(AnimationTransitionStateStructBlock))]
                            public AnimationTransitionStateStructBlock StateInfo;
                            [Abide.Guerilla.Tags.FieldAttribute("destinations|AABBCC", typeof(TagBlock))]
                            [Abide.Guerilla.Tags.BlockAttribute("animation_transition_destination_block", 32, typeof(AnimationTransitionDestinationBlock))]
                            public TagBlock Destinationsaabbcc;
                            public int Size
                            {
                                get
                                {
                                    return 24;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                            [Abide.Guerilla.Tags.FieldSetAttribute(20, 4)]
                            public sealed class AnimationTransitionDestinationBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                            {
                                [Abide.Guerilla.Tags.FieldAttribute("full name^#name of the mode & state this transitions to", typeof(StringId))]
                                public StringId FullName;
                                [Abide.Guerilla.Tags.FieldAttribute("mode*#name of the mode", typeof(StringId))]
                                public StringId Mode;
                                [Abide.Guerilla.Tags.FieldAttribute("state info", typeof(AnimationDestinationStateStructBlock))]
                                public AnimationDestinationStateStructBlock StateInfo;
                                [Abide.Guerilla.Tags.FieldAttribute("animation*", typeof(AnimationIndexStructBlock))]
                                public AnimationIndexStructBlock Animation;
                                public int Size
                                {
                                    get
                                    {
                                        return 20;
                                    }
                                }
                                public void Initialize()
                                {
                                }
                                public void Read(System.IO.BinaryReader reader)
                                {
                                }
                                public void Write(System.IO.BinaryWriter writer)
                                {
                                }
                                [Abide.Guerilla.Tags.FieldSetAttribute(8, 4)]
                                public sealed class AnimationDestinationStateStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                                {
                                    [Abide.Guerilla.Tags.FieldAttribute("state name*#name of the state", typeof(StringId))]
                                    public StringId StateName;
                                    [Abide.Guerilla.Tags.FieldAttribute("frame event link*#which frame event to link to", typeof(Byte))]
                                    [Abide.Guerilla.Tags.OptionsAttribute(typeof(FrameEventLinkOptions), false)]
                                    public Byte FrameEventLink;
                                    [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                                    [Abide.Guerilla.Tags.PaddingAttribute(1)]
                                    public Byte[] EmptyString;
                                    [Abide.Guerilla.Tags.FieldAttribute("index a*#first level sub-index into state", typeof(Byte))]
                                    public Byte IndexA;
                                    [Abide.Guerilla.Tags.FieldAttribute("index b*#second level sub-index into state", typeof(Byte))]
                                    public Byte IndexB;
                                    public int Size
                                    {
                                        get
                                        {
                                            return 8;
                                        }
                                    }
                                    public void Initialize()
                                    {
                                    }
                                    public void Read(System.IO.BinaryReader reader)
                                    {
                                    }
                                    public void Write(System.IO.BinaryWriter writer)
                                    {
                                    }
                                    public enum FrameEventLinkOptions
                                    {
                                        NoKeyframe = 0,
                                        KeyframeTypeA = 1,
                                        KeyframeTypeB = 2,
                                        KeyframeTypeC = 3,
                                        KeyframeTypeD = 4,
                                    }
                                }
                                [Abide.Guerilla.Tags.FieldSetAttribute(4, 4)]
                                public sealed class AnimationIndexStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                                {
                                    [Abide.Guerilla.Tags.FieldAttribute("graph index*", typeof(Int16))]
                                    public Int16 GraphIndex;
                                    [Abide.Guerilla.Tags.FieldAttribute("animation*", typeof(Int16))]
                                    public Int16 Animation;
                                    public int Size
                                    {
                                        get
                                        {
                                            return 4;
                                        }
                                    }
                                    public void Initialize()
                                    {
                                    }
                                    public void Read(System.IO.BinaryReader reader)
                                    {
                                    }
                                    public void Write(System.IO.BinaryWriter writer)
                                    {
                                    }
                                }
                            }
                            [Abide.Guerilla.Tags.FieldSetAttribute(8, 4)]
                            public sealed class AnimationTransitionStateStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                            {
                                [Abide.Guerilla.Tags.FieldAttribute("state name*#name of the state", typeof(StringId))]
                                public StringId StateName;
                                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                                [Abide.Guerilla.Tags.PaddingAttribute(2)]
                                public Byte[] EmptyString;
                                [Abide.Guerilla.Tags.FieldAttribute("index a*#first level sub-index into state", typeof(Byte))]
                                public Byte IndexA;
                                [Abide.Guerilla.Tags.FieldAttribute("index b*#second level sub-index into state", typeof(Byte))]
                                public Byte IndexB;
                                public int Size
                                {
                                    get
                                    {
                                        return 8;
                                    }
                                }
                                public void Initialize()
                                {
                                }
                                public void Read(System.IO.BinaryReader reader)
                                {
                                }
                                public void Write(System.IO.BinaryWriter writer)
                                {
                                }
                            }
                        }
                        [Abide.Guerilla.Tags.FieldSetAttribute(4, 4)]
                        public sealed class PrecacheListBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("cache block index", typeof(Int32))]
                            public Int32 CacheBlockIndex;
                            public int Size
                            {
                                get
                                {
                                    return 4;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                        }
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(8, 4)]
                    public sealed class AnimationIkBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("marker#the marker name on the object being attached", typeof(StringId))]
                        public StringId Marker;
                        [Abide.Guerilla.Tags.FieldAttribute("attach to marker#the marker name object (weapon, vehicle, etc.) the above marker " +
                            "is being attached to", typeof(StringId))]
                        public StringId AttachToMarker;
                        public int Size
                        {
                            get
                            {
                                return 8;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(8, 4)]
                public sealed class AnimationIkBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("marker#the marker name on the object being attached", typeof(StringId))]
                    public StringId Marker;
                    [Abide.Guerilla.Tags.FieldAttribute("attach to marker#the marker name object (weapon, vehicle, etc.) the above marker " +
                        "is being attached to", typeof(StringId))]
                    public StringId AttachToMarker;
                    public int Size
                    {
                        get
                        {
                            return 8;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(40, 4)]
            public sealed class VehicleSuspensionBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("label^", typeof(StringId))]
                public StringId Label;
                [Abide.Guerilla.Tags.FieldAttribute("animation*", typeof(AnimationIndexStructBlock))]
                public AnimationIndexStructBlock Animation;
                [Abide.Guerilla.Tags.FieldAttribute("marker name", typeof(StringId))]
                public StringId MarkerName;
                [Abide.Guerilla.Tags.FieldAttribute("mass point offset", typeof(Single))]
                public Single MassPointOffset;
                [Abide.Guerilla.Tags.FieldAttribute("full extension ground_depth", typeof(Single))]
                public Single FullExtensionGroundDepth;
                [Abide.Guerilla.Tags.FieldAttribute("full compression ground_depth", typeof(Single))]
                public Single FullCompressionGroundDepth;
                [Abide.Guerilla.Tags.FieldAttribute("region name", typeof(StringId))]
                public StringId RegionName;
                [Abide.Guerilla.Tags.FieldAttribute("destroyed mass point offset", typeof(Single))]
                public Single DestroyedMassPointOffset;
                [Abide.Guerilla.Tags.FieldAttribute("destroyed full extension ground_depth", typeof(Single))]
                public Single DestroyedFullExtensionGroundDepth;
                [Abide.Guerilla.Tags.FieldAttribute("destroyed full compression ground_depth", typeof(Single))]
                public Single DestroyedFullCompressionGroundDepth;
                public int Size
                {
                    get
                    {
                        return 40;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(4, 4)]
                public sealed class AnimationIndexStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("graph index*", typeof(Int16))]
                    public Int16 GraphIndex;
                    [Abide.Guerilla.Tags.FieldAttribute("animation*", typeof(Int16))]
                    public Int16 Animation;
                    public int Size
                    {
                        get
                        {
                            return 4;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(20, 4)]
            public sealed class ObjectAnimationBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("label^", typeof(StringId))]
                public StringId Label;
                [Abide.Guerilla.Tags.FieldAttribute("animation*", typeof(AnimationIndexStructBlock))]
                public AnimationIndexStructBlock Animation;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(2)]
                public Byte[] EmptyString;
                [Abide.Guerilla.Tags.FieldAttribute("function controls", typeof(Int16))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(FunctionControlsOptions), false)]
                public Int16 FunctionControls;
                [Abide.Guerilla.Tags.FieldAttribute("function", typeof(StringId))]
                public StringId Function;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(4)]
                public Byte[] EmptyString1;
                public int Size
                {
                    get
                    {
                        return 20;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(4, 4)]
                public sealed class AnimationIndexStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("graph index*", typeof(Int16))]
                    public Int16 GraphIndex;
                    [Abide.Guerilla.Tags.FieldAttribute("animation*", typeof(Int16))]
                    public Int16 Animation;
                    public int Size
                    {
                        get
                        {
                            return 4;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                }
                public enum FunctionControlsOptions
                {
                    Frame = 0,
                    Scale = 1,
                }
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(88, 4)]
        public sealed class ModelAnimationRuntimeDataStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("inheritence list*|BBAAAA", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("inherited_animation_block", 8, typeof(InheritedAnimationBlock))]
            public TagBlock InheritenceListbbaaaa;
            [Abide.Guerilla.Tags.FieldAttribute("weapon list*|BBAAAA", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("weapon_class_lookup_block", 64, typeof(WeaponClassLookupBlock))]
            public TagBlock WeaponListbbaaaa;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(32)]
            public Byte[] EmptyString;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(32)]
            public Byte[] EmptyString1;
            public int Size
            {
                get
                {
                    return 88;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(48, 4)]
            public sealed class InheritedAnimationBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("inherited graph*", typeof(TagReference))]
                public TagReference InheritedGraph;
                [Abide.Guerilla.Tags.FieldAttribute("node map*", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("inherited_animation_node_map_block", 255, typeof(InheritedAnimationNodeMapBlock))]
                public TagBlock NodeMap;
                [Abide.Guerilla.Tags.FieldAttribute("node map flags*", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("inherited_animation_node_map_flag_block", 255, typeof(InheritedAnimationNodeMapFlagBlock))]
                public TagBlock NodeMapFlags;
                [Abide.Guerilla.Tags.FieldAttribute("root z offset*", typeof(Single))]
                public Single RootZOffset;
                [Abide.Guerilla.Tags.FieldAttribute("inheritance_flags*", typeof(Int32))]
                public Int32 InheritanceFlags;
                public int Size
                {
                    get
                    {
                        return 48;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(2, 4)]
                public sealed class InheritedAnimationNodeMapBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("local node", typeof(Int16))]
                    public Int16 LocalNode;
                    public int Size
                    {
                        get
                        {
                            return 2;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(4, 4)]
                public sealed class InheritedAnimationNodeMapFlagBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("local node flags", typeof(Int32))]
                    public Int32 LocalNodeFlags;
                    public int Size
                    {
                        get
                        {
                            return 4;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(8, 4)]
            public sealed class WeaponClassLookupBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("weapon name^", typeof(StringId))]
                public StringId WeaponName;
                [Abide.Guerilla.Tags.FieldAttribute("weapon class", typeof(StringId))]
                public StringId WeaponClass;
                public int Size
                {
                    get
                    {
                        return 8;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
        }
    }
}
#pragma warning restore CS1591
