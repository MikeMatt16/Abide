#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Abide.Guerilla.Tags
{
    using Abide.Guerilla.Types;
    using Abide.HaloLibrary;
    using System;
    
    [Abide.Guerilla.Tags.FieldSetAttribute(792, 4)]
    [Abide.Guerilla.Tags.TagGroupAttribute("scenario_structure_bsp", 1935831920u, 4294967293u, typeof(ScenarioStructureBspBlock))]
    public sealed class ScenarioStructureBspBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
    {
        [Abide.Guerilla.Tags.FieldAttribute("Import Info*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("import info", 1, typeof(GlobalTagImportInfoBlock))]
        public TagBlock ImportInfo;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(4)]
        public Byte[] EmptyString;
        [Abide.Guerilla.Tags.FieldAttribute("Collision Materials*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("structure_collision_materials_block", 512, typeof(StructureCollisionMaterialsBlock))]
        public TagBlock CollisionMaterials;
        [Abide.Guerilla.Tags.FieldAttribute("Collision BSP*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("global_collision_bsp_block", 1, typeof(GlobalCollisionBspBlock))]
        public TagBlock CollisionBsp;
        [Abide.Guerilla.Tags.FieldAttribute("Vehicle Floor:World Units#Height below which vehicles get pushed up by an unstopp" +
            "able force.", typeof(Single))]
        public Single VehicleFloor;
        [Abide.Guerilla.Tags.FieldAttribute("Vehicle Ceiling:World Units#Height above which vehicles get pushed down by an uns" +
            "toppable force.", typeof(Single))]
        public Single VehicleCeiling;
        [Abide.Guerilla.Tags.FieldAttribute("UNUSED nodes*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("UNUSED_structure_bsp_node_block", 131072, typeof(UnusedStructureBspNodeBlock))]
        public TagBlock UnusedNodes;
        [Abide.Guerilla.Tags.FieldAttribute("Leaves*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("structure_bsp_leaf_block", 65536, typeof(StructureBspLeafBlock))]
        public TagBlock Leaves;
        [Abide.Guerilla.Tags.FieldAttribute("Surface References*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("structure_bsp_surface_reference_block", 262144, typeof(StructureBspSurfaceReferenceBlock))]
        public TagBlock SurfaceReferences;
        [Abide.Guerilla.Tags.FieldAttribute("Cluster Portals*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("structure_bsp_cluster_portal_block", 512, typeof(StructureBspClusterPortalBlock))]
        public TagBlock ClusterPortals;
        [Abide.Guerilla.Tags.FieldAttribute("Fog Planes*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("structure_bsp_fog_plane_block", 127, typeof(StructureBspFogPlaneBlock))]
        public TagBlock FogPlanes;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(24)]
        public Byte[] EmptyString1;
        [Abide.Guerilla.Tags.FieldAttribute("Weather Palette*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("structure_bsp_weather_palette_block", 32, typeof(StructureBspWeatherPaletteBlock))]
        public TagBlock WeatherPalette;
        [Abide.Guerilla.Tags.FieldAttribute("Weather Polyhedra*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("structure_bsp_weather_polyhedron_block", 32, typeof(StructureBspWeatherPolyhedronBlock))]
        public TagBlock WeatherPolyhedra;
        [Abide.Guerilla.Tags.FieldAttribute("Detail Objects*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("structure_bsp_detail_object_data_block", 1, typeof(StructureBspDetailObjectDataBlock))]
        public TagBlock DetailObjects;
        [Abide.Guerilla.Tags.FieldAttribute("Clusters*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("structure_bsp_cluster_block", 512, typeof(StructureBspClusterBlock))]
        public TagBlock Clusters;
        [Abide.Guerilla.Tags.FieldAttribute("Materials*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("material", 1024, typeof(GlobalGeometryMaterialBlock))]
        public TagBlock Materials;
        [Abide.Guerilla.Tags.FieldAttribute("Sky Owner Cluster*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("structure_bsp_sky_owner_cluster_block", 32, typeof(StructureBspSkyOwnerClusterBlock))]
        public TagBlock SkyOwnerCluster;
        [Abide.Guerilla.Tags.FieldAttribute("Conveyor Surfaces*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("structure_bsp_conveyor_surface_block", 512, typeof(StructureBspConveyorSurfaceBlock))]
        public TagBlock ConveyorSurfaces;
        [Abide.Guerilla.Tags.FieldAttribute("Breakable Surfaces*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("structure_bsp_breakable_surface_block", 8448, typeof(StructureBspBreakableSurfaceBlock))]
        public TagBlock BreakableSurfaces;
        [Abide.Guerilla.Tags.FieldAttribute("Pathfinding Data", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("pathfinding_data_block", 16, typeof(PathfindingDataBlock))]
        public TagBlock PathfindingData;
        [Abide.Guerilla.Tags.FieldAttribute("Pathfinding Edges*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("structure_bsp_pathfinding_edges_block", 262144, typeof(StructureBspPathfindingEdgesBlock))]
        public TagBlock PathfindingEdges;
        [Abide.Guerilla.Tags.FieldAttribute("Background Sound Palette*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("structure_bsp_background_sound_palette_block", 64, typeof(StructureBspBackgroundSoundPaletteBlock))]
        public TagBlock BackgroundSoundPalette;
        [Abide.Guerilla.Tags.FieldAttribute("Sound Environment Palette*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("structure_bsp_sound_environment_palette_block", 64, typeof(StructureBspSoundEnvironmentPaletteBlock))]
        public TagBlock SoundEnvironmentPalette;
        [Abide.Guerilla.Tags.FieldAttribute("Markers*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("structure_bsp_marker_block", 1024, typeof(StructureBspMarkerBlock))]
        public TagBlock Markers;
        [Abide.Guerilla.Tags.FieldAttribute("Runtime Decals*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("structure_bsp_runtime_decal_block", 6144, typeof(StructureBspRuntimeDecalBlock))]
        public TagBlock RuntimeDecals;
        [Abide.Guerilla.Tags.FieldAttribute("Environment Object Palette*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("structure_bsp_environment_object_palette_block", 100, typeof(StructureBspEnvironmentObjectPaletteBlock))]
        public TagBlock EnvironmentObjectPalette;
        [Abide.Guerilla.Tags.FieldAttribute("Environment Objects*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("structure_bsp_environment_object_block", 16384, typeof(StructureBspEnvironmentObjectBlock))]
        public TagBlock EnvironmentObjects;
        [Abide.Guerilla.Tags.FieldAttribute("Lightmaps*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("structure_bsp_lightmap_data_block", 128, typeof(StructureBspLightmapDataBlock))]
        public TagBlock Lightmaps;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(4)]
        public Byte[] EmptyString2;
        [Abide.Guerilla.Tags.FieldAttribute("Leaf Map Leaves*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("global_map_leaf_block", 65536, typeof(GlobalMapLeafBlock))]
        public TagBlock LeafMapLeaves;
        [Abide.Guerilla.Tags.FieldAttribute("Leaf Map Connections*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("global_leaf_connection_block", 524288, typeof(GlobalLeafConnectionBlock))]
        public TagBlock LeafMapConnections;
        [Abide.Guerilla.Tags.FieldAttribute("Errors*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("error report category", 64, typeof(GlobalErrorReportCategoriesBlock))]
        public TagBlock Errors;
        [Abide.Guerilla.Tags.FieldAttribute("Precomputed Lighting*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("structure_bsp_precomputed_lighting_block", 350, typeof(StructureBspPrecomputedLightingBlock))]
        public TagBlock PrecomputedLighting;
        [Abide.Guerilla.Tags.FieldAttribute("Instanced Geometries Definitions*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("structure_bsp_instanced_geometry_definition_block", 512, typeof(StructureBspInstancedGeometryDefinitionBlock))]
        public TagBlock InstancedGeometriesDefinitions;
        [Abide.Guerilla.Tags.FieldAttribute("Instanced Geometry Instances*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("structure_bsp_instanced_geometry_instances_block", 1024, typeof(StructureBspInstancedGeometryInstancesBlock))]
        public TagBlock InstancedGeometryInstances;
        [Abide.Guerilla.Tags.FieldAttribute(")Ambience Sound Clusters", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("structure_bsp_sound_cluster_block", 512, typeof(StructureBspSoundClusterBlock))]
        public TagBlock AmbienceSoundClusters;
        [Abide.Guerilla.Tags.FieldAttribute(")Reverb Sound Clusters", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("structure_bsp_sound_cluster_block", 512, typeof(StructureBspSoundClusterBlock))]
        public TagBlock ReverbSoundClusters;
        [Abide.Guerilla.Tags.FieldAttribute("Transparent Planes*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("transparent_planes_block", 32768, typeof(TransparentPlanesBlock))]
        public TagBlock TransparentPlanes;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(96)]
        public Byte[] EmptyString3;
        [Abide.Guerilla.Tags.FieldAttribute("Vehicle Sperical Limit Radius#Distances this far and longer from limit origin wil" +
            "l pull you back in.", typeof(Single))]
        public Single VehicleSpericalLimitRadius;
        [Abide.Guerilla.Tags.FieldAttribute("Vehicle Sperical Limit Center#Center of space in which vehicle can move.", typeof(Vector3))]
        public Vector3 VehicleSpericalLimitCenter;
        [Abide.Guerilla.Tags.FieldAttribute("Debug Info*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("structure_bsp_debug_info_block", 1, typeof(StructureBspDebugInfoBlock))]
        public TagBlock DebugInfo;
        [Abide.Guerilla.Tags.FieldAttribute("Decorators", typeof(TagReference))]
        public TagReference Decorators;
        [Abide.Guerilla.Tags.FieldAttribute("structure_physics*", typeof(GlobalStructurePhysicsStructBlock))]
        public GlobalStructurePhysicsStructBlock StructurePhysics;
        [Abide.Guerilla.Tags.FieldAttribute("Water Definitions", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("global_water_definitions_block", 1, typeof(GlobalWaterDefinitionsBlock))]
        public TagBlock WaterDefinitions;
        [Abide.Guerilla.Tags.FieldAttribute(")portal=>device mapping", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("structure_portal_device_mapping_block", 1, typeof(StructurePortalDeviceMappingBlock))]
        public TagBlock PortalEqualsGreaterThanDeviceMapping;
        [Abide.Guerilla.Tags.FieldAttribute(")Audibility", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("structure_bsp_audibility_block", 1, typeof(StructureBspAudibilityBlock))]
        public TagBlock Audibility;
        [Abide.Guerilla.Tags.FieldAttribute(")Object Fake Lightprobes", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("structure_bsp_fake_lightprobes_block", 2048, typeof(StructureBspFakeLightprobesBlock))]
        public TagBlock ObjectFakeLightprobes;
        [Abide.Guerilla.Tags.FieldAttribute("Decorators", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("decorator_placement_definition_block", 1, typeof(DecoratorPlacementDefinitionBlock))]
        public TagBlock Decorators1;
        public int Size
        {
            get
            {
                return 792;
            }
        }
        public void Initialize()
        {
        }
        public void Read(System.IO.BinaryReader reader)
        {
        }
        public void Write(System.IO.BinaryWriter writer)
        {
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(596, 4)]
        public sealed class GlobalTagImportInfoBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("build*", typeof(Int32))]
            public Int32 Build;
            [Abide.Guerilla.Tags.FieldAttribute("version*", typeof(String256))]
            public String256 Version;
            [Abide.Guerilla.Tags.FieldAttribute("import date*", typeof(String32))]
            public String32 ImportDate;
            [Abide.Guerilla.Tags.FieldAttribute("culprit*", typeof(String32))]
            public String32 Culprit;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(96)]
            public Byte[] EmptyString;
            [Abide.Guerilla.Tags.FieldAttribute("import time*", typeof(String32))]
            public String32 ImportTime;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString1;
            [Abide.Guerilla.Tags.FieldAttribute("files*", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("import file", 1024, typeof(TagImportFileBlock))]
            public TagBlock Files;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(128)]
            public Byte[] EmptyString2;
            public int Size
            {
                get
                {
                    return 596;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(540, 4)]
            public sealed class TagImportFileBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("path*", typeof(String256))]
                public String256 Path;
                [Abide.Guerilla.Tags.FieldAttribute("modification date*", typeof(String32))]
                public String32 ModificationDate;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(8)]
                public Byte[] EmptyString;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(88)]
                public Byte[] EmptyString1;
                [Abide.Guerilla.Tags.FieldAttribute("checksum*:crc32", typeof(Int32))]
                public Int32 Checksum;
                [Abide.Guerilla.Tags.FieldAttribute("size*:bytes", typeof(Int32))]
                public Int32 Size1;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(128)]
                public Byte[] EmptyString2;
                public int Size
                {
                    get
                    {
                        return 540;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(36, 4)]
        public sealed class StructureCollisionMaterialsBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("Old Shader*", typeof(TagReference))]
            public TagReference OldShader;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(2)]
            public Byte[] EmptyString;
            [Abide.Guerilla.Tags.FieldAttribute("Conveyor Surface Index*", typeof(Int16))]
            public Int16 ConveyorSurfaceIndex;
            [Abide.Guerilla.Tags.FieldAttribute("New Shader*", typeof(TagReference))]
            public TagReference NewShader;
            public int Size
            {
                get
                {
                    return 36;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(96, 4)]
        public sealed class GlobalCollisionBspBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("BSP 3D Nodes*", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("bsp3d_nodes_block", 131072, typeof(Bsp3dNodesBlock))]
            public TagBlock Bsp3dNodes;
            [Abide.Guerilla.Tags.FieldAttribute("Planes*", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("planes_block", 65536, typeof(PlanesBlock))]
            public TagBlock Planes;
            [Abide.Guerilla.Tags.FieldAttribute("Leaves*", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("leaves_block", 65536, typeof(LeavesBlock))]
            public TagBlock Leaves;
            [Abide.Guerilla.Tags.FieldAttribute("BSP 2D References*", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("bsp2d_references_block", 131072, typeof(Bsp2dReferencesBlock))]
            public TagBlock Bsp2dReferences;
            [Abide.Guerilla.Tags.FieldAttribute("BSP 2D Nodes*", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("bsp2d_nodes_block", 131072, typeof(Bsp2dNodesBlock))]
            public TagBlock Bsp2dNodes;
            [Abide.Guerilla.Tags.FieldAttribute("Surfaces*", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("surfaces_block", 131072, typeof(SurfacesBlock))]
            public TagBlock Surfaces;
            [Abide.Guerilla.Tags.FieldAttribute("Edges*", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("edges_block", 262144, typeof(EdgesBlock))]
            public TagBlock Edges;
            [Abide.Guerilla.Tags.FieldAttribute("Vertices*", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("vertices_block", 131072, typeof(VerticesBlock))]
            public TagBlock Vertices;
            public int Size
            {
                get
                {
                    return 96;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(8, 8)]
            public sealed class Bsp3dNodesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(8)]
                public Byte[] EmptyString;
                public int Size
                {
                    get
                    {
                        return 8;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(16, 16)]
            public sealed class PlanesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("Plane*", typeof(Vector4))]
                public Vector4 Plane;
                public int Size
                {
                    get
                    {
                        return 16;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(4, 4)]
            public sealed class LeavesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("Flags*", typeof(Byte))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
                public Byte Flags;
                [Abide.Guerilla.Tags.FieldAttribute("BSP 2D Reference Count*", typeof(Byte))]
                public Byte Bsp2dReferenceCount;
                [Abide.Guerilla.Tags.FieldAttribute("First BSP 2D Reference*", typeof(Int16))]
                public Int16 FirstBsp2dReference;
                public int Size
                {
                    get
                    {
                        return 4;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                public enum FlagsOptions
                {
                    ContainsDoubleSidedSurfaces = 1,
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(4, 4)]
            public sealed class Bsp2dReferencesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("Plane*", typeof(Int16))]
                public Int16 Plane;
                [Abide.Guerilla.Tags.FieldAttribute("BSP 2D Node*", typeof(Int16))]
                public Int16 Bsp2dNode;
                public int Size
                {
                    get
                    {
                        return 4;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(16, 16)]
            public sealed class Bsp2dNodesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("Plane*", typeof(Vector3))]
                public Vector3 Plane;
                [Abide.Guerilla.Tags.FieldAttribute("Left Child*", typeof(Int16))]
                public Int16 LeftChild;
                [Abide.Guerilla.Tags.FieldAttribute("Right Child*", typeof(Int16))]
                public Int16 RightChild;
                public int Size
                {
                    get
                    {
                        return 16;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(8, 8)]
            public sealed class SurfacesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("Plane*", typeof(Int16))]
                public Int16 Plane;
                [Abide.Guerilla.Tags.FieldAttribute("First Edge*", typeof(Int16))]
                public Int16 FirstEdge;
                [Abide.Guerilla.Tags.FieldAttribute("Flags*", typeof(Byte))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
                public Byte Flags;
                [Abide.Guerilla.Tags.FieldAttribute("Breakable Surface*", typeof(Byte))]
                public Byte BreakableSurface;
                [Abide.Guerilla.Tags.FieldAttribute("Material*", typeof(Int16))]
                public Int16 Material;
                public int Size
                {
                    get
                    {
                        return 8;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                public enum FlagsOptions
                {
                    TwoSided = 1,
                    Invisible = 2,
                    Climbable = 4,
                    Breakable = 8,
                    Invalid = 16,
                    Conveyor = 32,
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(12, 4)]
            public sealed class EdgesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("Start Vertex*", typeof(Int16))]
                public Int16 StartVertex;
                [Abide.Guerilla.Tags.FieldAttribute("End Vertex*", typeof(Int16))]
                public Int16 EndVertex;
                [Abide.Guerilla.Tags.FieldAttribute("Forward Edge*", typeof(Int16))]
                public Int16 ForwardEdge;
                [Abide.Guerilla.Tags.FieldAttribute("Reverse Edge*", typeof(Int16))]
                public Int16 ReverseEdge;
                [Abide.Guerilla.Tags.FieldAttribute("Left Surface*", typeof(Int16))]
                public Int16 LeftSurface;
                [Abide.Guerilla.Tags.FieldAttribute("Right Surface*", typeof(Int16))]
                public Int16 RightSurface;
                public int Size
                {
                    get
                    {
                        return 12;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(16, 16)]
            public sealed class VerticesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("Point*", typeof(Vector3))]
                public Vector3 Point;
                [Abide.Guerilla.Tags.FieldAttribute("First Edge*", typeof(Int16))]
                public Int16 FirstEdge;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(2)]
                public Byte[] EmptyString;
                public int Size
                {
                    get
                    {
                        return 16;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(6, 4)]
        public sealed class UnusedStructureBspNodeBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(6)]
            public Byte[] EmptyString;
            public int Size
            {
                get
                {
                    return 6;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(8, 4)]
        public sealed class StructureBspLeafBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("Cluster*", typeof(Int16))]
            public Int16 Cluster;
            [Abide.Guerilla.Tags.FieldAttribute("Surface Reference Count*", typeof(Int16))]
            public Int16 SurfaceReferenceCount;
            [Abide.Guerilla.Tags.FieldAttribute("First Surface Reference Index*", typeof(Int32))]
            public Int32 FirstSurfaceReferenceIndex;
            public int Size
            {
                get
                {
                    return 8;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(8, 4)]
        public sealed class StructureBspSurfaceReferenceBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("Strip Index*", typeof(Int16))]
            public Int16 StripIndex;
            [Abide.Guerilla.Tags.FieldAttribute("Lightmap Triangle Index*", typeof(Int16))]
            public Int16 LightmapTriangleIndex;
            [Abide.Guerilla.Tags.FieldAttribute("BSP Node Index*", typeof(Int32))]
            public Int32 BspNodeIndex;
            public int Size
            {
                get
                {
                    return 8;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(40, 4)]
        public sealed class StructureBspClusterPortalBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("Back Cluster*", typeof(Int16))]
            public Int16 BackCluster;
            [Abide.Guerilla.Tags.FieldAttribute("Front Cluster*", typeof(Int16))]
            public Int16 FrontCluster;
            [Abide.Guerilla.Tags.FieldAttribute("Plane Index*", typeof(Int32))]
            public Int32 PlaneIndex;
            [Abide.Guerilla.Tags.FieldAttribute("Centroid*", typeof(Vector3))]
            public Vector3 Centroid;
            [Abide.Guerilla.Tags.FieldAttribute("Bounding Radius*", typeof(Single))]
            public Single BoundingRadius;
            [Abide.Guerilla.Tags.FieldAttribute("Flags*", typeof(Int32))]
            [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
            public Int32 Flags;
            [Abide.Guerilla.Tags.FieldAttribute("Vertices*", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("structure_bsp_cluster_portal_vertex_block", 128, typeof(StructureBspClusterPortalVertexBlock))]
            public TagBlock Vertices;
            public int Size
            {
                get
                {
                    return 40;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(12, 4)]
            public sealed class StructureBspClusterPortalVertexBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("Point*", typeof(Vector3))]
                public Vector3 Point;
                public int Size
                {
                    get
                    {
                        return 12;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
            public enum FlagsOptions
            {
                AiCannotHearThroughThis = 1,
                OneWay = 2,
                Door = 4,
                NoWay = 8,
                OneWayReversed = 16,
                NoOneCanHearThroughThis = 32,
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(24, 4)]
        public sealed class StructureBspFogPlaneBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("Scenario Planar Fog Index*", typeof(Int16))]
            public Int16 ScenarioPlanarFogIndex;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(2)]
            public Byte[] EmptyString;
            [Abide.Guerilla.Tags.FieldAttribute("plane*", typeof(Vector4))]
            public Vector4 Plane;
            [Abide.Guerilla.Tags.FieldAttribute("Flags*", typeof(Int16))]
            [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
            public Int16 Flags;
            [Abide.Guerilla.Tags.FieldAttribute("Priority*", typeof(Int16))]
            public Int16 Priority;
            public int Size
            {
                get
                {
                    return 24;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            public enum FlagsOptions
            {
                ExtendInfinitelyWhileVisible = 1,
                DoNotFloodfill = 2,
                AggressiveFloodfill = 4,
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(152, 4)]
        public sealed class StructureBspWeatherPaletteBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("Name^", typeof(String32))]
            public String32 Name;
            [Abide.Guerilla.Tags.FieldAttribute("Weather System", typeof(TagReference))]
            public TagReference WeatherSystem;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(2)]
            public Byte[] EmptyString;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(2)]
            public Byte[] EmptyString1;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(32)]
            public Byte[] EmptyString2;
            [Abide.Guerilla.Tags.FieldAttribute("Wind", typeof(TagReference))]
            public TagReference Wind;
            [Abide.Guerilla.Tags.FieldAttribute("Wind Direction", typeof(Vector3))]
            public Vector3 WindDirection;
            [Abide.Guerilla.Tags.FieldAttribute("Wind Magnitude", typeof(Single))]
            public Single WindMagnitude;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString3;
            [Abide.Guerilla.Tags.FieldAttribute("Wind Scale Function", typeof(String32))]
            public String32 WindScaleFunction;
            public int Size
            {
                get
                {
                    return 152;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(28, 4)]
        public sealed class StructureBspWeatherPolyhedronBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("Bounding Sphere Center*", typeof(Vector3))]
            public Vector3 BoundingSphereCenter;
            [Abide.Guerilla.Tags.FieldAttribute("Bounding Sphere Radius*", typeof(Single))]
            public Single BoundingSphereRadius;
            [Abide.Guerilla.Tags.FieldAttribute("Planes*", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("structure_bsp_weather_polyhedron_plane_block", 16, typeof(StructureBspWeatherPolyhedronPlaneBlock))]
            public TagBlock Planes;
            public int Size
            {
                get
                {
                    return 28;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(16, 4)]
            public sealed class StructureBspWeatherPolyhedronPlaneBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("plane*", typeof(Vector4))]
                public Vector4 Plane;
                public int Size
                {
                    get
                    {
                        return 16;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(52, 4)]
        public sealed class StructureBspDetailObjectDataBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("Cells", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("global_detail_object_cells_block", 262144, typeof(GlobalDetailObjectCellsBlock))]
            public TagBlock Cells;
            [Abide.Guerilla.Tags.FieldAttribute("Instances", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("global_detail_object_block", 2097152, typeof(GlobalDetailObjectBlock))]
            public TagBlock Instances;
            [Abide.Guerilla.Tags.FieldAttribute("Counts", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("global_detail_object_counts_block", 8388608, typeof(GlobalDetailObjectCountsBlock))]
            public TagBlock Counts;
            [Abide.Guerilla.Tags.FieldAttribute("z Reference Vectors", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("global_z_reference_vector_block", 262144, typeof(GlobalZReferenceVectorBlock))]
            public TagBlock ZReferenceVectors;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(1)]
            public Byte[] EmptyString;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(3)]
            public Byte[] EmptyString1;
            public int Size
            {
                get
                {
                    return 52;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(32, 4)]
            public sealed class GlobalDetailObjectCellsBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("*", typeof(Int16))]
                public Int16 EmptyString;
                [Abide.Guerilla.Tags.FieldAttribute("*", typeof(Int16))]
                public Int16 EmptyString1;
                [Abide.Guerilla.Tags.FieldAttribute("*", typeof(Int16))]
                public Int16 EmptyString2;
                [Abide.Guerilla.Tags.FieldAttribute("*", typeof(Int16))]
                public Int16 EmptyString3;
                [Abide.Guerilla.Tags.FieldAttribute("*", typeof(Int32))]
                public Int32 EmptyString4;
                [Abide.Guerilla.Tags.FieldAttribute("*", typeof(Int32))]
                public Int32 EmptyString5;
                [Abide.Guerilla.Tags.FieldAttribute("*", typeof(Int32))]
                public Int32 EmptyString6;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(12)]
                public Byte[] EmptyString7;
                public int Size
                {
                    get
                    {
                        return 32;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(6, 4)]
            public sealed class GlobalDetailObjectBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("*", typeof(Byte))]
                public Byte EmptyString;
                [Abide.Guerilla.Tags.FieldAttribute("*", typeof(Byte))]
                public Byte EmptyString1;
                [Abide.Guerilla.Tags.FieldAttribute("*", typeof(Byte))]
                public Byte EmptyString2;
                [Abide.Guerilla.Tags.FieldAttribute("*", typeof(Byte))]
                public Byte EmptyString3;
                [Abide.Guerilla.Tags.FieldAttribute("*", typeof(Int16))]
                public Int16 EmptyString4;
                public int Size
                {
                    get
                    {
                        return 6;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(2, 4)]
            public sealed class GlobalDetailObjectCountsBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("*", typeof(Int16))]
                public Int16 EmptyString;
                public int Size
                {
                    get
                    {
                        return 2;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(16, 4)]
            public sealed class GlobalZReferenceVectorBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("*", typeof(Single))]
                public Single EmptyString;
                [Abide.Guerilla.Tags.FieldAttribute("*", typeof(Single))]
                public Single EmptyString1;
                [Abide.Guerilla.Tags.FieldAttribute("*", typeof(Single))]
                public Single EmptyString2;
                [Abide.Guerilla.Tags.FieldAttribute("*", typeof(Single))]
                public Single EmptyString3;
                public int Size
                {
                    get
                    {
                        return 16;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(216, 4)]
        public sealed class StructureBspClusterBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("Section Info*", typeof(GlobalGeometrySectionInfoStructBlock))]
            public GlobalGeometrySectionInfoStructBlock SectionInfo;
            [Abide.Guerilla.Tags.FieldAttribute("Geometry Block Info*", typeof(GlobalGeometryBlockInfoStructBlock))]
            public GlobalGeometryBlockInfoStructBlock GeometryBlockInfo;
            [Abide.Guerilla.Tags.FieldAttribute("Cluster Data*", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("structure_bsp_cluster_data_block_new", 1, typeof(StructureBspClusterDataBlockNew))]
            public TagBlock ClusterData;
            [Abide.Guerilla.Tags.FieldAttribute("Scenario Sky Index*", typeof(Byte))]
            public Byte ScenarioSkyIndex;
            [Abide.Guerilla.Tags.FieldAttribute("Media Index*", typeof(Byte))]
            public Byte MediaIndex;
            [Abide.Guerilla.Tags.FieldAttribute("Scenario Visible Sky Index*", typeof(Byte))]
            public Byte ScenarioVisibleSkyIndex;
            [Abide.Guerilla.Tags.FieldAttribute("Scenario Atmospheric Fog Index*", typeof(Byte))]
            public Byte ScenarioAtmosphericFogIndex;
            [Abide.Guerilla.Tags.FieldAttribute("Planar Fog Designator*", typeof(Byte))]
            public Byte PlanarFogDesignator;
            [Abide.Guerilla.Tags.FieldAttribute("Visible Fog Plane Index*", typeof(Byte))]
            public Byte VisibleFogPlaneIndex;
            [Abide.Guerilla.Tags.FieldAttribute("Background Sound*", typeof(Int16))]
            public Int16 BackgroundSound;
            [Abide.Guerilla.Tags.FieldAttribute("Sound Environment*", typeof(Int16))]
            public Int16 SoundEnvironment;
            [Abide.Guerilla.Tags.FieldAttribute("Weather*", typeof(Int16))]
            public Int16 Weather;
            [Abide.Guerilla.Tags.FieldAttribute("Transition Structure BSP", typeof(Int16))]
            public Int16 TransitionStructureBsp;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(2)]
            public Byte[] EmptyString;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString1;
            [Abide.Guerilla.Tags.FieldAttribute("Flags", typeof(Int16))]
            [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
            public Int16 Flags;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(2)]
            public Byte[] EmptyString2;
            [Abide.Guerilla.Tags.FieldAttribute("Predicted Resources*", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("predicted_resource_block", 2048, typeof(PredictedResourceBlock))]
            public TagBlock PredictedResources;
            [Abide.Guerilla.Tags.FieldAttribute("Portals*", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("structure_bsp_cluster_portal_index_block", 512, typeof(StructureBspClusterPortalIndexBlock))]
            public TagBlock Portals;
            [Abide.Guerilla.Tags.FieldAttribute("Checksum from Structure*", typeof(Int32))]
            public Int32 ChecksumFromStructure;
            [Abide.Guerilla.Tags.FieldAttribute("Instanced Geometry Indices*", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("structure_bsp_cluster_instanced_geometry_index_block", 1024, typeof(StructureBspClusterInstancedGeometryIndexBlock))]
            public TagBlock InstancedGeometryIndices;
            [Abide.Guerilla.Tags.FieldAttribute("Index Reorder Table*", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("index", 65535, typeof(GlobalGeometrySectionStripIndexBlock))]
            public TagBlock IndexReorderTable;
            public int Size
            {
                get
                {
                    return 216;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(108, 4)]
            public sealed class StructureBspClusterDataBlockNew : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("Section*", typeof(GlobalGeometrySectionStructBlock))]
                public GlobalGeometrySectionStructBlock Section;
                public int Size
                {
                    get
                    {
                        return 108;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(108, 4)]
                public sealed class GlobalGeometrySectionStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("Parts*", typeof(TagBlock))]
                    [Abide.Guerilla.Tags.BlockAttribute("part", 255, typeof(GlobalGeometryPartBlockNew))]
                    public TagBlock Parts;
                    [Abide.Guerilla.Tags.FieldAttribute("Subparts*", typeof(TagBlock))]
                    [Abide.Guerilla.Tags.BlockAttribute("subparts", 32768, typeof(GlobalSubpartsBlock))]
                    public TagBlock Subparts;
                    [Abide.Guerilla.Tags.FieldAttribute("Visibility Bounds*", typeof(TagBlock))]
                    [Abide.Guerilla.Tags.BlockAttribute("visibility bounds", 32768, typeof(GlobalVisibilityBoundsBlock))]
                    public TagBlock VisibilityBounds;
                    [Abide.Guerilla.Tags.FieldAttribute("Raw Vertices*", typeof(TagBlock))]
                    [Abide.Guerilla.Tags.BlockAttribute("vertex", 32767, typeof(GlobalGeometrySectionRawVertexBlock))]
                    public TagBlock RawVertices;
                    [Abide.Guerilla.Tags.FieldAttribute("Strip Indices*", typeof(TagBlock))]
                    [Abide.Guerilla.Tags.BlockAttribute("index", 65535, typeof(GlobalGeometrySectionStripIndexBlock))]
                    public TagBlock StripIndices;
                    [Abide.Guerilla.Tags.FieldAttribute("mopp Reorder Table*", typeof(TagBlock))]
                    [Abide.Guerilla.Tags.BlockAttribute("index", 65535, typeof(GlobalGeometrySectionStripIndexBlock))]
                    public TagBlock MoppReorderTable;
                    [Abide.Guerilla.Tags.FieldAttribute("Vertex Buffers*", typeof(TagBlock))]
                    [Abide.Guerilla.Tags.BlockAttribute("vertex buffer", 512, typeof(GlobalGeometrySectionVertexBufferBlock))]
                    public TagBlock VertexBuffers;
                    [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                    [Abide.Guerilla.Tags.PaddingAttribute(4)]
                    public Byte[] EmptyString;
                    public int Size
                    {
                        get
                        {
                            return 108;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(72, 4)]
                    public sealed class GlobalGeometryPartBlockNew : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Type*", typeof(Int16))]
                        [Abide.Guerilla.Tags.OptionsAttribute(typeof(TypeOptions), false)]
                        public Int16 Type;
                        [Abide.Guerilla.Tags.FieldAttribute("Flags*", typeof(Int16))]
                        [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
                        public Int16 Flags;
                        [Abide.Guerilla.Tags.FieldAttribute("Material*", typeof(Int16))]
                        public Int16 Material;
                        [Abide.Guerilla.Tags.FieldAttribute("Strip Start Index*", typeof(Int16))]
                        public Int16 StripStartIndex;
                        [Abide.Guerilla.Tags.FieldAttribute("Strip Length*", typeof(Int16))]
                        public Int16 StripLength;
                        [Abide.Guerilla.Tags.FieldAttribute("First Subpart Index*", typeof(Int16))]
                        public Int16 FirstSubpartIndex;
                        [Abide.Guerilla.Tags.FieldAttribute("Subpart Count*", typeof(Int16))]
                        public Int16 SubpartCount;
                        [Abide.Guerilla.Tags.FieldAttribute("Max Nodes/Vertex*", typeof(Byte))]
                        public Byte MaxNodesvertex;
                        [Abide.Guerilla.Tags.FieldAttribute("Contributing Compound Node Count*", typeof(Byte))]
                        public Byte ContributingCompoundNodeCount;
                        [Abide.Guerilla.Tags.FieldAttribute("Position*", typeof(Vector3))]
                        public Vector3 Position;
                        [Abide.Guerilla.Tags.FieldAttribute("Node Indices*", typeof(NodeIndicesElement[]))]
                        [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeIndicesElement))]
                        public NodeIndicesElement[] NodeIndices;
                        [Abide.Guerilla.Tags.FieldAttribute("Node Weights*", typeof(NodeWeightsElement[]))]
                        [Abide.Guerilla.Tags.ArrayAttribute(3, typeof(NodeWeightsElement))]
                        public NodeWeightsElement[] NodeWeights;
                        [Abide.Guerilla.Tags.FieldAttribute("lod mipmap magic number*", typeof(Single))]
                        public Single LodMipmapMagicNumber;
                        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                        [Abide.Guerilla.Tags.PaddingAttribute(24)]
                        public Byte[] EmptyString;
                        public int Size
                        {
                            get
                            {
                                return 72;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                        public sealed class NodeIndicesElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("Node Index*", typeof(Byte))]
                            public Byte NodeIndex;
                            public int Size
                            {
                                get
                                {
                                    return 0;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                        }
                        public sealed class NodeWeightsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("Node Weight*", typeof(Single))]
                            public Single NodeWeight;
                            public int Size
                            {
                                get
                                {
                                    return 0;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                        }
                        public enum TypeOptions
                        {
                            NotDrawn = 0,
                            OpaqueShadowOnly = 1,
                            OpaqueShadowCasting = 2,
                            OpaqueNonshadowing = 3,
                            Transparent = 4,
                            LightmapOnly = 5,
                        }
                        public enum FlagsOptions
                        {
                            Decalable = 1,
                            NewPartTypes = 2,
                            DislikesPhotons = 4,
                            OverrideTriangleList = 8,
                            IgnoredByLightmapper = 16,
                        }
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(8, 4)]
                    public sealed class GlobalSubpartsBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("indices_start_index*", typeof(Int16))]
                        public Int16 IndicesStartIndex;
                        [Abide.Guerilla.Tags.FieldAttribute("indices_length*", typeof(Int16))]
                        public Int16 IndicesLength;
                        [Abide.Guerilla.Tags.FieldAttribute("visibility_bounds_index*", typeof(Int16))]
                        public Int16 VisibilityBoundsIndex;
                        [Abide.Guerilla.Tags.FieldAttribute("Part Index*", typeof(Int16))]
                        public Int16 PartIndex;
                        public int Size
                        {
                            get
                            {
                                return 8;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(20, 4)]
                    public sealed class GlobalVisibilityBoundsBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Position x*", typeof(Single))]
                        public Single PositionX;
                        [Abide.Guerilla.Tags.FieldAttribute("Position y*", typeof(Single))]
                        public Single PositionY;
                        [Abide.Guerilla.Tags.FieldAttribute("Position z*", typeof(Single))]
                        public Single PositionZ;
                        [Abide.Guerilla.Tags.FieldAttribute("Radius*", typeof(Single))]
                        public Single Radius;
                        [Abide.Guerilla.Tags.FieldAttribute("Node 0*", typeof(Byte))]
                        public Byte Node0;
                        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                        [Abide.Guerilla.Tags.PaddingAttribute(3)]
                        public Byte[] EmptyString;
                        public int Size
                        {
                            get
                            {
                                return 20;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(196, 4)]
                    public sealed class GlobalGeometrySectionRawVertexBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Position*", typeof(Vector3))]
                        public Vector3 Position;
                        [Abide.Guerilla.Tags.FieldAttribute("Node Indices (OLD)*", typeof(NodeIndicesOldElement[]))]
                        [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeIndicesOldElement))]
                        public NodeIndicesOldElement[] NodeIndicesOld;
                        [Abide.Guerilla.Tags.FieldAttribute("Node Weights*", typeof(NodeWeightsElement[]))]
                        [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeWeightsElement))]
                        public NodeWeightsElement[] NodeWeights;
                        [Abide.Guerilla.Tags.FieldAttribute("Node Indices (NEW)*", typeof(NodeIndicesNewElement[]))]
                        [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeIndicesNewElement))]
                        public NodeIndicesNewElement[] NodeIndicesNew;
                        [Abide.Guerilla.Tags.FieldAttribute("Use New Node Indices*", typeof(Int32))]
                        public Int32 UseNewNodeIndices;
                        [Abide.Guerilla.Tags.FieldAttribute("Adjusted Compound Node Index*", typeof(Int32))]
                        public Int32 AdjustedCompoundNodeIndex;
                        [Abide.Guerilla.Tags.FieldAttribute("texcoord*", typeof(Vector2))]
                        public Vector2 Texcoord;
                        [Abide.Guerilla.Tags.FieldAttribute("Normal*", typeof(Vector3))]
                        public Vector3 Normal;
                        [Abide.Guerilla.Tags.FieldAttribute("Binormal*", typeof(Vector3))]
                        public Vector3 Binormal;
                        [Abide.Guerilla.Tags.FieldAttribute("Tangent*", typeof(Vector3))]
                        public Vector3 Tangent;
                        [Abide.Guerilla.Tags.FieldAttribute("Anisotropic Binormal*", typeof(Vector3))]
                        public Vector3 AnisotropicBinormal;
                        [Abide.Guerilla.Tags.FieldAttribute("Secondary texcoord*", typeof(Vector2))]
                        public Vector2 SecondaryTexcoord;
                        [Abide.Guerilla.Tags.FieldAttribute("Primary Lightmap Color", typeof(ColorRgbF))]
                        public ColorRgbF PrimaryLightmapColor;
                        [Abide.Guerilla.Tags.FieldAttribute("Primary Lightmap texcoord", typeof(Vector2))]
                        public Vector2 PrimaryLightmapTexcoord;
                        [Abide.Guerilla.Tags.FieldAttribute("Primary Lightmap Incident Direction", typeof(Vector3))]
                        public Vector3 PrimaryLightmapIncidentDirection;
                        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                        [Abide.Guerilla.Tags.PaddingAttribute(12)]
                        public Byte[] EmptyString;
                        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                        [Abide.Guerilla.Tags.PaddingAttribute(8)]
                        public Byte[] EmptyString1;
                        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                        [Abide.Guerilla.Tags.PaddingAttribute(12)]
                        public Byte[] EmptyString2;
                        public int Size
                        {
                            get
                            {
                                return 196;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                        public sealed class NodeIndicesOldElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("Node Index (OLD)*", typeof(Int32))]
                            public Int32 NodeIndexOld;
                            public int Size
                            {
                                get
                                {
                                    return 0;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                        }
                        public sealed class NodeWeightsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("node_weight*", typeof(Single))]
                            public Single NodeWeight;
                            public int Size
                            {
                                get
                                {
                                    return 0;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                        }
                        public sealed class NodeIndicesNewElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("Node Index (NEW)*", typeof(Int32))]
                            public Int32 NodeIndexNew;
                            public int Size
                            {
                                get
                                {
                                    return 0;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                        }
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(2, 4)]
                    public sealed class GlobalGeometrySectionStripIndexBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Index*", typeof(Int16))]
                        public Int16 Index;
                        public int Size
                        {
                            get
                            {
                                return 2;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(32, 4)]
                    public sealed class GlobalGeometrySectionVertexBufferBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        public int Size
                        {
                            get
                            {
                                return 32;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(8, 4)]
            public sealed class PredictedResourceBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("type", typeof(Int16))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(TypeOptions), false)]
                public Int16 Type;
                [Abide.Guerilla.Tags.FieldAttribute("resource index", typeof(Int16))]
                public Int16 ResourceIndex;
                [Abide.Guerilla.Tags.FieldAttribute("tag index", typeof(Int32))]
                public Int32 TagIndex;
                public int Size
                {
                    get
                    {
                        return 8;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                public enum TypeOptions
                {
                    Bitmap = 0,
                    Sound = 1,
                    RenderModelGeometry = 2,
                    ClusterGeometry = 3,
                    ClusterInstancedGeometry = 4,
                    LightmapGeometryObjectBuckets = 5,
                    LightmapGeometryInstanceBuckets = 6,
                    LightmapClusterBitmaps = 7,
                    LightmapInstanceBitmaps = 8,
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(2, 4)]
            public sealed class StructureBspClusterPortalIndexBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("Portal Index*", typeof(Int16))]
                public Int16 PortalIndex;
                public int Size
                {
                    get
                    {
                        return 2;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(2, 4)]
            public sealed class StructureBspClusterInstancedGeometryIndexBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("Instanced Geometry Index*", typeof(Int16))]
                public Int16 InstancedGeometryIndex;
                public int Size
                {
                    get
                    {
                        return 2;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(2, 4)]
            public sealed class GlobalGeometrySectionStripIndexBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("Index*", typeof(Int16))]
                public Int16 Index;
                public int Size
                {
                    get
                    {
                        return 2;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(44, 4)]
            public sealed class GlobalGeometrySectionInfoStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("Total Vertex Count*", typeof(Int16))]
                public Int16 TotalVertexCount;
                [Abide.Guerilla.Tags.FieldAttribute("Total Triangle Count*", typeof(Int16))]
                public Int16 TotalTriangleCount;
                [Abide.Guerilla.Tags.FieldAttribute("Total Part Count*", typeof(Int16))]
                public Int16 TotalPartCount;
                [Abide.Guerilla.Tags.FieldAttribute("Shadow-Casting Triangle Count*", typeof(Int16))]
                public Int16 ShadowCastingTriangleCount;
                [Abide.Guerilla.Tags.FieldAttribute("Shadow-Casting Part Count*", typeof(Int16))]
                public Int16 ShadowCastingPartCount;
                [Abide.Guerilla.Tags.FieldAttribute("Opaque Point Count*", typeof(Int16))]
                public Int16 OpaquePointCount;
                [Abide.Guerilla.Tags.FieldAttribute("Opaque Vertex Count*", typeof(Int16))]
                public Int16 OpaqueVertexCount;
                [Abide.Guerilla.Tags.FieldAttribute("Opaque Part Count*", typeof(Int16))]
                public Int16 OpaquePartCount;
                [Abide.Guerilla.Tags.FieldAttribute("Opaque Max Nodes/Vertex*", typeof(Byte))]
                public Byte OpaqueMaxNodesvertex;
                [Abide.Guerilla.Tags.FieldAttribute("Transparent Max Nodes/Vertex*", typeof(Byte))]
                public Byte TransparentMaxNodesvertex;
                [Abide.Guerilla.Tags.FieldAttribute("Shadow-Casting Rigid Triangle Count*", typeof(Int16))]
                public Int16 ShadowCastingRigidTriangleCount;
                [Abide.Guerilla.Tags.FieldAttribute("Geometry Classification*", typeof(Int16))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(GeometryClassificationOptions), false)]
                public Int16 GeometryClassification;
                [Abide.Guerilla.Tags.FieldAttribute("Geometry Compression Flags*", typeof(Int16))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(GeometryCompressionFlagsOptions), true)]
                public Int16 GeometryCompressionFlags;
                [Abide.Guerilla.Tags.FieldAttribute("EMPTY STRING", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("compression info", 1, typeof(GlobalGeometryCompressionInfoBlock))]
                public TagBlock EmptyString;
                [Abide.Guerilla.Tags.FieldAttribute("Hardware Node Count*", typeof(Byte))]
                public Byte HardwareNodeCount;
                [Abide.Guerilla.Tags.FieldAttribute("Node Map Size*", typeof(Byte))]
                public Byte NodeMapSize;
                [Abide.Guerilla.Tags.FieldAttribute("Software Plane Count*", typeof(Int16))]
                public Int16 SoftwarePlaneCount;
                [Abide.Guerilla.Tags.FieldAttribute("total subpart_cont*", typeof(Int16))]
                public Int16 TotalSubpartCont;
                [Abide.Guerilla.Tags.FieldAttribute("Section Lighting Flags*", typeof(Int16))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(SectionLightingFlagsOptions), true)]
                public Int16 SectionLightingFlags;
                public int Size
                {
                    get
                    {
                        return 44;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(56, 4)]
                public sealed class GlobalGeometryCompressionInfoBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    public int Size
                    {
                        get
                        {
                            return 56;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                }
                public enum GeometryClassificationOptions
                {
                    Worldspace = 0,
                    Rigid = 1,
                    RigidBoned = 2,
                    Skinned = 3,
                    UnsupportedReimport = 4,
                }
                public enum GeometryCompressionFlagsOptions
                {
                    CompressedPosition = 1,
                    CompressedTexcoord = 2,
                    CompressedSecondaryTexcoord = 4,
                }
                public enum SectionLightingFlagsOptions
                {
                    HasLmTexcoords = 1,
                    HasLmIncRad = 2,
                    HasLmColors = 4,
                    HasLmPrt = 8,
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(40, 4)]
            public sealed class GlobalGeometryBlockInfoStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("Block Offset*", typeof(Int32))]
                public Int32 BlockOffset;
                [Abide.Guerilla.Tags.FieldAttribute("Block Size*", typeof(Int32))]
                public Int32 BlockSize;
                [Abide.Guerilla.Tags.FieldAttribute("Section Data Size*", typeof(Int32))]
                public Int32 SectionDataSize;
                [Abide.Guerilla.Tags.FieldAttribute("Resource Data Size*", typeof(Int32))]
                public Int32 ResourceDataSize;
                [Abide.Guerilla.Tags.FieldAttribute("Resources*", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("block resources", 1024, typeof(GlobalGeometryBlockResourceBlock))]
                public TagBlock Resources;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(4)]
                public Byte[] EmptyString;
                [Abide.Guerilla.Tags.FieldAttribute("Owner Tag Section Offset*", typeof(Int16))]
                public Int16 OwnerTagSectionOffset;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(2)]
                public Byte[] EmptyString1;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(4)]
                public Byte[] EmptyString2;
                public int Size
                {
                    get
                    {
                        return 40;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(16, 4)]
                public sealed class GlobalGeometryBlockResourceBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("Type*", typeof(Byte))]
                    [Abide.Guerilla.Tags.OptionsAttribute(typeof(TypeOptions), false)]
                    public Byte Type;
                    [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                    [Abide.Guerilla.Tags.PaddingAttribute(3)]
                    public Byte[] EmptyString;
                    [Abide.Guerilla.Tags.FieldAttribute("Primary Locator*", typeof(Int16))]
                    public Int16 PrimaryLocator;
                    [Abide.Guerilla.Tags.FieldAttribute("Secondary Locator*", typeof(Int16))]
                    public Int16 SecondaryLocator;
                    [Abide.Guerilla.Tags.FieldAttribute("Resource Data Size*", typeof(Int32))]
                    public Int32 ResourceDataSize;
                    [Abide.Guerilla.Tags.FieldAttribute("Resource Data Offset*", typeof(Int32))]
                    public Int32 ResourceDataOffset;
                    public int Size
                    {
                        get
                        {
                            return 16;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    public enum TypeOptions
                    {
                        TagBlock = 0,
                        TagData = 1,
                        VertexBuffer = 2,
                    }
                }
            }
            public enum FlagsOptions
            {
                OneWayPortal = 1,
                DoorPortal = 2,
                PostprocessedGeometry = 4,
                IsTheSky = 8,
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(52, 4)]
        public sealed class GlobalGeometryMaterialBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("Old Shader*", typeof(TagReference))]
            public TagReference OldShader;
            [Abide.Guerilla.Tags.FieldAttribute("Shader^*", typeof(TagReference))]
            public TagReference Shader;
            [Abide.Guerilla.Tags.FieldAttribute("Properties*", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("material property", 16, typeof(GlobalGeometryMaterialPropertyBlock))]
            public TagBlock Properties;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString;
            [Abide.Guerilla.Tags.FieldAttribute("Breakable Surface Index*", typeof(Byte))]
            public Byte BreakableSurfaceIndex;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(3)]
            public Byte[] EmptyString1;
            public int Size
            {
                get
                {
                    return 52;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(8, 4)]
            public sealed class GlobalGeometryMaterialPropertyBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("Type*", typeof(Int16))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(TypeOptions), false)]
                public Int16 Type;
                [Abide.Guerilla.Tags.FieldAttribute("Int Value*", typeof(Int16))]
                public Int16 IntValue;
                [Abide.Guerilla.Tags.FieldAttribute("Real Value*", typeof(Single))]
                public Single RealValue;
                public int Size
                {
                    get
                    {
                        return 8;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                public enum TypeOptions
                {
                    LightmapResolution = 0,
                    LightmapPower = 1,
                    LightmapHalfLife = 2,
                    LightmapDiffuseScale = 3,
                }
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(2, 4)]
        public sealed class StructureBspSkyOwnerClusterBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("Cluster Owner*", typeof(Int16))]
            public Int16 ClusterOwner;
            public int Size
            {
                get
                {
                    return 2;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(24, 4)]
        public sealed class StructureBspConveyorSurfaceBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("u", typeof(Vector3))]
            public Vector3 U;
            [Abide.Guerilla.Tags.FieldAttribute("v", typeof(Vector3))]
            public Vector3 V;
            public int Size
            {
                get
                {
                    return 24;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(24, 4)]
        public sealed class StructureBspBreakableSurfaceBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("Instanced Geometry Instance*", typeof(Int16))]
            public Int16 InstancedGeometryInstance;
            [Abide.Guerilla.Tags.FieldAttribute("Breakable Surface Index*", typeof(Int16))]
            public Int16 BreakableSurfaceIndex;
            [Abide.Guerilla.Tags.FieldAttribute("Centroid*", typeof(Vector3))]
            public Vector3 Centroid;
            [Abide.Guerilla.Tags.FieldAttribute("Radius*", typeof(Single))]
            public Single Radius;
            [Abide.Guerilla.Tags.FieldAttribute("Collision Surface Index*", typeof(Int32))]
            public Int32 CollisionSurfaceIndex;
            public int Size
            {
                get
                {
                    return 24;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(156, 4)]
        public sealed class PathfindingDataBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("sectors", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("sector_block", 65534, typeof(SectorBlock))]
            public TagBlock Sectors;
            [Abide.Guerilla.Tags.FieldAttribute("links", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("sector_link_block", 262144, typeof(SectorLinkBlock))]
            public TagBlock Links;
            [Abide.Guerilla.Tags.FieldAttribute("refs", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("ref_block", 131072, typeof(RefBlock))]
            public TagBlock Refs;
            [Abide.Guerilla.Tags.FieldAttribute("bsp2d nodes", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("sector_bsp2d_nodes_block", 131072, typeof(SectorBsp2dNodesBlock))]
            public TagBlock Bsp2dNodes;
            [Abide.Guerilla.Tags.FieldAttribute("surface flags", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("surface_flags_block", 4096, typeof(SurfaceFlagsBlock))]
            public TagBlock SurfaceFlags;
            [Abide.Guerilla.Tags.FieldAttribute("vertices", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("sector_vertex_block", 65535, typeof(SectorVertexBlock))]
            public TagBlock Vertices;
            [Abide.Guerilla.Tags.FieldAttribute("object refs", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("environment_object_refs", 2000, typeof(EnvironmentObjectRefs))]
            public TagBlock ObjectRefs;
            [Abide.Guerilla.Tags.FieldAttribute("pathfinding hints", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("pathfinding_hints_block", 32767, typeof(PathfindingHintsBlock))]
            public TagBlock PathfindingHints;
            [Abide.Guerilla.Tags.FieldAttribute("instanced geometry refs", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("instanced_geometry_reference_block", 1024, typeof(InstancedGeometryReferenceBlock))]
            public TagBlock InstancedGeometryRefs;
            [Abide.Guerilla.Tags.FieldAttribute("structure checksum*", typeof(Int32))]
            public Int32 StructureChecksum;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(32)]
            public Byte[] EmptyString;
            [Abide.Guerilla.Tags.FieldAttribute("user-placed hints", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("user_hint_block", 1, typeof(UserHintBlock))]
            public TagBlock UserPlacedHints;
            public int Size
            {
                get
                {
                    return 156;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(8, 4)]
            public sealed class SectorBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("Path-finding sector flags", typeof(Int16))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(PathFindingSectorFlagsOptions), true)]
                public Int16 PathFindingSectorFlags;
                [Abide.Guerilla.Tags.FieldAttribute("hint index", typeof(Int16))]
                public Int16 HintIndex;
                [Abide.Guerilla.Tags.FieldAttribute("first link (do not set manually)", typeof(Int32))]
                public Int32 FirstLinkDoNotSetManually;
                public int Size
                {
                    get
                    {
                        return 8;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                public enum PathFindingSectorFlagsOptions
                {
                    SectorWalkable = 1,
                    SectorBreakable = 2,
                    SectorMobile = 4,
                    SectorBspSource = 8,
                    Floor = 16,
                    Ceiling = 32,
                    WallNorth = 64,
                    WallSouth = 128,
                    WallEast = 256,
                    WallWest = 512,
                    Crouchable = 1024,
                    Aligned = 2048,
                    SectorStep = 4096,
                    SectorInterior = 8192,
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(16, 4)]
            public sealed class SectorLinkBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("vertex 1", typeof(Int16))]
                public Int16 Vertex1;
                [Abide.Guerilla.Tags.FieldAttribute("vertex 2", typeof(Int16))]
                public Int16 Vertex2;
                [Abide.Guerilla.Tags.FieldAttribute("link flags", typeof(Int16))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(LinkFlagsOptions), true)]
                public Int16 LinkFlags;
                [Abide.Guerilla.Tags.FieldAttribute("hint index", typeof(Int16))]
                public Int16 HintIndex;
                [Abide.Guerilla.Tags.FieldAttribute("forward link", typeof(Int16))]
                public Int16 ForwardLink;
                [Abide.Guerilla.Tags.FieldAttribute("reverse link", typeof(Int16))]
                public Int16 ReverseLink;
                [Abide.Guerilla.Tags.FieldAttribute("left sector", typeof(Int16))]
                public Int16 LeftSector;
                [Abide.Guerilla.Tags.FieldAttribute("right sector", typeof(Int16))]
                public Int16 RightSector;
                public int Size
                {
                    get
                    {
                        return 16;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                public enum LinkFlagsOptions
                {
                    SectorLinkFromCollisionEdge = 1,
                    SectorIntersectionLink = 2,
                    SectorLinkBsp2dCreationError = 4,
                    SectorLinkTopologyError = 8,
                    SectorLinkChainError = 16,
                    SectorLinkBothSectorsWalkable = 32,
                    SectorLinkMagicHangingLink = 64,
                    SectorLinkThreshold = 128,
                    SectorLinkCrouchable = 256,
                    SectorLinkWallBase = 512,
                    SectorLinkLedge = 1024,
                    SectorLinkLeanable = 2048,
                    SectorLinkStartCorner = 4096,
                    SectorLinkEndCorner = 8192,
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(4, 4)]
            public sealed class RefBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("node ref or sector ref", typeof(Int32))]
                public Int32 NodeRefOrSectorRef;
                public int Size
                {
                    get
                    {
                        return 4;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(20, 4)]
            public sealed class SectorBsp2dNodesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("plane*", typeof(Vector3))]
                public Vector3 Plane;
                [Abide.Guerilla.Tags.FieldAttribute("left child*", typeof(Int32))]
                public Int32 LeftChild;
                [Abide.Guerilla.Tags.FieldAttribute("right child*", typeof(Int32))]
                public Int32 RightChild;
                public int Size
                {
                    get
                    {
                        return 20;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(4, 4)]
            public sealed class SurfaceFlagsBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("flags*", typeof(Int32))]
                public Int32 Flags;
                public int Size
                {
                    get
                    {
                        return 4;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(12, 4)]
            public sealed class SectorVertexBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("point*", typeof(Vector3))]
                public Vector3 Point;
                public int Size
                {
                    get
                    {
                        return 12;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(36, 4)]
            public sealed class EnvironmentObjectRefs : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("flags", typeof(Int16))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
                public Int16 Flags;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(2)]
                public Byte[] EmptyString;
                [Abide.Guerilla.Tags.FieldAttribute("first sector*", typeof(Int32))]
                public Int32 FirstSector;
                [Abide.Guerilla.Tags.FieldAttribute("last sector*", typeof(Int32))]
                public Int32 LastSector;
                [Abide.Guerilla.Tags.FieldAttribute("bsps*", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("environment_object_bsp_refs", 1024, typeof(EnvironmentObjectBspRefs))]
                public TagBlock Bsps;
                [Abide.Guerilla.Tags.FieldAttribute("nodes*", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("environment_object_nodes", 255, typeof(EnvironmentObjectNodes))]
                public TagBlock Nodes;
                public int Size
                {
                    get
                    {
                        return 36;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(16, 4)]
                public sealed class EnvironmentObjectBspRefs : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("bsp reference*", typeof(Int32))]
                    public Int32 BspReference;
                    [Abide.Guerilla.Tags.FieldAttribute("first sector*", typeof(Int32))]
                    public Int32 FirstSector;
                    [Abide.Guerilla.Tags.FieldAttribute("last sector*", typeof(Int32))]
                    public Int32 LastSector;
                    [Abide.Guerilla.Tags.FieldAttribute("node_index*", typeof(Int16))]
                    public Int16 NodeIndex;
                    [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                    [Abide.Guerilla.Tags.PaddingAttribute(2)]
                    public Byte[] EmptyString;
                    public int Size
                    {
                        get
                        {
                            return 16;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(4, 4)]
                public sealed class EnvironmentObjectNodes : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("reference frame index", typeof(Int16))]
                    public Int16 ReferenceFrameIndex;
                    [Abide.Guerilla.Tags.FieldAttribute("projection axis", typeof(Byte))]
                    public Byte ProjectionAxis;
                    [Abide.Guerilla.Tags.FieldAttribute("projection sign", typeof(Byte))]
                    [Abide.Guerilla.Tags.OptionsAttribute(typeof(ProjectionSignOptions), true)]
                    public Byte ProjectionSign;
                    public int Size
                    {
                        get
                        {
                            return 4;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    public enum ProjectionSignOptions
                    {
                        ProjectionSign = 1,
                    }
                }
                public enum FlagsOptions
                {
                    Mobile = 1,
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(20, 4)]
            public sealed class PathfindingHintsBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("hint type", typeof(Int16))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(HintTypeOptions), false)]
                public Int16 HintType;
                [Abide.Guerilla.Tags.FieldAttribute("Next hint index", typeof(Int16))]
                public Int16 NextHintIndex;
                [Abide.Guerilla.Tags.FieldAttribute("hint data 0*", typeof(Int16))]
                public Int16 HintData0;
                [Abide.Guerilla.Tags.FieldAttribute("hint data 1*", typeof(Int16))]
                public Int16 HintData1;
                [Abide.Guerilla.Tags.FieldAttribute("hint data 2*", typeof(Int16))]
                public Int16 HintData2;
                [Abide.Guerilla.Tags.FieldAttribute("hint data 3*", typeof(Int16))]
                public Int16 HintData3;
                [Abide.Guerilla.Tags.FieldAttribute("hint data 4*", typeof(Int16))]
                public Int16 HintData4;
                [Abide.Guerilla.Tags.FieldAttribute("hint data 5*", typeof(Int16))]
                public Int16 HintData5;
                [Abide.Guerilla.Tags.FieldAttribute("hint data 6*", typeof(Int16))]
                public Int16 HintData6;
                [Abide.Guerilla.Tags.FieldAttribute("hint data 7*", typeof(Int16))]
                public Int16 HintData7;
                public int Size
                {
                    get
                    {
                        return 20;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                public enum HintTypeOptions
                {
                    IntersectionLink = 0,
                    JumpLink = 1,
                    ClimbLink = 2,
                    VaultLink = 3,
                    MountLink = 4,
                    HoistLink = 5,
                    WallJumpLink = 6,
                    BreakableFloor = 7,
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(4, 4)]
            public sealed class InstancedGeometryReferenceBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("pathfinding object_index", typeof(Int16))]
                public Int16 PathfindingObjectIndex;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(2)]
                public Byte[] EmptyString;
                public int Size
                {
                    get
                    {
                        return 4;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(108, 4)]
            public sealed class UserHintBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("point geometry", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("user_hint_point_block", 200, typeof(UserHintPointBlock))]
                public TagBlock PointGeometry;
                [Abide.Guerilla.Tags.FieldAttribute("ray geometry", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("user_hint_ray_block", 200, typeof(UserHintRayBlock))]
                public TagBlock RayGeometry;
                [Abide.Guerilla.Tags.FieldAttribute("line segment geometry", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("user_hint_line_segment_block", 200, typeof(UserHintLineSegmentBlock))]
                public TagBlock LineSegmentGeometry;
                [Abide.Guerilla.Tags.FieldAttribute("parallelogram geometry", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("user_hint_parallelogram_block", 200, typeof(UserHintParallelogramBlock))]
                public TagBlock ParallelogramGeometry;
                [Abide.Guerilla.Tags.FieldAttribute("polygon geometry", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("user_hint_polygon_block", 200, typeof(UserHintPolygonBlock))]
                public TagBlock PolygonGeometry;
                [Abide.Guerilla.Tags.FieldAttribute("jump hints", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("user_hint_jump_block", 200, typeof(UserHintJumpBlock))]
                public TagBlock JumpHints;
                [Abide.Guerilla.Tags.FieldAttribute("climb hints", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("user_hint_climb_block", 200, typeof(UserHintClimbBlock))]
                public TagBlock ClimbHints;
                [Abide.Guerilla.Tags.FieldAttribute("well hints", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("user_hint_well_block", 200, typeof(UserHintWellBlock))]
                public TagBlock WellHints;
                [Abide.Guerilla.Tags.FieldAttribute("flight hints", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("user_hint_flight_block", 50, typeof(UserHintFlightBlock))]
                public TagBlock FlightHints;
                public int Size
                {
                    get
                    {
                        return 108;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(16, 4)]
                public sealed class UserHintPointBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("Point", typeof(Vector3))]
                    public Vector3 Point;
                    [Abide.Guerilla.Tags.FieldAttribute("reference frame*", typeof(Int16))]
                    public Int16 ReferenceFrame;
                    [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                    [Abide.Guerilla.Tags.PaddingAttribute(2)]
                    public Byte[] EmptyString;
                    public int Size
                    {
                        get
                        {
                            return 16;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(28, 4)]
                public sealed class UserHintRayBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("Point", typeof(Vector3))]
                    public Vector3 Point;
                    [Abide.Guerilla.Tags.FieldAttribute("reference frame*", typeof(Int16))]
                    public Int16 ReferenceFrame;
                    [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                    [Abide.Guerilla.Tags.PaddingAttribute(2)]
                    public Byte[] EmptyString;
                    [Abide.Guerilla.Tags.FieldAttribute("Vector", typeof(Vector3))]
                    public Vector3 Vector;
                    public int Size
                    {
                        get
                        {
                            return 28;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(36, 4)]
                public sealed class UserHintLineSegmentBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("Flags", typeof(Int32))]
                    [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
                    public Int32 Flags;
                    [Abide.Guerilla.Tags.FieldAttribute("Point 0", typeof(Vector3))]
                    public Vector3 Point0;
                    [Abide.Guerilla.Tags.FieldAttribute("reference frame*", typeof(Int16))]
                    public Int16 ReferenceFrame;
                    [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                    [Abide.Guerilla.Tags.PaddingAttribute(2)]
                    public Byte[] EmptyString;
                    [Abide.Guerilla.Tags.FieldAttribute("Point 1", typeof(Vector3))]
                    public Vector3 Point1;
                    [Abide.Guerilla.Tags.FieldAttribute("reference frame*", typeof(Int16))]
                    public Int16 ReferenceFrame1;
                    [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                    [Abide.Guerilla.Tags.PaddingAttribute(2)]
                    public Byte[] EmptyString1;
                    public int Size
                    {
                        get
                        {
                            return 36;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    public enum FlagsOptions
                    {
                        Bidirectional = 1,
                        Closed = 2,
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(68, 4)]
                public sealed class UserHintParallelogramBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("Flags", typeof(Int32))]
                    [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
                    public Int32 Flags;
                    [Abide.Guerilla.Tags.FieldAttribute("Point 0", typeof(Vector3))]
                    public Vector3 Point0;
                    [Abide.Guerilla.Tags.FieldAttribute("reference frame*", typeof(Int16))]
                    public Int16 ReferenceFrame;
                    [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                    [Abide.Guerilla.Tags.PaddingAttribute(2)]
                    public Byte[] EmptyString;
                    [Abide.Guerilla.Tags.FieldAttribute("Point 1", typeof(Vector3))]
                    public Vector3 Point1;
                    [Abide.Guerilla.Tags.FieldAttribute("reference frame*", typeof(Int16))]
                    public Int16 ReferenceFrame1;
                    [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                    [Abide.Guerilla.Tags.PaddingAttribute(2)]
                    public Byte[] EmptyString1;
                    [Abide.Guerilla.Tags.FieldAttribute("Point 2", typeof(Vector3))]
                    public Vector3 Point2;
                    [Abide.Guerilla.Tags.FieldAttribute("reference frame*", typeof(Int16))]
                    public Int16 ReferenceFrame2;
                    [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                    [Abide.Guerilla.Tags.PaddingAttribute(2)]
                    public Byte[] EmptyString2;
                    [Abide.Guerilla.Tags.FieldAttribute("Point 3", typeof(Vector3))]
                    public Vector3 Point3;
                    [Abide.Guerilla.Tags.FieldAttribute("reference frame*", typeof(Int16))]
                    public Int16 ReferenceFrame3;
                    [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                    [Abide.Guerilla.Tags.PaddingAttribute(2)]
                    public Byte[] EmptyString3;
                    public int Size
                    {
                        get
                        {
                            return 68;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    public enum FlagsOptions
                    {
                        Bidirectional = 1,
                        Closed = 2,
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(16, 4)]
                public sealed class UserHintPolygonBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("Flags", typeof(Int32))]
                    [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
                    public Int32 Flags;
                    [Abide.Guerilla.Tags.FieldAttribute("Points", typeof(TagBlock))]
                    [Abide.Guerilla.Tags.BlockAttribute("user_hint_point_block", 200, typeof(UserHintPointBlock))]
                    public TagBlock Points;
                    public int Size
                    {
                        get
                        {
                            return 16;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(16, 4)]
                    public sealed class UserHintPointBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Point", typeof(Vector3))]
                        public Vector3 Point;
                        [Abide.Guerilla.Tags.FieldAttribute("reference frame*", typeof(Int16))]
                        public Int16 ReferenceFrame;
                        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                        [Abide.Guerilla.Tags.PaddingAttribute(2)]
                        public Byte[] EmptyString;
                        public int Size
                        {
                            get
                            {
                                return 16;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                    public enum FlagsOptions
                    {
                        Bidirectional = 1,
                        Closed = 2,
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(8, 4)]
                public sealed class UserHintJumpBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("Flags", typeof(Int16))]
                    [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
                    public Int16 Flags;
                    [Abide.Guerilla.Tags.FieldAttribute("geometry index*", typeof(Int16))]
                    public Int16 GeometryIndex;
                    [Abide.Guerilla.Tags.FieldAttribute("force jump height", typeof(Int16))]
                    [Abide.Guerilla.Tags.OptionsAttribute(typeof(ForceJumpHeightOptions), false)]
                    public Int16 ForceJumpHeight;
                    [Abide.Guerilla.Tags.FieldAttribute("control flags", typeof(Int16))]
                    [Abide.Guerilla.Tags.OptionsAttribute(typeof(ControlFlagsOptions), true)]
                    public Int16 ControlFlags;
                    public int Size
                    {
                        get
                        {
                            return 8;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    public enum FlagsOptions
                    {
                        Bidirectional = 1,
                        Closed = 2,
                    }
                    public enum ForceJumpHeightOptions
                    {
                        None = 0,
                        Down = 1,
                        Step = 2,
                        Crouch = 3,
                        Stand = 4,
                        Storey = 5,
                        Tower = 6,
                        Infinite = 7,
                    }
                    public enum ControlFlagsOptions
                    {
                        MagicLift = 1,
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(4, 4)]
                public sealed class UserHintClimbBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("Flags", typeof(Int16))]
                    [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
                    public Int16 Flags;
                    [Abide.Guerilla.Tags.FieldAttribute("geometry index*", typeof(Int16))]
                    public Int16 GeometryIndex;
                    public int Size
                    {
                        get
                        {
                            return 4;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    public enum FlagsOptions
                    {
                        Bidirectional = 1,
                        Closed = 2,
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(16, 4)]
                public sealed class UserHintWellBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("flags", typeof(Int32))]
                    [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
                    public Int32 Flags;
                    [Abide.Guerilla.Tags.FieldAttribute("points", typeof(TagBlock))]
                    [Abide.Guerilla.Tags.BlockAttribute("user_hint_well_point_block", 200, typeof(UserHintWellPointBlock))]
                    public TagBlock Points;
                    public int Size
                    {
                        get
                        {
                            return 16;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(32, 4)]
                    public sealed class UserHintWellPointBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("type", typeof(Int16))]
                        [Abide.Guerilla.Tags.OptionsAttribute(typeof(TypeOptions), false)]
                        public Int16 Type;
                        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                        [Abide.Guerilla.Tags.PaddingAttribute(2)]
                        public Byte[] EmptyString;
                        [Abide.Guerilla.Tags.FieldAttribute("point", typeof(Vector3))]
                        public Vector3 Point;
                        [Abide.Guerilla.Tags.FieldAttribute("reference frame", typeof(Int16))]
                        public Int16 ReferenceFrame;
                        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                        [Abide.Guerilla.Tags.PaddingAttribute(2)]
                        public Byte[] EmptyString1;
                        [Abide.Guerilla.Tags.FieldAttribute("sector index", typeof(Int32))]
                        public Int32 SectorIndex;
                        [Abide.Guerilla.Tags.FieldAttribute("normal", typeof(Vector2))]
                        public Vector2 Normal;
                        public int Size
                        {
                            get
                            {
                                return 32;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                        public enum TypeOptions
                        {
                            Jump = 0,
                            Climb = 1,
                            Hoist = 2,
                        }
                    }
                    public enum FlagsOptions
                    {
                        Bidirectional = 1,
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(12, 4)]
                public sealed class UserHintFlightBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("points", typeof(TagBlock))]
                    [Abide.Guerilla.Tags.BlockAttribute("user_hint_flight_point_block", 10, typeof(UserHintFlightPointBlock))]
                    public TagBlock Points;
                    public int Size
                    {
                        get
                        {
                            return 12;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(12, 4)]
                    public sealed class UserHintFlightPointBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("point", typeof(Vector3))]
                        public Vector3 Point;
                        public int Size
                        {
                            get
                            {
                                return 12;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                }
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(1, 4)]
        public sealed class StructureBspPathfindingEdgesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("Midpoint*", typeof(Byte))]
            public Byte Midpoint;
            public int Size
            {
                get
                {
                    return 1;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(116, 4)]
        public sealed class StructureBspBackgroundSoundPaletteBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("Name^", typeof(String32))]
            public String32 Name;
            [Abide.Guerilla.Tags.FieldAttribute("Background Sound", typeof(TagReference))]
            public TagReference BackgroundSound;
            [Abide.Guerilla.Tags.FieldAttribute("Inside Cluster Sound#Play only when player is inside cluster.", typeof(TagReference))]
            public TagReference InsideClusterSound;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(20)]
            public Byte[] EmptyString;
            [Abide.Guerilla.Tags.FieldAttribute("Cutoff Distance", typeof(Single))]
            public Single CutoffDistance;
            [Abide.Guerilla.Tags.FieldAttribute("Scale Flags", typeof(Int32))]
            [Abide.Guerilla.Tags.OptionsAttribute(typeof(ScaleFlagsOptions), true)]
            public Int32 ScaleFlags;
            [Abide.Guerilla.Tags.FieldAttribute("Interior Scale", typeof(Single))]
            public Single InteriorScale;
            [Abide.Guerilla.Tags.FieldAttribute("Portal Scale", typeof(Single))]
            public Single PortalScale;
            [Abide.Guerilla.Tags.FieldAttribute("Exterior Scale", typeof(Single))]
            public Single ExteriorScale;
            [Abide.Guerilla.Tags.FieldAttribute("Interpolation Speed:1/sec", typeof(Single))]
            public Single InterpolationSpeed;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(8)]
            public Byte[] EmptyString1;
            public int Size
            {
                get
                {
                    return 116;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            public enum ScaleFlagsOptions
            {
                OverrideDefaultScale = 1,
                UseAdjacentClusterAsPortalScale = 2,
                UseAdjacentClusterAsExteriorScale = 4,
                ScaleWithWeatherIntensity = 8,
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(80, 4)]
        public sealed class StructureBspSoundEnvironmentPaletteBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("Name^", typeof(String32))]
            public String32 Name;
            [Abide.Guerilla.Tags.FieldAttribute("Sound Environment", typeof(TagReference))]
            public TagReference SoundEnvironment;
            [Abide.Guerilla.Tags.FieldAttribute("Cutoff Distance", typeof(Single))]
            public Single CutoffDistance;
            [Abide.Guerilla.Tags.FieldAttribute("Interpolation Speed:1/sec", typeof(Single))]
            public Single InterpolationSpeed;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(24)]
            public Byte[] EmptyString;
            public int Size
            {
                get
                {
                    return 80;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(60, 4)]
        public sealed class StructureBspMarkerBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("Name*", typeof(String32))]
            public String32 Name;
            [Abide.Guerilla.Tags.FieldAttribute("Rotation", typeof(Quaternion))]
            public Quaternion Rotation;
            [Abide.Guerilla.Tags.FieldAttribute("Position*", typeof(Vector3))]
            public Vector3 Position;
            public int Size
            {
                get
                {
                    return 60;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(16, 4)]
        public sealed class StructureBspRuntimeDecalBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(16)]
            public Byte[] EmptyString;
            public int Size
            {
                get
                {
                    return 16;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(36, 4)]
        public sealed class StructureBspEnvironmentObjectPaletteBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("Definition", typeof(TagReference))]
            public TagReference Definition;
            [Abide.Guerilla.Tags.FieldAttribute("Model", typeof(TagReference))]
            public TagReference Model;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString;
            public int Size
            {
                get
                {
                    return 36;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(104, 4)]
        public sealed class StructureBspEnvironmentObjectBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("Name^", typeof(String32))]
            public String32 Name;
            [Abide.Guerilla.Tags.FieldAttribute("Rotation", typeof(Quaternion))]
            public Quaternion Rotation;
            [Abide.Guerilla.Tags.FieldAttribute("Translation", typeof(Vector3))]
            public Vector3 Translation;
            [Abide.Guerilla.Tags.FieldAttribute("palette_index", typeof(Int16))]
            public Int16 PaletteIndex;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(2)]
            public Byte[] EmptyString;
            [Abide.Guerilla.Tags.FieldAttribute("Unique ID*", typeof(Int32))]
            public Int32 UniqueId;
            [Abide.Guerilla.Tags.FieldAttribute("Exported Object Type", typeof(Tag))]
            public Tag ExportedObjectType;
            [Abide.Guerilla.Tags.FieldAttribute("Scenario Object Name", typeof(String32))]
            public String32 ScenarioObjectName;
            public int Size
            {
                get
                {
                    return 104;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(16, 4)]
        public sealed class StructureBspLightmapDataBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("Bitmap Group", typeof(TagReference))]
            public TagReference BitmapGroup;
            public int Size
            {
                get
                {
                    return 16;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(24, 4)]
        public sealed class GlobalMapLeafBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("faces*", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("map_leaf_face_block", 512, typeof(MapLeafFaceBlock))]
            public TagBlock Faces;
            [Abide.Guerilla.Tags.FieldAttribute("connection indices*", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("map_leaf_connection_index_block", 512, typeof(MapLeafConnectionIndexBlock))]
            public TagBlock ConnectionIndices;
            public int Size
            {
                get
                {
                    return 24;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(16, 4)]
            public sealed class MapLeafFaceBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("node index*", typeof(Int32))]
                public Int32 NodeIndex;
                [Abide.Guerilla.Tags.FieldAttribute("vertices*", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("map_leaf_face_vertex_block", 64, typeof(MapLeafFaceVertexBlock))]
                public TagBlock Vertices;
                public int Size
                {
                    get
                    {
                        return 16;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(12, 4)]
                public sealed class MapLeafFaceVertexBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("vertex*", typeof(Vector3))]
                    public Vector3 Vertex;
                    public int Size
                    {
                        get
                        {
                            return 12;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(4, 4)]
            public sealed class MapLeafConnectionIndexBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("connection index*", typeof(Int32))]
                public Int32 ConnectionIndex;
                public int Size
                {
                    get
                    {
                        return 4;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(28, 4)]
        public sealed class GlobalLeafConnectionBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("plane index*", typeof(Int32))]
            public Int32 PlaneIndex;
            [Abide.Guerilla.Tags.FieldAttribute("back leaf index*", typeof(Int32))]
            public Int32 BackLeafIndex;
            [Abide.Guerilla.Tags.FieldAttribute("front leaf index*", typeof(Int32))]
            public Int32 FrontLeafIndex;
            [Abide.Guerilla.Tags.FieldAttribute("vertices*", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("leaf_connection_vertex_block", 64, typeof(LeafConnectionVertexBlock))]
            public TagBlock Vertices;
            [Abide.Guerilla.Tags.FieldAttribute("area*", typeof(Single))]
            public Single Area;
            public int Size
            {
                get
                {
                    return 28;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(12, 4)]
            public sealed class LeafConnectionVertexBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("vertex*", typeof(Vector3))]
                public Vector3 Vertex;
                public int Size
                {
                    get
                    {
                        return 12;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(680, 4)]
        public sealed class GlobalErrorReportCategoriesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("Name^*", typeof(String256))]
            public String256 Name;
            [Abide.Guerilla.Tags.FieldAttribute("Report Type*", typeof(Int16))]
            [Abide.Guerilla.Tags.OptionsAttribute(typeof(ReportTypeOptions), false)]
            public Int16 ReportType;
            [Abide.Guerilla.Tags.FieldAttribute("Flags*", typeof(Int16))]
            [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
            public Int16 Flags;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(2)]
            public Byte[] EmptyString;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(2)]
            public Byte[] EmptyString1;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(404)]
            public Byte[] EmptyString2;
            [Abide.Guerilla.Tags.FieldAttribute("Reports*", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("error report", 1024, typeof(ErrorReportsBlock))]
            public TagBlock Reports;
            public int Size
            {
                get
                {
                    return 680;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(644, 4)]
            public sealed class ErrorReportsBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("Type*", typeof(Int16))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(TypeOptions), false)]
                public Int16 Type;
                [Abide.Guerilla.Tags.FieldAttribute("Flags*", typeof(Int16))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
                public Int16 Flags;
                [Abide.Guerilla.Tags.FieldAttribute("Source Filename*", typeof(String32))]
                public String32 SourceFilename;
                [Abide.Guerilla.Tags.FieldAttribute("Source Line Number*", typeof(Int32))]
                public Int32 SourceLineNumber;
                [Abide.Guerilla.Tags.FieldAttribute("Vertices*", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("error report vertex", 1024, typeof(ErrorReportVerticesBlock))]
                public TagBlock Vertices;
                [Abide.Guerilla.Tags.FieldAttribute("Vectors*", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("error report vector", 1024, typeof(ErrorReportVectorsBlock))]
                public TagBlock Vectors;
                [Abide.Guerilla.Tags.FieldAttribute("Lines*", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("error report line", 1024, typeof(ErrorReportLinesBlock))]
                public TagBlock Lines;
                [Abide.Guerilla.Tags.FieldAttribute("Triangles*", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("error report triangle", 1024, typeof(ErrorReportTrianglesBlock))]
                public TagBlock Triangles;
                [Abide.Guerilla.Tags.FieldAttribute("Quads*", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("error report quad", 1024, typeof(ErrorReportQuadsBlock))]
                public TagBlock Quads;
                [Abide.Guerilla.Tags.FieldAttribute("Comments*", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("error report comment", 1024, typeof(ErrorReportCommentsBlock))]
                public TagBlock Comments;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(380)]
                public Byte[] EmptyString;
                [Abide.Guerilla.Tags.FieldAttribute("Report Key*", typeof(Int32))]
                public Int32 ReportKey;
                [Abide.Guerilla.Tags.FieldAttribute("Node Index*", typeof(Int32))]
                public Int32 NodeIndex;
                [Abide.Guerilla.Tags.FieldAttribute("Color*", typeof(ColorArgbF))]
                public ColorArgbF Color;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(84)]
                public Byte[] EmptyString1;
                public int Size
                {
                    get
                    {
                        return 644;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(52, 4)]
                public sealed class ErrorReportVerticesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("Position*", typeof(Vector3))]
                    public Vector3 Position;
                    [Abide.Guerilla.Tags.FieldAttribute("Node Indices*", typeof(NodeIndicesElement[]))]
                    [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeIndicesElement))]
                    public NodeIndicesElement[] NodeIndices;
                    [Abide.Guerilla.Tags.FieldAttribute("Node Weights*", typeof(NodeWeightsElement[]))]
                    [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeWeightsElement))]
                    public NodeWeightsElement[] NodeWeights;
                    [Abide.Guerilla.Tags.FieldAttribute("Color*", typeof(ColorArgbF))]
                    public ColorArgbF Color;
                    [Abide.Guerilla.Tags.FieldAttribute("Screen Size*", typeof(Single))]
                    public Single ScreenSize;
                    public int Size
                    {
                        get
                        {
                            return 52;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    public sealed class NodeIndicesElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Node Index*", typeof(Byte))]
                        public Byte NodeIndex;
                        public int Size
                        {
                            get
                            {
                                return 0;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                    public sealed class NodeWeightsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Node Weight*", typeof(Single))]
                        public Single NodeWeight;
                        public int Size
                        {
                            get
                            {
                                return 0;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(64, 4)]
                public sealed class ErrorReportVectorsBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("Position*", typeof(Vector3))]
                    public Vector3 Position;
                    [Abide.Guerilla.Tags.FieldAttribute("Node Indices*", typeof(NodeIndicesElement[]))]
                    [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeIndicesElement))]
                    public NodeIndicesElement[] NodeIndices;
                    [Abide.Guerilla.Tags.FieldAttribute("Node Weights*", typeof(NodeWeightsElement[]))]
                    [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeWeightsElement))]
                    public NodeWeightsElement[] NodeWeights;
                    [Abide.Guerilla.Tags.FieldAttribute("Color*", typeof(ColorArgbF))]
                    public ColorArgbF Color;
                    [Abide.Guerilla.Tags.FieldAttribute("Normal*", typeof(Vector3))]
                    public Vector3 Normal;
                    [Abide.Guerilla.Tags.FieldAttribute("Screen Length*", typeof(Single))]
                    public Single ScreenLength;
                    public int Size
                    {
                        get
                        {
                            return 64;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    public sealed class NodeIndicesElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Node Index*", typeof(Byte))]
                        public Byte NodeIndex;
                        public int Size
                        {
                            get
                            {
                                return 0;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                    public sealed class NodeWeightsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Node Weight*", typeof(Single))]
                        public Single NodeWeight;
                        public int Size
                        {
                            get
                            {
                                return 0;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(80, 4)]
                public sealed class ErrorReportLinesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("Points*", typeof(PointsElement[]))]
                    [Abide.Guerilla.Tags.ArrayAttribute(2, typeof(PointsElement))]
                    public PointsElement[] Points;
                    [Abide.Guerilla.Tags.FieldAttribute("Node Weights*", typeof(NodeWeightsElement[]))]
                    [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeWeightsElement))]
                    public NodeWeightsElement[] NodeWeights;
                    [Abide.Guerilla.Tags.FieldAttribute("Color*", typeof(ColorArgbF))]
                    public ColorArgbF Color;
                    public int Size
                    {
                        get
                        {
                            return 80;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    public sealed class PointsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Position*", typeof(Vector3))]
                        public Vector3 Position;
                        [Abide.Guerilla.Tags.FieldAttribute("Node Indices*", typeof(NodeIndicesElement[]))]
                        [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeIndicesElement))]
                        public NodeIndicesElement[] NodeIndices;
                        [Abide.Guerilla.Tags.FieldAttribute("Node Weights*", typeof(NodeWeightsElement[]))]
                        [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeWeightsElement))]
                        public NodeWeightsElement[] NodeWeights;
                        public int Size
                        {
                            get
                            {
                                return 0;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                        public sealed class NodeIndicesElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("Node Index*", typeof(Byte))]
                            public Byte NodeIndex;
                            public int Size
                            {
                                get
                                {
                                    return 0;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                        }
                        public sealed class NodeWeightsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("Node Weight*", typeof(Single))]
                            public Single NodeWeight;
                            public int Size
                            {
                                get
                                {
                                    return 0;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                        }
                    }
                    public sealed class NodeWeightsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Node Weight*", typeof(Single))]
                        public Single NodeWeight;
                        public int Size
                        {
                            get
                            {
                                return 0;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(112, 4)]
                public sealed class ErrorReportTrianglesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("Points*", typeof(PointsElement[]))]
                    [Abide.Guerilla.Tags.ArrayAttribute(3, typeof(PointsElement))]
                    public PointsElement[] Points;
                    [Abide.Guerilla.Tags.FieldAttribute("Node Weights*", typeof(NodeWeightsElement[]))]
                    [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeWeightsElement))]
                    public NodeWeightsElement[] NodeWeights;
                    [Abide.Guerilla.Tags.FieldAttribute("Color*", typeof(ColorArgbF))]
                    public ColorArgbF Color;
                    public int Size
                    {
                        get
                        {
                            return 112;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    public sealed class PointsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Position*", typeof(Vector3))]
                        public Vector3 Position;
                        [Abide.Guerilla.Tags.FieldAttribute("Node Indices*", typeof(NodeIndicesElement[]))]
                        [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeIndicesElement))]
                        public NodeIndicesElement[] NodeIndices;
                        [Abide.Guerilla.Tags.FieldAttribute("Node Weights*", typeof(NodeWeightsElement[]))]
                        [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeWeightsElement))]
                        public NodeWeightsElement[] NodeWeights;
                        public int Size
                        {
                            get
                            {
                                return 0;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                        public sealed class NodeIndicesElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("Node Index*", typeof(Byte))]
                            public Byte NodeIndex;
                            public int Size
                            {
                                get
                                {
                                    return 0;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                        }
                        public sealed class NodeWeightsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("Node Weight*", typeof(Single))]
                            public Single NodeWeight;
                            public int Size
                            {
                                get
                                {
                                    return 0;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                        }
                    }
                    public sealed class NodeWeightsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Node Weight*", typeof(Single))]
                        public Single NodeWeight;
                        public int Size
                        {
                            get
                            {
                                return 0;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(144, 4)]
                public sealed class ErrorReportQuadsBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("Points*", typeof(PointsElement[]))]
                    [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(PointsElement))]
                    public PointsElement[] Points;
                    [Abide.Guerilla.Tags.FieldAttribute("Node Weights*", typeof(NodeWeightsElement[]))]
                    [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeWeightsElement))]
                    public NodeWeightsElement[] NodeWeights;
                    [Abide.Guerilla.Tags.FieldAttribute("Color*", typeof(ColorArgbF))]
                    public ColorArgbF Color;
                    public int Size
                    {
                        get
                        {
                            return 144;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    public sealed class PointsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Position*", typeof(Vector3))]
                        public Vector3 Position;
                        [Abide.Guerilla.Tags.FieldAttribute("Node Indices*", typeof(NodeIndicesElement[]))]
                        [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeIndicesElement))]
                        public NodeIndicesElement[] NodeIndices;
                        [Abide.Guerilla.Tags.FieldAttribute("Node Weights*", typeof(NodeWeightsElement[]))]
                        [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeWeightsElement))]
                        public NodeWeightsElement[] NodeWeights;
                        public int Size
                        {
                            get
                            {
                                return 0;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                        public sealed class NodeIndicesElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("Node Index*", typeof(Byte))]
                            public Byte NodeIndex;
                            public int Size
                            {
                                get
                                {
                                    return 0;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                        }
                        public sealed class NodeWeightsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("Node Weight*", typeof(Single))]
                            public Single NodeWeight;
                            public int Size
                            {
                                get
                                {
                                    return 0;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                        }
                    }
                    public sealed class NodeWeightsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Node Weight*", typeof(Single))]
                        public Single NodeWeight;
                        public int Size
                        {
                            get
                            {
                                return 0;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(68, 4)]
                public sealed class ErrorReportCommentsBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("Position*", typeof(Vector3))]
                    public Vector3 Position;
                    [Abide.Guerilla.Tags.FieldAttribute("Node Indices*", typeof(NodeIndicesElement[]))]
                    [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeIndicesElement))]
                    public NodeIndicesElement[] NodeIndices;
                    [Abide.Guerilla.Tags.FieldAttribute("Node Weights*", typeof(NodeWeightsElement[]))]
                    [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeWeightsElement))]
                    public NodeWeightsElement[] NodeWeights;
                    [Abide.Guerilla.Tags.FieldAttribute("Color*", typeof(ColorArgbF))]
                    public ColorArgbF Color;
                    public int Size
                    {
                        get
                        {
                            return 68;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    public sealed class NodeIndicesElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Node Index*", typeof(Byte))]
                        public Byte NodeIndex;
                        public int Size
                        {
                            get
                            {
                                return 0;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                    public sealed class NodeWeightsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Node Weight*", typeof(Single))]
                        public Single NodeWeight;
                        public int Size
                        {
                            get
                            {
                                return 0;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                }
                public enum TypeOptions
                {
                    Silent = 0,
                    Comment = 1,
                    Warning = 2,
                    Error = 3,
                }
                public enum FlagsOptions
                {
                    Rendered = 1,
                    TangentSpace = 2,
                    Noncritical = 4,
                    LightmapLight = 8,
                    ReportKeyIsValid = 16,
                }
            }
            public enum ReportTypeOptions
            {
                Silent = 0,
                Comment = 1,
                Warning = 2,
                Error = 3,
            }
            public enum FlagsOptions
            {
                Rendered = 1,
                TangentSpace = 2,
                Noncritical = 4,
                LightmapLight = 8,
                ReportKeyIsValid = 16,
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(96, 4)]
        public sealed class StructureBspPrecomputedLightingBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("Index*", typeof(Int32))]
            public Int32 Index;
            [Abide.Guerilla.Tags.FieldAttribute("Light Type*", typeof(Int16))]
            [Abide.Guerilla.Tags.OptionsAttribute(typeof(LightTypeOptions), false)]
            public Int16 LightType;
            [Abide.Guerilla.Tags.FieldAttribute("Attachment Index*", typeof(Byte))]
            public Byte AttachmentIndex;
            [Abide.Guerilla.Tags.FieldAttribute("Object Type*", typeof(Byte))]
            public Byte ObjectType;
            [Abide.Guerilla.Tags.FieldAttribute("Visibility*", typeof(VisibilityStructBlock))]
            public VisibilityStructBlock Visibility;
            public int Size
            {
                get
                {
                    return 96;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(88, 4)]
            public sealed class VisibilityStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("Projection Count*", typeof(Int16))]
                public Int16 ProjectionCount;
                [Abide.Guerilla.Tags.FieldAttribute("Cluster Count*", typeof(Int16))]
                public Int16 ClusterCount;
                [Abide.Guerilla.Tags.FieldAttribute("Volume Count*", typeof(Int16))]
                public Int16 VolumeCount;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(2)]
                public Byte[] EmptyString;
                public int Size
                {
                    get
                    {
                        return 88;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
            public enum LightTypeOptions
            {
                FreeStanding = 0,
                AttachedToEditorObject = 1,
                AttachedToStructureObject = 2,
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(260, 4)]
        public sealed class StructureBspInstancedGeometryDefinitionBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("Render Info", typeof(StructureInstancedGeometryRenderInfoStructBlock))]
            public StructureInstancedGeometryRenderInfoStructBlock RenderInfo;
            [Abide.Guerilla.Tags.FieldAttribute("Checksum*", typeof(Int32))]
            public Int32 Checksum;
            [Abide.Guerilla.Tags.FieldAttribute("Bounding Sphere Center", typeof(Vector3))]
            public Vector3 BoundingSphereCenter;
            [Abide.Guerilla.Tags.FieldAttribute("Bounding Sphere Radius", typeof(Single))]
            public Single BoundingSphereRadius;
            [Abide.Guerilla.Tags.FieldAttribute("Collision Info", typeof(GlobalCollisionBspStructBlock))]
            public GlobalCollisionBspStructBlock CollisionInfo;
            [Abide.Guerilla.Tags.FieldAttribute("bsp_physics*", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("collision_bsp_physics_block", 1024, typeof(CollisionBspPhysicsBlock))]
            public TagBlock BspPhysics;
            [Abide.Guerilla.Tags.FieldAttribute("Render Leaves*", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("structure_bsp_leaf_block", 65536, typeof(StructureBspLeafBlock))]
            public TagBlock RenderLeaves;
            [Abide.Guerilla.Tags.FieldAttribute("Surface References*", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("structure_bsp_surface_reference_block", 262144, typeof(StructureBspSurfaceReferenceBlock))]
            public TagBlock SurfaceReferences;
            public int Size
            {
                get
                {
                    return 260;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(128, 16)]
            public sealed class CollisionBspPhysicsBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(4)]
                public Byte[] EmptyString;
                [Abide.Guerilla.Tags.FieldAttribute("Size*", typeof(Int16))]
                public Int16 Size1;
                [Abide.Guerilla.Tags.FieldAttribute("Count*", typeof(Int16))]
                public Int16 Count;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(4)]
                public Byte[] EmptyString1;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(4)]
                public Byte[] EmptyString2;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(32)]
                public Byte[] EmptyString3;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(16)]
                public Byte[] EmptyString4;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(4)]
                public Byte[] EmptyString5;
                [Abide.Guerilla.Tags.FieldAttribute("Size*", typeof(Int16))]
                public Int16 Size2;
                [Abide.Guerilla.Tags.FieldAttribute("Count*", typeof(Int16))]
                public Int16 Count1;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(4)]
                public Byte[] EmptyString6;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(4)]
                public Byte[] EmptyString7;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(4)]
                public Byte[] EmptyString8;
                [Abide.Guerilla.Tags.FieldAttribute("Size*", typeof(Int16))]
                public Int16 Size3;
                [Abide.Guerilla.Tags.FieldAttribute("Count*", typeof(Int16))]
                public Int16 Count2;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(4)]
                public Byte[] EmptyString9;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(8)]
                public Byte[] EmptyString10;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(8)]
                public Byte[] EmptyString11;
                public int Size
                {
                    get
                    {
                        return 128;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(8, 4)]
            public sealed class StructureBspLeafBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("Cluster*", typeof(Int16))]
                public Int16 Cluster;
                [Abide.Guerilla.Tags.FieldAttribute("Surface Reference Count*", typeof(Int16))]
                public Int16 SurfaceReferenceCount;
                [Abide.Guerilla.Tags.FieldAttribute("First Surface Reference Index*", typeof(Int32))]
                public Int32 FirstSurfaceReferenceIndex;
                public int Size
                {
                    get
                    {
                        return 8;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(8, 4)]
            public sealed class StructureBspSurfaceReferenceBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("Strip Index*", typeof(Int16))]
                public Int16 StripIndex;
                [Abide.Guerilla.Tags.FieldAttribute("Lightmap Triangle Index*", typeof(Int16))]
                public Int16 LightmapTriangleIndex;
                [Abide.Guerilla.Tags.FieldAttribute("BSP Node Index*", typeof(Int32))]
                public Int32 BspNodeIndex;
                public int Size
                {
                    get
                    {
                        return 8;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(108, 4)]
            public sealed class StructureInstancedGeometryRenderInfoStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("Section Info*", typeof(GlobalGeometrySectionInfoStructBlock))]
                public GlobalGeometrySectionInfoStructBlock SectionInfo;
                [Abide.Guerilla.Tags.FieldAttribute("Geometry Block Info*", typeof(GlobalGeometryBlockInfoStructBlock))]
                public GlobalGeometryBlockInfoStructBlock GeometryBlockInfo;
                [Abide.Guerilla.Tags.FieldAttribute("Render Data*", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("structure_bsp_cluster_data_block_new", 1, typeof(StructureBspClusterDataBlockNew))]
                public TagBlock RenderData;
                [Abide.Guerilla.Tags.FieldAttribute("Index Reorder Table*", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("index", 65535, typeof(GlobalGeometrySectionStripIndexBlock))]
                public TagBlock IndexReorderTable;
                public int Size
                {
                    get
                    {
                        return 108;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(108, 4)]
                public sealed class StructureBspClusterDataBlockNew : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("Section*", typeof(GlobalGeometrySectionStructBlock))]
                    public GlobalGeometrySectionStructBlock Section;
                    public int Size
                    {
                        get
                        {
                            return 108;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(108, 4)]
                    public sealed class GlobalGeometrySectionStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Parts*", typeof(TagBlock))]
                        [Abide.Guerilla.Tags.BlockAttribute("part", 255, typeof(GlobalGeometryPartBlockNew))]
                        public TagBlock Parts;
                        [Abide.Guerilla.Tags.FieldAttribute("Subparts*", typeof(TagBlock))]
                        [Abide.Guerilla.Tags.BlockAttribute("subparts", 32768, typeof(GlobalSubpartsBlock))]
                        public TagBlock Subparts;
                        [Abide.Guerilla.Tags.FieldAttribute("Visibility Bounds*", typeof(TagBlock))]
                        [Abide.Guerilla.Tags.BlockAttribute("visibility bounds", 32768, typeof(GlobalVisibilityBoundsBlock))]
                        public TagBlock VisibilityBounds;
                        [Abide.Guerilla.Tags.FieldAttribute("Raw Vertices*", typeof(TagBlock))]
                        [Abide.Guerilla.Tags.BlockAttribute("vertex", 32767, typeof(GlobalGeometrySectionRawVertexBlock))]
                        public TagBlock RawVertices;
                        [Abide.Guerilla.Tags.FieldAttribute("Strip Indices*", typeof(TagBlock))]
                        [Abide.Guerilla.Tags.BlockAttribute("index", 65535, typeof(GlobalGeometrySectionStripIndexBlock))]
                        public TagBlock StripIndices;
                        [Abide.Guerilla.Tags.FieldAttribute("mopp Reorder Table*", typeof(TagBlock))]
                        [Abide.Guerilla.Tags.BlockAttribute("index", 65535, typeof(GlobalGeometrySectionStripIndexBlock))]
                        public TagBlock MoppReorderTable;
                        [Abide.Guerilla.Tags.FieldAttribute("Vertex Buffers*", typeof(TagBlock))]
                        [Abide.Guerilla.Tags.BlockAttribute("vertex buffer", 512, typeof(GlobalGeometrySectionVertexBufferBlock))]
                        public TagBlock VertexBuffers;
                        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                        [Abide.Guerilla.Tags.PaddingAttribute(4)]
                        public Byte[] EmptyString;
                        public int Size
                        {
                            get
                            {
                                return 108;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                        [Abide.Guerilla.Tags.FieldSetAttribute(72, 4)]
                        public sealed class GlobalGeometryPartBlockNew : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("Type*", typeof(Int16))]
                            [Abide.Guerilla.Tags.OptionsAttribute(typeof(TypeOptions), false)]
                            public Int16 Type;
                            [Abide.Guerilla.Tags.FieldAttribute("Flags*", typeof(Int16))]
                            [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
                            public Int16 Flags;
                            [Abide.Guerilla.Tags.FieldAttribute("Material*", typeof(Int16))]
                            public Int16 Material;
                            [Abide.Guerilla.Tags.FieldAttribute("Strip Start Index*", typeof(Int16))]
                            public Int16 StripStartIndex;
                            [Abide.Guerilla.Tags.FieldAttribute("Strip Length*", typeof(Int16))]
                            public Int16 StripLength;
                            [Abide.Guerilla.Tags.FieldAttribute("First Subpart Index*", typeof(Int16))]
                            public Int16 FirstSubpartIndex;
                            [Abide.Guerilla.Tags.FieldAttribute("Subpart Count*", typeof(Int16))]
                            public Int16 SubpartCount;
                            [Abide.Guerilla.Tags.FieldAttribute("Max Nodes/Vertex*", typeof(Byte))]
                            public Byte MaxNodesvertex;
                            [Abide.Guerilla.Tags.FieldAttribute("Contributing Compound Node Count*", typeof(Byte))]
                            public Byte ContributingCompoundNodeCount;
                            [Abide.Guerilla.Tags.FieldAttribute("Position*", typeof(Vector3))]
                            public Vector3 Position;
                            [Abide.Guerilla.Tags.FieldAttribute("Node Indices*", typeof(NodeIndicesElement[]))]
                            [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeIndicesElement))]
                            public NodeIndicesElement[] NodeIndices;
                            [Abide.Guerilla.Tags.FieldAttribute("Node Weights*", typeof(NodeWeightsElement[]))]
                            [Abide.Guerilla.Tags.ArrayAttribute(3, typeof(NodeWeightsElement))]
                            public NodeWeightsElement[] NodeWeights;
                            [Abide.Guerilla.Tags.FieldAttribute("lod mipmap magic number*", typeof(Single))]
                            public Single LodMipmapMagicNumber;
                            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                            [Abide.Guerilla.Tags.PaddingAttribute(24)]
                            public Byte[] EmptyString;
                            public int Size
                            {
                                get
                                {
                                    return 72;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                            public sealed class NodeIndicesElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                            {
                                [Abide.Guerilla.Tags.FieldAttribute("Node Index*", typeof(Byte))]
                                public Byte NodeIndex;
                                public int Size
                                {
                                    get
                                    {
                                        return 0;
                                    }
                                }
                                public void Initialize()
                                {
                                }
                                public void Read(System.IO.BinaryReader reader)
                                {
                                }
                                public void Write(System.IO.BinaryWriter writer)
                                {
                                }
                            }
                            public sealed class NodeWeightsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                            {
                                [Abide.Guerilla.Tags.FieldAttribute("Node Weight*", typeof(Single))]
                                public Single NodeWeight;
                                public int Size
                                {
                                    get
                                    {
                                        return 0;
                                    }
                                }
                                public void Initialize()
                                {
                                }
                                public void Read(System.IO.BinaryReader reader)
                                {
                                }
                                public void Write(System.IO.BinaryWriter writer)
                                {
                                }
                            }
                            public enum TypeOptions
                            {
                                NotDrawn = 0,
                                OpaqueShadowOnly = 1,
                                OpaqueShadowCasting = 2,
                                OpaqueNonshadowing = 3,
                                Transparent = 4,
                                LightmapOnly = 5,
                            }
                            public enum FlagsOptions
                            {
                                Decalable = 1,
                                NewPartTypes = 2,
                                DislikesPhotons = 4,
                                OverrideTriangleList = 8,
                                IgnoredByLightmapper = 16,
                            }
                        }
                        [Abide.Guerilla.Tags.FieldSetAttribute(8, 4)]
                        public sealed class GlobalSubpartsBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("indices_start_index*", typeof(Int16))]
                            public Int16 IndicesStartIndex;
                            [Abide.Guerilla.Tags.FieldAttribute("indices_length*", typeof(Int16))]
                            public Int16 IndicesLength;
                            [Abide.Guerilla.Tags.FieldAttribute("visibility_bounds_index*", typeof(Int16))]
                            public Int16 VisibilityBoundsIndex;
                            [Abide.Guerilla.Tags.FieldAttribute("Part Index*", typeof(Int16))]
                            public Int16 PartIndex;
                            public int Size
                            {
                                get
                                {
                                    return 8;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                        }
                        [Abide.Guerilla.Tags.FieldSetAttribute(20, 4)]
                        public sealed class GlobalVisibilityBoundsBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("Position x*", typeof(Single))]
                            public Single PositionX;
                            [Abide.Guerilla.Tags.FieldAttribute("Position y*", typeof(Single))]
                            public Single PositionY;
                            [Abide.Guerilla.Tags.FieldAttribute("Position z*", typeof(Single))]
                            public Single PositionZ;
                            [Abide.Guerilla.Tags.FieldAttribute("Radius*", typeof(Single))]
                            public Single Radius;
                            [Abide.Guerilla.Tags.FieldAttribute("Node 0*", typeof(Byte))]
                            public Byte Node0;
                            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                            [Abide.Guerilla.Tags.PaddingAttribute(3)]
                            public Byte[] EmptyString;
                            public int Size
                            {
                                get
                                {
                                    return 20;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                        }
                        [Abide.Guerilla.Tags.FieldSetAttribute(196, 4)]
                        public sealed class GlobalGeometrySectionRawVertexBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("Position*", typeof(Vector3))]
                            public Vector3 Position;
                            [Abide.Guerilla.Tags.FieldAttribute("Node Indices (OLD)*", typeof(NodeIndicesOldElement[]))]
                            [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeIndicesOldElement))]
                            public NodeIndicesOldElement[] NodeIndicesOld;
                            [Abide.Guerilla.Tags.FieldAttribute("Node Weights*", typeof(NodeWeightsElement[]))]
                            [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeWeightsElement))]
                            public NodeWeightsElement[] NodeWeights;
                            [Abide.Guerilla.Tags.FieldAttribute("Node Indices (NEW)*", typeof(NodeIndicesNewElement[]))]
                            [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeIndicesNewElement))]
                            public NodeIndicesNewElement[] NodeIndicesNew;
                            [Abide.Guerilla.Tags.FieldAttribute("Use New Node Indices*", typeof(Int32))]
                            public Int32 UseNewNodeIndices;
                            [Abide.Guerilla.Tags.FieldAttribute("Adjusted Compound Node Index*", typeof(Int32))]
                            public Int32 AdjustedCompoundNodeIndex;
                            [Abide.Guerilla.Tags.FieldAttribute("texcoord*", typeof(Vector2))]
                            public Vector2 Texcoord;
                            [Abide.Guerilla.Tags.FieldAttribute("Normal*", typeof(Vector3))]
                            public Vector3 Normal;
                            [Abide.Guerilla.Tags.FieldAttribute("Binormal*", typeof(Vector3))]
                            public Vector3 Binormal;
                            [Abide.Guerilla.Tags.FieldAttribute("Tangent*", typeof(Vector3))]
                            public Vector3 Tangent;
                            [Abide.Guerilla.Tags.FieldAttribute("Anisotropic Binormal*", typeof(Vector3))]
                            public Vector3 AnisotropicBinormal;
                            [Abide.Guerilla.Tags.FieldAttribute("Secondary texcoord*", typeof(Vector2))]
                            public Vector2 SecondaryTexcoord;
                            [Abide.Guerilla.Tags.FieldAttribute("Primary Lightmap Color", typeof(ColorRgbF))]
                            public ColorRgbF PrimaryLightmapColor;
                            [Abide.Guerilla.Tags.FieldAttribute("Primary Lightmap texcoord", typeof(Vector2))]
                            public Vector2 PrimaryLightmapTexcoord;
                            [Abide.Guerilla.Tags.FieldAttribute("Primary Lightmap Incident Direction", typeof(Vector3))]
                            public Vector3 PrimaryLightmapIncidentDirection;
                            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                            [Abide.Guerilla.Tags.PaddingAttribute(12)]
                            public Byte[] EmptyString;
                            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                            [Abide.Guerilla.Tags.PaddingAttribute(8)]
                            public Byte[] EmptyString1;
                            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                            [Abide.Guerilla.Tags.PaddingAttribute(12)]
                            public Byte[] EmptyString2;
                            public int Size
                            {
                                get
                                {
                                    return 196;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                            public sealed class NodeIndicesOldElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                            {
                                [Abide.Guerilla.Tags.FieldAttribute("Node Index (OLD)*", typeof(Int32))]
                                public Int32 NodeIndexOld;
                                public int Size
                                {
                                    get
                                    {
                                        return 0;
                                    }
                                }
                                public void Initialize()
                                {
                                }
                                public void Read(System.IO.BinaryReader reader)
                                {
                                }
                                public void Write(System.IO.BinaryWriter writer)
                                {
                                }
                            }
                            public sealed class NodeWeightsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                            {
                                [Abide.Guerilla.Tags.FieldAttribute("node_weight*", typeof(Single))]
                                public Single NodeWeight;
                                public int Size
                                {
                                    get
                                    {
                                        return 0;
                                    }
                                }
                                public void Initialize()
                                {
                                }
                                public void Read(System.IO.BinaryReader reader)
                                {
                                }
                                public void Write(System.IO.BinaryWriter writer)
                                {
                                }
                            }
                            public sealed class NodeIndicesNewElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                            {
                                [Abide.Guerilla.Tags.FieldAttribute("Node Index (NEW)*", typeof(Int32))]
                                public Int32 NodeIndexNew;
                                public int Size
                                {
                                    get
                                    {
                                        return 0;
                                    }
                                }
                                public void Initialize()
                                {
                                }
                                public void Read(System.IO.BinaryReader reader)
                                {
                                }
                                public void Write(System.IO.BinaryWriter writer)
                                {
                                }
                            }
                        }
                        [Abide.Guerilla.Tags.FieldSetAttribute(2, 4)]
                        public sealed class GlobalGeometrySectionStripIndexBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("Index*", typeof(Int16))]
                            public Int16 Index;
                            public int Size
                            {
                                get
                                {
                                    return 2;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                        }
                        [Abide.Guerilla.Tags.FieldSetAttribute(32, 4)]
                        public sealed class GlobalGeometrySectionVertexBufferBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            public int Size
                            {
                                get
                                {
                                    return 32;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                        }
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(2, 4)]
                public sealed class GlobalGeometrySectionStripIndexBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("Index*", typeof(Int16))]
                    public Int16 Index;
                    public int Size
                    {
                        get
                        {
                            return 2;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(44, 4)]
                public sealed class GlobalGeometrySectionInfoStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("Total Vertex Count*", typeof(Int16))]
                    public Int16 TotalVertexCount;
                    [Abide.Guerilla.Tags.FieldAttribute("Total Triangle Count*", typeof(Int16))]
                    public Int16 TotalTriangleCount;
                    [Abide.Guerilla.Tags.FieldAttribute("Total Part Count*", typeof(Int16))]
                    public Int16 TotalPartCount;
                    [Abide.Guerilla.Tags.FieldAttribute("Shadow-Casting Triangle Count*", typeof(Int16))]
                    public Int16 ShadowCastingTriangleCount;
                    [Abide.Guerilla.Tags.FieldAttribute("Shadow-Casting Part Count*", typeof(Int16))]
                    public Int16 ShadowCastingPartCount;
                    [Abide.Guerilla.Tags.FieldAttribute("Opaque Point Count*", typeof(Int16))]
                    public Int16 OpaquePointCount;
                    [Abide.Guerilla.Tags.FieldAttribute("Opaque Vertex Count*", typeof(Int16))]
                    public Int16 OpaqueVertexCount;
                    [Abide.Guerilla.Tags.FieldAttribute("Opaque Part Count*", typeof(Int16))]
                    public Int16 OpaquePartCount;
                    [Abide.Guerilla.Tags.FieldAttribute("Opaque Max Nodes/Vertex*", typeof(Byte))]
                    public Byte OpaqueMaxNodesvertex;
                    [Abide.Guerilla.Tags.FieldAttribute("Transparent Max Nodes/Vertex*", typeof(Byte))]
                    public Byte TransparentMaxNodesvertex;
                    [Abide.Guerilla.Tags.FieldAttribute("Shadow-Casting Rigid Triangle Count*", typeof(Int16))]
                    public Int16 ShadowCastingRigidTriangleCount;
                    [Abide.Guerilla.Tags.FieldAttribute("Geometry Classification*", typeof(Int16))]
                    [Abide.Guerilla.Tags.OptionsAttribute(typeof(GeometryClassificationOptions), false)]
                    public Int16 GeometryClassification;
                    [Abide.Guerilla.Tags.FieldAttribute("Geometry Compression Flags*", typeof(Int16))]
                    [Abide.Guerilla.Tags.OptionsAttribute(typeof(GeometryCompressionFlagsOptions), true)]
                    public Int16 GeometryCompressionFlags;
                    [Abide.Guerilla.Tags.FieldAttribute("EMPTY STRING", typeof(TagBlock))]
                    [Abide.Guerilla.Tags.BlockAttribute("compression info", 1, typeof(GlobalGeometryCompressionInfoBlock))]
                    public TagBlock EmptyString;
                    [Abide.Guerilla.Tags.FieldAttribute("Hardware Node Count*", typeof(Byte))]
                    public Byte HardwareNodeCount;
                    [Abide.Guerilla.Tags.FieldAttribute("Node Map Size*", typeof(Byte))]
                    public Byte NodeMapSize;
                    [Abide.Guerilla.Tags.FieldAttribute("Software Plane Count*", typeof(Int16))]
                    public Int16 SoftwarePlaneCount;
                    [Abide.Guerilla.Tags.FieldAttribute("total subpart_cont*", typeof(Int16))]
                    public Int16 TotalSubpartCont;
                    [Abide.Guerilla.Tags.FieldAttribute("Section Lighting Flags*", typeof(Int16))]
                    [Abide.Guerilla.Tags.OptionsAttribute(typeof(SectionLightingFlagsOptions), true)]
                    public Int16 SectionLightingFlags;
                    public int Size
                    {
                        get
                        {
                            return 44;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(56, 4)]
                    public sealed class GlobalGeometryCompressionInfoBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        public int Size
                        {
                            get
                            {
                                return 56;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                    public enum GeometryClassificationOptions
                    {
                        Worldspace = 0,
                        Rigid = 1,
                        RigidBoned = 2,
                        Skinned = 3,
                        UnsupportedReimport = 4,
                    }
                    public enum GeometryCompressionFlagsOptions
                    {
                        CompressedPosition = 1,
                        CompressedTexcoord = 2,
                        CompressedSecondaryTexcoord = 4,
                    }
                    public enum SectionLightingFlagsOptions
                    {
                        HasLmTexcoords = 1,
                        HasLmIncRad = 2,
                        HasLmColors = 4,
                        HasLmPrt = 8,
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(40, 4)]
                public sealed class GlobalGeometryBlockInfoStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("Block Offset*", typeof(Int32))]
                    public Int32 BlockOffset;
                    [Abide.Guerilla.Tags.FieldAttribute("Block Size*", typeof(Int32))]
                    public Int32 BlockSize;
                    [Abide.Guerilla.Tags.FieldAttribute("Section Data Size*", typeof(Int32))]
                    public Int32 SectionDataSize;
                    [Abide.Guerilla.Tags.FieldAttribute("Resource Data Size*", typeof(Int32))]
                    public Int32 ResourceDataSize;
                    [Abide.Guerilla.Tags.FieldAttribute("Resources*", typeof(TagBlock))]
                    [Abide.Guerilla.Tags.BlockAttribute("block resources", 1024, typeof(GlobalGeometryBlockResourceBlock))]
                    public TagBlock Resources;
                    [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                    [Abide.Guerilla.Tags.PaddingAttribute(4)]
                    public Byte[] EmptyString;
                    [Abide.Guerilla.Tags.FieldAttribute("Owner Tag Section Offset*", typeof(Int16))]
                    public Int16 OwnerTagSectionOffset;
                    [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                    [Abide.Guerilla.Tags.PaddingAttribute(2)]
                    public Byte[] EmptyString1;
                    [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                    [Abide.Guerilla.Tags.PaddingAttribute(4)]
                    public Byte[] EmptyString2;
                    public int Size
                    {
                        get
                        {
                            return 40;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(16, 4)]
                    public sealed class GlobalGeometryBlockResourceBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Type*", typeof(Byte))]
                        [Abide.Guerilla.Tags.OptionsAttribute(typeof(TypeOptions), false)]
                        public Byte Type;
                        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                        [Abide.Guerilla.Tags.PaddingAttribute(3)]
                        public Byte[] EmptyString;
                        [Abide.Guerilla.Tags.FieldAttribute("Primary Locator*", typeof(Int16))]
                        public Int16 PrimaryLocator;
                        [Abide.Guerilla.Tags.FieldAttribute("Secondary Locator*", typeof(Int16))]
                        public Int16 SecondaryLocator;
                        [Abide.Guerilla.Tags.FieldAttribute("Resource Data Size*", typeof(Int32))]
                        public Int32 ResourceDataSize;
                        [Abide.Guerilla.Tags.FieldAttribute("Resource Data Offset*", typeof(Int32))]
                        public Int32 ResourceDataOffset;
                        public int Size
                        {
                            get
                            {
                                return 16;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                        public enum TypeOptions
                        {
                            TagBlock = 0,
                            TagData = 1,
                            VertexBuffer = 2,
                        }
                    }
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(96, 4)]
            public sealed class GlobalCollisionBspStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("BSP 3D Nodes*", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("bsp3d_nodes_block", 131072, typeof(Bsp3dNodesBlock))]
                public TagBlock Bsp3dNodes;
                [Abide.Guerilla.Tags.FieldAttribute("Planes*", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("planes_block", 65536, typeof(PlanesBlock))]
                public TagBlock Planes;
                [Abide.Guerilla.Tags.FieldAttribute("Leaves*", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("leaves_block", 65536, typeof(LeavesBlock))]
                public TagBlock Leaves;
                [Abide.Guerilla.Tags.FieldAttribute("BSP 2D References*", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("bsp2d_references_block", 131072, typeof(Bsp2dReferencesBlock))]
                public TagBlock Bsp2dReferences;
                [Abide.Guerilla.Tags.FieldAttribute("BSP 2D Nodes*", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("bsp2d_nodes_block", 131072, typeof(Bsp2dNodesBlock))]
                public TagBlock Bsp2dNodes;
                [Abide.Guerilla.Tags.FieldAttribute("Surfaces*", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("surfaces_block", 131072, typeof(SurfacesBlock))]
                public TagBlock Surfaces;
                [Abide.Guerilla.Tags.FieldAttribute("Edges*", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("edges_block", 262144, typeof(EdgesBlock))]
                public TagBlock Edges;
                [Abide.Guerilla.Tags.FieldAttribute("Vertices*", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("vertices_block", 131072, typeof(VerticesBlock))]
                public TagBlock Vertices;
                public int Size
                {
                    get
                    {
                        return 96;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(8, 8)]
                public sealed class Bsp3dNodesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                    [Abide.Guerilla.Tags.PaddingAttribute(8)]
                    public Byte[] EmptyString;
                    public int Size
                    {
                        get
                        {
                            return 8;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(16, 16)]
                public sealed class PlanesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("Plane*", typeof(Vector4))]
                    public Vector4 Plane;
                    public int Size
                    {
                        get
                        {
                            return 16;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(4, 4)]
                public sealed class LeavesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("Flags*", typeof(Byte))]
                    [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
                    public Byte Flags;
                    [Abide.Guerilla.Tags.FieldAttribute("BSP 2D Reference Count*", typeof(Byte))]
                    public Byte Bsp2dReferenceCount;
                    [Abide.Guerilla.Tags.FieldAttribute("First BSP 2D Reference*", typeof(Int16))]
                    public Int16 FirstBsp2dReference;
                    public int Size
                    {
                        get
                        {
                            return 4;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    public enum FlagsOptions
                    {
                        ContainsDoubleSidedSurfaces = 1,
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(4, 4)]
                public sealed class Bsp2dReferencesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("Plane*", typeof(Int16))]
                    public Int16 Plane;
                    [Abide.Guerilla.Tags.FieldAttribute("BSP 2D Node*", typeof(Int16))]
                    public Int16 Bsp2dNode;
                    public int Size
                    {
                        get
                        {
                            return 4;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(16, 16)]
                public sealed class Bsp2dNodesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("Plane*", typeof(Vector3))]
                    public Vector3 Plane;
                    [Abide.Guerilla.Tags.FieldAttribute("Left Child*", typeof(Int16))]
                    public Int16 LeftChild;
                    [Abide.Guerilla.Tags.FieldAttribute("Right Child*", typeof(Int16))]
                    public Int16 RightChild;
                    public int Size
                    {
                        get
                        {
                            return 16;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(8, 8)]
                public sealed class SurfacesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("Plane*", typeof(Int16))]
                    public Int16 Plane;
                    [Abide.Guerilla.Tags.FieldAttribute("First Edge*", typeof(Int16))]
                    public Int16 FirstEdge;
                    [Abide.Guerilla.Tags.FieldAttribute("Flags*", typeof(Byte))]
                    [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
                    public Byte Flags;
                    [Abide.Guerilla.Tags.FieldAttribute("Breakable Surface*", typeof(Byte))]
                    public Byte BreakableSurface;
                    [Abide.Guerilla.Tags.FieldAttribute("Material*", typeof(Int16))]
                    public Int16 Material;
                    public int Size
                    {
                        get
                        {
                            return 8;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    public enum FlagsOptions
                    {
                        TwoSided = 1,
                        Invisible = 2,
                        Climbable = 4,
                        Breakable = 8,
                        Invalid = 16,
                        Conveyor = 32,
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(12, 4)]
                public sealed class EdgesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("Start Vertex*", typeof(Int16))]
                    public Int16 StartVertex;
                    [Abide.Guerilla.Tags.FieldAttribute("End Vertex*", typeof(Int16))]
                    public Int16 EndVertex;
                    [Abide.Guerilla.Tags.FieldAttribute("Forward Edge*", typeof(Int16))]
                    public Int16 ForwardEdge;
                    [Abide.Guerilla.Tags.FieldAttribute("Reverse Edge*", typeof(Int16))]
                    public Int16 ReverseEdge;
                    [Abide.Guerilla.Tags.FieldAttribute("Left Surface*", typeof(Int16))]
                    public Int16 LeftSurface;
                    [Abide.Guerilla.Tags.FieldAttribute("Right Surface*", typeof(Int16))]
                    public Int16 RightSurface;
                    public int Size
                    {
                        get
                        {
                            return 12;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(16, 16)]
                public sealed class VerticesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("Point*", typeof(Vector3))]
                    public Vector3 Point;
                    [Abide.Guerilla.Tags.FieldAttribute("First Edge*", typeof(Int16))]
                    public Int16 FirstEdge;
                    [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                    [Abide.Guerilla.Tags.PaddingAttribute(2)]
                    public Byte[] EmptyString;
                    public int Size
                    {
                        get
                        {
                            return 16;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                }
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(88, 4)]
        public sealed class StructureBspInstancedGeometryInstancesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("Scale", typeof(Single))]
            public Single Scale;
            [Abide.Guerilla.Tags.FieldAttribute("Forward", typeof(Vector3))]
            public Vector3 Forward;
            [Abide.Guerilla.Tags.FieldAttribute("Left", typeof(Vector3))]
            public Vector3 Left;
            [Abide.Guerilla.Tags.FieldAttribute("Up", typeof(Vector3))]
            public Vector3 Up;
            [Abide.Guerilla.Tags.FieldAttribute("Position", typeof(Vector3))]
            public Vector3 Position;
            [Abide.Guerilla.Tags.FieldAttribute("Instance Definition*", typeof(Int16))]
            public Int16 InstanceDefinition;
            [Abide.Guerilla.Tags.FieldAttribute("Flags", typeof(Int16))]
            [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
            public Int16 Flags;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(12)]
            public Byte[] EmptyString1;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString2;
            [Abide.Guerilla.Tags.FieldAttribute("Checksum*", typeof(Int32))]
            public Int32 Checksum;
            [Abide.Guerilla.Tags.FieldAttribute("Name*^", typeof(StringId))]
            public StringId Name;
            [Abide.Guerilla.Tags.FieldAttribute("Pathfinding Policy*", typeof(Int16))]
            [Abide.Guerilla.Tags.OptionsAttribute(typeof(PathfindingPolicyOptions), false)]
            public Int16 PathfindingPolicy;
            [Abide.Guerilla.Tags.FieldAttribute("Lightmapping Policy*", typeof(Int16))]
            [Abide.Guerilla.Tags.OptionsAttribute(typeof(LightmappingPolicyOptions), false)]
            public Int16 LightmappingPolicy;
            public int Size
            {
                get
                {
                    return 88;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            public enum FlagsOptions
            {
                NotInLightprobes = 1,
            }
            public enum PathfindingPolicyOptions
            {
                Cutout = 0,
                Static = 1,
                None = 2,
            }
            public enum LightmappingPolicyOptions
            {
                PerPixel = 0,
                PerVertex = 1,
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(28, 4)]
        public sealed class StructureBspSoundClusterBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(2)]
            public Byte[] EmptyString;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(2)]
            public Byte[] EmptyString1;
            [Abide.Guerilla.Tags.FieldAttribute("enclosing portal designators", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("structure_sound_cluster_portal_designators", 512, typeof(StructureSoundClusterPortalDesignators))]
            public TagBlock EnclosingPortalDesignators;
            [Abide.Guerilla.Tags.FieldAttribute("interior cluster indices", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("structure_sound_cluster_interior_cluster_indices", 512, typeof(StructureSoundClusterInteriorClusterIndices))]
            public TagBlock InteriorClusterIndices;
            public int Size
            {
                get
                {
                    return 28;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(2, 4)]
            public sealed class StructureSoundClusterPortalDesignators : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("portal designator*", typeof(Int16))]
                public Int16 PortalDesignator;
                public int Size
                {
                    get
                    {
                        return 2;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(2, 4)]
            public sealed class StructureSoundClusterInteriorClusterIndices : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("interior cluster index*", typeof(Int16))]
                public Int16 InteriorClusterIndex;
                public int Size
                {
                    get
                    {
                        return 2;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(20, 4)]
        public sealed class TransparentPlanesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("Section Index", typeof(Int16))]
            public Int16 SectionIndex;
            [Abide.Guerilla.Tags.FieldAttribute("Part Index", typeof(Int16))]
            public Int16 PartIndex;
            [Abide.Guerilla.Tags.FieldAttribute("plane", typeof(Vector4))]
            public Vector4 Plane;
            public int Size
            {
                get
                {
                    return 20;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(100, 4)]
        public sealed class StructureBspDebugInfoBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(64)]
            public Byte[] EmptyString;
            [Abide.Guerilla.Tags.FieldAttribute("Clusters*", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("structure_bsp_cluster_debug_info_block", 512, typeof(StructureBspClusterDebugInfoBlock))]
            public TagBlock Clusters;
            [Abide.Guerilla.Tags.FieldAttribute("Fog Planes*", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("structure_bsp_fog_plane_debug_info_block", 127, typeof(StructureBspFogPlaneDebugInfoBlock))]
            public TagBlock FogPlanes;
            [Abide.Guerilla.Tags.FieldAttribute("Fog Zones*", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("structure_bsp_fog_zone_debug_info_block", 127, typeof(StructureBspFogZoneDebugInfoBlock))]
            public TagBlock FogZones;
            public int Size
            {
                get
                {
                    return 100;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(92, 4)]
            public sealed class StructureBspClusterDebugInfoBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("Errors*", typeof(Int16))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(ErrorsOptions), true)]
                public Int16 Errors;
                [Abide.Guerilla.Tags.FieldAttribute("Warnings*", typeof(Int16))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(WarningsOptions), true)]
                public Int16 Warnings;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(28)]
                public Byte[] EmptyString;
                [Abide.Guerilla.Tags.FieldAttribute("Lines*", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("structure_bsp_debug_info_render_line_block", 32767, typeof(StructureBspDebugInfoRenderLineBlock))]
                public TagBlock Lines;
                [Abide.Guerilla.Tags.FieldAttribute("Fog Plane Indices*", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("structure_bsp_debug_info_indices_block", 32767, typeof(StructureBspDebugInfoIndicesBlock))]
                public TagBlock FogPlaneIndices;
                [Abide.Guerilla.Tags.FieldAttribute("Visible Fog Plane Indices*", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("structure_bsp_debug_info_indices_block", 32767, typeof(StructureBspDebugInfoIndicesBlock))]
                public TagBlock VisibleFogPlaneIndices;
                [Abide.Guerilla.Tags.FieldAttribute("Vis. Fog Omission Cluster Indices*", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("structure_bsp_debug_info_indices_block", 32767, typeof(StructureBspDebugInfoIndicesBlock))]
                public TagBlock VisFogOmissionClusterIndices;
                [Abide.Guerilla.Tags.FieldAttribute("Containing Fog Zone Indices*", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("structure_bsp_debug_info_indices_block", 32767, typeof(StructureBspDebugInfoIndicesBlock))]
                public TagBlock ContainingFogZoneIndices;
                public int Size
                {
                    get
                    {
                        return 92;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(32, 4)]
                public sealed class StructureBspDebugInfoRenderLineBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("Type*", typeof(Int16))]
                    [Abide.Guerilla.Tags.OptionsAttribute(typeof(TypeOptions), false)]
                    public Int16 Type;
                    [Abide.Guerilla.Tags.FieldAttribute("Code*", typeof(Int16))]
                    public Int16 Code;
                    [Abide.Guerilla.Tags.FieldAttribute("Pad Thai*", typeof(Int16))]
                    public Int16 PadThai;
                    [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                    [Abide.Guerilla.Tags.PaddingAttribute(2)]
                    public Byte[] EmptyString;
                    [Abide.Guerilla.Tags.FieldAttribute("Point 0*", typeof(Vector3))]
                    public Vector3 Point0;
                    [Abide.Guerilla.Tags.FieldAttribute("Point 1*", typeof(Vector3))]
                    public Vector3 Point1;
                    public int Size
                    {
                        get
                        {
                            return 32;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    public enum TypeOptions
                    {
                        FogPlaneBoundaryEdge = 0,
                        FogPlaneInternalEdge = 1,
                        FogZoneFloodfill = 2,
                        FogZoneClusterCentroid = 3,
                        FogZoneClusterGeometry = 4,
                        FogZonePortalCentroid = 5,
                        FogZonePortalGeometry = 6,
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(4, 4)]
                public sealed class StructureBspDebugInfoIndicesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("Index*", typeof(Int32))]
                    public Int32 Index;
                    public int Size
                    {
                        get
                        {
                            return 4;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                }
                public enum ErrorsOptions
                {
                    MultipleFogPlanes = 1,
                    FogZoneCollision = 2,
                    FogZoneImmersion = 4,
                }
                public enum WarningsOptions
                {
                    MultipleVisibleFogPlanes = 1,
                    VisibleFogClusterOmission = 2,
                    FogPlaneMissedRenderBsp = 4,
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(68, 4)]
            public sealed class StructureBspFogPlaneDebugInfoBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("Fog Zone Index*", typeof(Int32))]
                public Int32 FogZoneIndex;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(24)]
                public Byte[] EmptyString;
                [Abide.Guerilla.Tags.FieldAttribute("Connected Plane Designator*", typeof(Int32))]
                public Int32 ConnectedPlaneDesignator;
                [Abide.Guerilla.Tags.FieldAttribute("Lines*", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("structure_bsp_debug_info_render_line_block", 32767, typeof(StructureBspDebugInfoRenderLineBlock))]
                public TagBlock Lines;
                [Abide.Guerilla.Tags.FieldAttribute("Intersected Cluster Indices*", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("structure_bsp_debug_info_indices_block", 32767, typeof(StructureBspDebugInfoIndicesBlock))]
                public TagBlock IntersectedClusterIndices;
                [Abide.Guerilla.Tags.FieldAttribute("Inf. Extent Cluster Indices*", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("structure_bsp_debug_info_indices_block", 32767, typeof(StructureBspDebugInfoIndicesBlock))]
                public TagBlock InfExtentClusterIndices;
                public int Size
                {
                    get
                    {
                        return 68;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(32, 4)]
                public sealed class StructureBspDebugInfoRenderLineBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("Type*", typeof(Int16))]
                    [Abide.Guerilla.Tags.OptionsAttribute(typeof(TypeOptions), false)]
                    public Int16 Type;
                    [Abide.Guerilla.Tags.FieldAttribute("Code*", typeof(Int16))]
                    public Int16 Code;
                    [Abide.Guerilla.Tags.FieldAttribute("Pad Thai*", typeof(Int16))]
                    public Int16 PadThai;
                    [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                    [Abide.Guerilla.Tags.PaddingAttribute(2)]
                    public Byte[] EmptyString;
                    [Abide.Guerilla.Tags.FieldAttribute("Point 0*", typeof(Vector3))]
                    public Vector3 Point0;
                    [Abide.Guerilla.Tags.FieldAttribute("Point 1*", typeof(Vector3))]
                    public Vector3 Point1;
                    public int Size
                    {
                        get
                        {
                            return 32;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    public enum TypeOptions
                    {
                        FogPlaneBoundaryEdge = 0,
                        FogPlaneInternalEdge = 1,
                        FogZoneFloodfill = 2,
                        FogZoneClusterCentroid = 3,
                        FogZoneClusterGeometry = 4,
                        FogZonePortalCentroid = 5,
                        FogZonePortalGeometry = 6,
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(4, 4)]
                public sealed class StructureBspDebugInfoIndicesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("Index*", typeof(Int32))]
                    public Int32 Index;
                    public int Size
                    {
                        get
                        {
                            return 4;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(80, 4)]
            public sealed class StructureBspFogZoneDebugInfoBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("Media Index:Scenario Fog Plane*", typeof(Int32))]
                public Int32 MediaIndex;
                [Abide.Guerilla.Tags.FieldAttribute("Base Fog Plane Index*", typeof(Int32))]
                public Int32 BaseFogPlaneIndex;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(24)]
                public Byte[] EmptyString;
                [Abide.Guerilla.Tags.FieldAttribute("Lines*", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("structure_bsp_debug_info_render_line_block", 32767, typeof(StructureBspDebugInfoRenderLineBlock))]
                public TagBlock Lines;
                [Abide.Guerilla.Tags.FieldAttribute("Immersed Cluster Indices*", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("structure_bsp_debug_info_indices_block", 32767, typeof(StructureBspDebugInfoIndicesBlock))]
                public TagBlock ImmersedClusterIndices;
                [Abide.Guerilla.Tags.FieldAttribute("Bounding Fog Plane Indices*", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("structure_bsp_debug_info_indices_block", 32767, typeof(StructureBspDebugInfoIndicesBlock))]
                public TagBlock BoundingFogPlaneIndices;
                [Abide.Guerilla.Tags.FieldAttribute("Collision Fog Plane Indices*", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("structure_bsp_debug_info_indices_block", 32767, typeof(StructureBspDebugInfoIndicesBlock))]
                public TagBlock CollisionFogPlaneIndices;
                public int Size
                {
                    get
                    {
                        return 80;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(32, 4)]
                public sealed class StructureBspDebugInfoRenderLineBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("Type*", typeof(Int16))]
                    [Abide.Guerilla.Tags.OptionsAttribute(typeof(TypeOptions), false)]
                    public Int16 Type;
                    [Abide.Guerilla.Tags.FieldAttribute("Code*", typeof(Int16))]
                    public Int16 Code;
                    [Abide.Guerilla.Tags.FieldAttribute("Pad Thai*", typeof(Int16))]
                    public Int16 PadThai;
                    [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                    [Abide.Guerilla.Tags.PaddingAttribute(2)]
                    public Byte[] EmptyString;
                    [Abide.Guerilla.Tags.FieldAttribute("Point 0*", typeof(Vector3))]
                    public Vector3 Point0;
                    [Abide.Guerilla.Tags.FieldAttribute("Point 1*", typeof(Vector3))]
                    public Vector3 Point1;
                    public int Size
                    {
                        get
                        {
                            return 32;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    public enum TypeOptions
                    {
                        FogPlaneBoundaryEdge = 0,
                        FogPlaneInternalEdge = 1,
                        FogZoneFloodfill = 2,
                        FogZoneClusterCentroid = 3,
                        FogZoneClusterGeometry = 4,
                        FogZonePortalCentroid = 5,
                        FogZonePortalGeometry = 6,
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(4, 4)]
                public sealed class StructureBspDebugInfoIndicesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("Index*", typeof(Int32))]
                    public Int32 Index;
                    public int Size
                    {
                        get
                        {
                            return 4;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                }
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(188, 4)]
        public sealed class GlobalWaterDefinitionsBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("Shader", typeof(TagReference))]
            public TagReference Shader;
            [Abide.Guerilla.Tags.FieldAttribute("Section", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("water_geometry_section_block", 1, typeof(WaterGeometrySectionBlock))]
            public TagBlock Section;
            [Abide.Guerilla.Tags.FieldAttribute("Geometry Block Info*", typeof(GlobalGeometryBlockInfoStructBlock))]
            public GlobalGeometryBlockInfoStructBlock GeometryBlockInfo;
            [Abide.Guerilla.Tags.FieldAttribute("Sun Spot Color", typeof(ColorRgbF))]
            public ColorRgbF SunSpotColor;
            [Abide.Guerilla.Tags.FieldAttribute("Reflection Tint", typeof(ColorRgbF))]
            public ColorRgbF ReflectionTint;
            [Abide.Guerilla.Tags.FieldAttribute("Refraction Tint", typeof(ColorRgbF))]
            public ColorRgbF RefractionTint;
            [Abide.Guerilla.Tags.FieldAttribute("Horizon Color", typeof(ColorRgbF))]
            public ColorRgbF HorizonColor;
            [Abide.Guerilla.Tags.FieldAttribute("Sun Specular Power", typeof(Single))]
            public Single SunSpecularPower;
            [Abide.Guerilla.Tags.FieldAttribute("Reflection Bump Scale", typeof(Single))]
            public Single ReflectionBumpScale;
            [Abide.Guerilla.Tags.FieldAttribute("Refraction Bump Scale", typeof(Single))]
            public Single RefractionBumpScale;
            [Abide.Guerilla.Tags.FieldAttribute("Fresnel Scale", typeof(Single))]
            public Single FresnelScale;
            [Abide.Guerilla.Tags.FieldAttribute("Sun Dir Heading", typeof(Single))]
            public Single SunDirHeading;
            [Abide.Guerilla.Tags.FieldAttribute("Sun Dir Pitch", typeof(Single))]
            public Single SunDirPitch;
            [Abide.Guerilla.Tags.FieldAttribute("FOV", typeof(Single))]
            public Single Fov;
            [Abide.Guerilla.Tags.FieldAttribute("Aspect", typeof(Single))]
            public Single Aspect;
            [Abide.Guerilla.Tags.FieldAttribute("Height", typeof(Single))]
            public Single Height;
            [Abide.Guerilla.Tags.FieldAttribute("Farz", typeof(Single))]
            public Single Farz;
            [Abide.Guerilla.Tags.FieldAttribute("rotate_offset", typeof(Single))]
            public Single RotateOffset;
            [Abide.Guerilla.Tags.FieldAttribute("Center", typeof(Vector2))]
            public Vector2 Center;
            [Abide.Guerilla.Tags.FieldAttribute("Extents", typeof(Vector2))]
            public Vector2 Extents;
            [Abide.Guerilla.Tags.FieldAttribute("Fog Near", typeof(Single))]
            public Single FogNear;
            [Abide.Guerilla.Tags.FieldAttribute("Fog Far", typeof(Single))]
            public Single FogFar;
            [Abide.Guerilla.Tags.FieldAttribute("dynamic_height_bias", typeof(Single))]
            public Single DynamicHeightBias;
            public int Size
            {
                get
                {
                    return 188;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(108, 4)]
            public sealed class WaterGeometrySectionBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("Section*", typeof(GlobalGeometrySectionStructBlock))]
                public GlobalGeometrySectionStructBlock Section;
                public int Size
                {
                    get
                    {
                        return 108;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(108, 4)]
                public sealed class GlobalGeometrySectionStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("Parts*", typeof(TagBlock))]
                    [Abide.Guerilla.Tags.BlockAttribute("part", 255, typeof(GlobalGeometryPartBlockNew))]
                    public TagBlock Parts;
                    [Abide.Guerilla.Tags.FieldAttribute("Subparts*", typeof(TagBlock))]
                    [Abide.Guerilla.Tags.BlockAttribute("subparts", 32768, typeof(GlobalSubpartsBlock))]
                    public TagBlock Subparts;
                    [Abide.Guerilla.Tags.FieldAttribute("Visibility Bounds*", typeof(TagBlock))]
                    [Abide.Guerilla.Tags.BlockAttribute("visibility bounds", 32768, typeof(GlobalVisibilityBoundsBlock))]
                    public TagBlock VisibilityBounds;
                    [Abide.Guerilla.Tags.FieldAttribute("Raw Vertices*", typeof(TagBlock))]
                    [Abide.Guerilla.Tags.BlockAttribute("vertex", 32767, typeof(GlobalGeometrySectionRawVertexBlock))]
                    public TagBlock RawVertices;
                    [Abide.Guerilla.Tags.FieldAttribute("Strip Indices*", typeof(TagBlock))]
                    [Abide.Guerilla.Tags.BlockAttribute("index", 65535, typeof(GlobalGeometrySectionStripIndexBlock))]
                    public TagBlock StripIndices;
                    [Abide.Guerilla.Tags.FieldAttribute("mopp Reorder Table*", typeof(TagBlock))]
                    [Abide.Guerilla.Tags.BlockAttribute("index", 65535, typeof(GlobalGeometrySectionStripIndexBlock))]
                    public TagBlock MoppReorderTable;
                    [Abide.Guerilla.Tags.FieldAttribute("Vertex Buffers*", typeof(TagBlock))]
                    [Abide.Guerilla.Tags.BlockAttribute("vertex buffer", 512, typeof(GlobalGeometrySectionVertexBufferBlock))]
                    public TagBlock VertexBuffers;
                    [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                    [Abide.Guerilla.Tags.PaddingAttribute(4)]
                    public Byte[] EmptyString;
                    public int Size
                    {
                        get
                        {
                            return 108;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(72, 4)]
                    public sealed class GlobalGeometryPartBlockNew : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Type*", typeof(Int16))]
                        [Abide.Guerilla.Tags.OptionsAttribute(typeof(TypeOptions), false)]
                        public Int16 Type;
                        [Abide.Guerilla.Tags.FieldAttribute("Flags*", typeof(Int16))]
                        [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
                        public Int16 Flags;
                        [Abide.Guerilla.Tags.FieldAttribute("Material*", typeof(Int16))]
                        public Int16 Material;
                        [Abide.Guerilla.Tags.FieldAttribute("Strip Start Index*", typeof(Int16))]
                        public Int16 StripStartIndex;
                        [Abide.Guerilla.Tags.FieldAttribute("Strip Length*", typeof(Int16))]
                        public Int16 StripLength;
                        [Abide.Guerilla.Tags.FieldAttribute("First Subpart Index*", typeof(Int16))]
                        public Int16 FirstSubpartIndex;
                        [Abide.Guerilla.Tags.FieldAttribute("Subpart Count*", typeof(Int16))]
                        public Int16 SubpartCount;
                        [Abide.Guerilla.Tags.FieldAttribute("Max Nodes/Vertex*", typeof(Byte))]
                        public Byte MaxNodesvertex;
                        [Abide.Guerilla.Tags.FieldAttribute("Contributing Compound Node Count*", typeof(Byte))]
                        public Byte ContributingCompoundNodeCount;
                        [Abide.Guerilla.Tags.FieldAttribute("Position*", typeof(Vector3))]
                        public Vector3 Position;
                        [Abide.Guerilla.Tags.FieldAttribute("Node Indices*", typeof(NodeIndicesElement[]))]
                        [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeIndicesElement))]
                        public NodeIndicesElement[] NodeIndices;
                        [Abide.Guerilla.Tags.FieldAttribute("Node Weights*", typeof(NodeWeightsElement[]))]
                        [Abide.Guerilla.Tags.ArrayAttribute(3, typeof(NodeWeightsElement))]
                        public NodeWeightsElement[] NodeWeights;
                        [Abide.Guerilla.Tags.FieldAttribute("lod mipmap magic number*", typeof(Single))]
                        public Single LodMipmapMagicNumber;
                        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                        [Abide.Guerilla.Tags.PaddingAttribute(24)]
                        public Byte[] EmptyString;
                        public int Size
                        {
                            get
                            {
                                return 72;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                        public sealed class NodeIndicesElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("Node Index*", typeof(Byte))]
                            public Byte NodeIndex;
                            public int Size
                            {
                                get
                                {
                                    return 0;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                        }
                        public sealed class NodeWeightsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("Node Weight*", typeof(Single))]
                            public Single NodeWeight;
                            public int Size
                            {
                                get
                                {
                                    return 0;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                        }
                        public enum TypeOptions
                        {
                            NotDrawn = 0,
                            OpaqueShadowOnly = 1,
                            OpaqueShadowCasting = 2,
                            OpaqueNonshadowing = 3,
                            Transparent = 4,
                            LightmapOnly = 5,
                        }
                        public enum FlagsOptions
                        {
                            Decalable = 1,
                            NewPartTypes = 2,
                            DislikesPhotons = 4,
                            OverrideTriangleList = 8,
                            IgnoredByLightmapper = 16,
                        }
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(8, 4)]
                    public sealed class GlobalSubpartsBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("indices_start_index*", typeof(Int16))]
                        public Int16 IndicesStartIndex;
                        [Abide.Guerilla.Tags.FieldAttribute("indices_length*", typeof(Int16))]
                        public Int16 IndicesLength;
                        [Abide.Guerilla.Tags.FieldAttribute("visibility_bounds_index*", typeof(Int16))]
                        public Int16 VisibilityBoundsIndex;
                        [Abide.Guerilla.Tags.FieldAttribute("Part Index*", typeof(Int16))]
                        public Int16 PartIndex;
                        public int Size
                        {
                            get
                            {
                                return 8;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(20, 4)]
                    public sealed class GlobalVisibilityBoundsBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Position x*", typeof(Single))]
                        public Single PositionX;
                        [Abide.Guerilla.Tags.FieldAttribute("Position y*", typeof(Single))]
                        public Single PositionY;
                        [Abide.Guerilla.Tags.FieldAttribute("Position z*", typeof(Single))]
                        public Single PositionZ;
                        [Abide.Guerilla.Tags.FieldAttribute("Radius*", typeof(Single))]
                        public Single Radius;
                        [Abide.Guerilla.Tags.FieldAttribute("Node 0*", typeof(Byte))]
                        public Byte Node0;
                        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                        [Abide.Guerilla.Tags.PaddingAttribute(3)]
                        public Byte[] EmptyString;
                        public int Size
                        {
                            get
                            {
                                return 20;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(196, 4)]
                    public sealed class GlobalGeometrySectionRawVertexBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Position*", typeof(Vector3))]
                        public Vector3 Position;
                        [Abide.Guerilla.Tags.FieldAttribute("Node Indices (OLD)*", typeof(NodeIndicesOldElement[]))]
                        [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeIndicesOldElement))]
                        public NodeIndicesOldElement[] NodeIndicesOld;
                        [Abide.Guerilla.Tags.FieldAttribute("Node Weights*", typeof(NodeWeightsElement[]))]
                        [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeWeightsElement))]
                        public NodeWeightsElement[] NodeWeights;
                        [Abide.Guerilla.Tags.FieldAttribute("Node Indices (NEW)*", typeof(NodeIndicesNewElement[]))]
                        [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeIndicesNewElement))]
                        public NodeIndicesNewElement[] NodeIndicesNew;
                        [Abide.Guerilla.Tags.FieldAttribute("Use New Node Indices*", typeof(Int32))]
                        public Int32 UseNewNodeIndices;
                        [Abide.Guerilla.Tags.FieldAttribute("Adjusted Compound Node Index*", typeof(Int32))]
                        public Int32 AdjustedCompoundNodeIndex;
                        [Abide.Guerilla.Tags.FieldAttribute("texcoord*", typeof(Vector2))]
                        public Vector2 Texcoord;
                        [Abide.Guerilla.Tags.FieldAttribute("Normal*", typeof(Vector3))]
                        public Vector3 Normal;
                        [Abide.Guerilla.Tags.FieldAttribute("Binormal*", typeof(Vector3))]
                        public Vector3 Binormal;
                        [Abide.Guerilla.Tags.FieldAttribute("Tangent*", typeof(Vector3))]
                        public Vector3 Tangent;
                        [Abide.Guerilla.Tags.FieldAttribute("Anisotropic Binormal*", typeof(Vector3))]
                        public Vector3 AnisotropicBinormal;
                        [Abide.Guerilla.Tags.FieldAttribute("Secondary texcoord*", typeof(Vector2))]
                        public Vector2 SecondaryTexcoord;
                        [Abide.Guerilla.Tags.FieldAttribute("Primary Lightmap Color", typeof(ColorRgbF))]
                        public ColorRgbF PrimaryLightmapColor;
                        [Abide.Guerilla.Tags.FieldAttribute("Primary Lightmap texcoord", typeof(Vector2))]
                        public Vector2 PrimaryLightmapTexcoord;
                        [Abide.Guerilla.Tags.FieldAttribute("Primary Lightmap Incident Direction", typeof(Vector3))]
                        public Vector3 PrimaryLightmapIncidentDirection;
                        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                        [Abide.Guerilla.Tags.PaddingAttribute(12)]
                        public Byte[] EmptyString;
                        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                        [Abide.Guerilla.Tags.PaddingAttribute(8)]
                        public Byte[] EmptyString1;
                        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                        [Abide.Guerilla.Tags.PaddingAttribute(12)]
                        public Byte[] EmptyString2;
                        public int Size
                        {
                            get
                            {
                                return 196;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                        public sealed class NodeIndicesOldElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("Node Index (OLD)*", typeof(Int32))]
                            public Int32 NodeIndexOld;
                            public int Size
                            {
                                get
                                {
                                    return 0;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                        }
                        public sealed class NodeWeightsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("node_weight*", typeof(Single))]
                            public Single NodeWeight;
                            public int Size
                            {
                                get
                                {
                                    return 0;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                        }
                        public sealed class NodeIndicesNewElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("Node Index (NEW)*", typeof(Int32))]
                            public Int32 NodeIndexNew;
                            public int Size
                            {
                                get
                                {
                                    return 0;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                        }
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(2, 4)]
                    public sealed class GlobalGeometrySectionStripIndexBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Index*", typeof(Int16))]
                        public Int16 Index;
                        public int Size
                        {
                            get
                            {
                                return 2;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(32, 4)]
                    public sealed class GlobalGeometrySectionVertexBufferBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        public int Size
                        {
                            get
                            {
                                return 32;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(40, 4)]
            public sealed class GlobalGeometryBlockInfoStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("Block Offset*", typeof(Int32))]
                public Int32 BlockOffset;
                [Abide.Guerilla.Tags.FieldAttribute("Block Size*", typeof(Int32))]
                public Int32 BlockSize;
                [Abide.Guerilla.Tags.FieldAttribute("Section Data Size*", typeof(Int32))]
                public Int32 SectionDataSize;
                [Abide.Guerilla.Tags.FieldAttribute("Resource Data Size*", typeof(Int32))]
                public Int32 ResourceDataSize;
                [Abide.Guerilla.Tags.FieldAttribute("Resources*", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("block resources", 1024, typeof(GlobalGeometryBlockResourceBlock))]
                public TagBlock Resources;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(4)]
                public Byte[] EmptyString;
                [Abide.Guerilla.Tags.FieldAttribute("Owner Tag Section Offset*", typeof(Int16))]
                public Int16 OwnerTagSectionOffset;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(2)]
                public Byte[] EmptyString1;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(4)]
                public Byte[] EmptyString2;
                public int Size
                {
                    get
                    {
                        return 40;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(16, 4)]
                public sealed class GlobalGeometryBlockResourceBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("Type*", typeof(Byte))]
                    [Abide.Guerilla.Tags.OptionsAttribute(typeof(TypeOptions), false)]
                    public Byte Type;
                    [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                    [Abide.Guerilla.Tags.PaddingAttribute(3)]
                    public Byte[] EmptyString;
                    [Abide.Guerilla.Tags.FieldAttribute("Primary Locator*", typeof(Int16))]
                    public Int16 PrimaryLocator;
                    [Abide.Guerilla.Tags.FieldAttribute("Secondary Locator*", typeof(Int16))]
                    public Int16 SecondaryLocator;
                    [Abide.Guerilla.Tags.FieldAttribute("Resource Data Size*", typeof(Int32))]
                    public Int32 ResourceDataSize;
                    [Abide.Guerilla.Tags.FieldAttribute("Resource Data Offset*", typeof(Int32))]
                    public Int32 ResourceDataOffset;
                    public int Size
                    {
                        get
                        {
                            return 16;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    public enum TypeOptions
                    {
                        TagBlock = 0,
                        TagData = 1,
                        VertexBuffer = 2,
                    }
                }
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(24, 4)]
        public sealed class StructurePortalDeviceMappingBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("device portal associations", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("structure_device_portal_association_block", 128, typeof(StructureDevicePortalAssociationBlock))]
            public TagBlock DevicePortalAssociations;
            [Abide.Guerilla.Tags.FieldAttribute("game portal to portal map", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("game_portal_to_portal_mapping_block", 128, typeof(GamePortalToPortalMappingBlock))]
            public TagBlock GamePortalToPortalMap;
            public int Size
            {
                get
                {
                    return 24;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(12, 4)]
            public sealed class StructureDevicePortalAssociationBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("device id", typeof(ScenarioObjectIdStructBlock))]
                public ScenarioObjectIdStructBlock DeviceId;
                [Abide.Guerilla.Tags.FieldAttribute("first game portal index", typeof(Int16))]
                public Int16 FirstGamePortalIndex;
                [Abide.Guerilla.Tags.FieldAttribute("game portal count", typeof(Int16))]
                public Int16 GamePortalCount;
                public int Size
                {
                    get
                    {
                        return 12;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(8, 4)]
                public sealed class ScenarioObjectIdStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("Unique ID*", typeof(Int32))]
                    public Int32 UniqueId;
                    [Abide.Guerilla.Tags.FieldAttribute("Origin BSP Index*", typeof(Int16))]
                    public Int16 OriginBspIndex;
                    [Abide.Guerilla.Tags.FieldAttribute("Type*", typeof(Byte))]
                    [Abide.Guerilla.Tags.OptionsAttribute(typeof(TypeOptions), false)]
                    public Byte Type;
                    [Abide.Guerilla.Tags.FieldAttribute("Source*", typeof(Byte))]
                    [Abide.Guerilla.Tags.OptionsAttribute(typeof(SourceOptions), false)]
                    public Byte Source;
                    public int Size
                    {
                        get
                        {
                            return 8;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    public enum TypeOptions
                    {
                        Biped = 0,
                        Vehicle = 1,
                        Weapon = 2,
                        Equipment = 3,
                        Garbage = 4,
                        Projectile = 5,
                        Scenery = 6,
                        Machine = 7,
                        Control = 8,
                        LightFixture = 9,
                        SoundScenery = 10,
                        Crate = 11,
                        Creature = 12,
                    }
                    public enum SourceOptions
                    {
                        Structure = 0,
                        Editor = 1,
                        Dynamic = 2,
                        Legacy = 3,
                    }
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(2, 4)]
            public sealed class GamePortalToPortalMappingBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("portal index", typeof(Int16))]
                public Int16 PortalIndex;
                public int Size
                {
                    get
                    {
                        return 2;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(72, 4)]
        public sealed class StructureBspAudibilityBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("door portal count", typeof(Int32))]
            public Int32 DoorPortalCount;
            [Abide.Guerilla.Tags.FieldAttribute("encoded door pas", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("door_encoded_pas_block", 4096, typeof(DoorEncodedPasBlock))]
            public TagBlock EncodedDoorPas;
            [Abide.Guerilla.Tags.FieldAttribute("cluster door portal encoded pas", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("cluster_door_portal_encoded_pas_block", 2048, typeof(ClusterDoorPortalEncodedPasBlock))]
            public TagBlock ClusterDoorPortalEncodedPas;
            [Abide.Guerilla.Tags.FieldAttribute("ai deafening pas", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("ai_deafening_encoded_pas_block", 4088, typeof(AiDeafeningEncodedPasBlock))]
            public TagBlock AiDeafeningPas;
            [Abide.Guerilla.Tags.FieldAttribute("cluster distances", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("encoded_cluster_distances_block", 130816, typeof(EncodedClusterDistancesBlock))]
            public TagBlock ClusterDistances;
            [Abide.Guerilla.Tags.FieldAttribute("machine door mapping", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("occluder_to_machine_door_mapping", 128, typeof(OccluderToMachineDoorMapping))]
            public TagBlock MachineDoorMapping;
            public int Size
            {
                get
                {
                    return 72;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(4, 4)]
            public sealed class DoorEncodedPasBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Int32))]
                public Int32 EmptyString;
                public int Size
                {
                    get
                    {
                        return 4;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(4, 4)]
            public sealed class ClusterDoorPortalEncodedPasBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Int32))]
                public Int32 EmptyString;
                public int Size
                {
                    get
                    {
                        return 4;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(4, 4)]
            public sealed class AiDeafeningEncodedPasBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Int32))]
                public Int32 EmptyString;
                public int Size
                {
                    get
                    {
                        return 4;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(1, 4)]
            public sealed class EncodedClusterDistancesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte))]
                public Byte EmptyString;
                public int Size
                {
                    get
                    {
                        return 1;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(1, 4)]
            public sealed class OccluderToMachineDoorMapping : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("machine door index", typeof(Byte))]
                public Byte MachineDoorIndex;
                public int Size
                {
                    get
                    {
                        return 1;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(92, 4)]
        public sealed class StructureBspFakeLightprobesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("Object Identifier*", typeof(ScenarioObjectIdStructBlock))]
            public ScenarioObjectIdStructBlock ObjectIdentifier;
            [Abide.Guerilla.Tags.FieldAttribute("Render Lighting*", typeof(RenderLightingStructBlock))]
            public RenderLightingStructBlock RenderLighting;
            public int Size
            {
                get
                {
                    return 92;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(8, 4)]
            public sealed class ScenarioObjectIdStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("Unique ID*", typeof(Int32))]
                public Int32 UniqueId;
                [Abide.Guerilla.Tags.FieldAttribute("Origin BSP Index*", typeof(Int16))]
                public Int16 OriginBspIndex;
                [Abide.Guerilla.Tags.FieldAttribute("Type*", typeof(Byte))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(TypeOptions), false)]
                public Byte Type;
                [Abide.Guerilla.Tags.FieldAttribute("Source*", typeof(Byte))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(SourceOptions), false)]
                public Byte Source;
                public int Size
                {
                    get
                    {
                        return 8;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                public enum TypeOptions
                {
                    Biped = 0,
                    Vehicle = 1,
                    Weapon = 2,
                    Equipment = 3,
                    Garbage = 4,
                    Projectile = 5,
                    Scenery = 6,
                    Machine = 7,
                    Control = 8,
                    LightFixture = 9,
                    SoundScenery = 10,
                    Crate = 11,
                    Creature = 12,
                }
                public enum SourceOptions
                {
                    Structure = 0,
                    Editor = 1,
                    Dynamic = 2,
                    Legacy = 3,
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(84, 4)]
            public sealed class RenderLightingStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("Ambient", typeof(ColorRgbF))]
                public ColorRgbF Ambient;
                [Abide.Guerilla.Tags.FieldAttribute("Shadow Direction", typeof(Vector3))]
                public Vector3 ShadowDirection;
                [Abide.Guerilla.Tags.FieldAttribute("lighting_accuracy", typeof(Single))]
                public Single LightingAccuracy;
                [Abide.Guerilla.Tags.FieldAttribute("Shadow Opacity", typeof(Single))]
                public Single ShadowOpacity;
                [Abide.Guerilla.Tags.FieldAttribute("Primary Direction Color", typeof(ColorRgbF))]
                public ColorRgbF PrimaryDirectionColor;
                [Abide.Guerilla.Tags.FieldAttribute("Primary Direction", typeof(Vector3))]
                public Vector3 PrimaryDirection;
                [Abide.Guerilla.Tags.FieldAttribute("Secondary Direction Color", typeof(ColorRgbF))]
                public ColorRgbF SecondaryDirectionColor;
                [Abide.Guerilla.Tags.FieldAttribute("Secondary Direction", typeof(Vector3))]
                public Vector3 SecondaryDirection;
                [Abide.Guerilla.Tags.FieldAttribute("sh Index", typeof(Int16))]
                public Int16 ShIndex;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(2)]
                public Byte[] EmptyString;
                public int Size
                {
                    get
                    {
                        return 84;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(64, 4)]
        public sealed class DecoratorPlacementDefinitionBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("Grid Origin", typeof(Vector3))]
            public Vector3 GridOrigin;
            [Abide.Guerilla.Tags.FieldAttribute("Cell Count per Dimension", typeof(Int32))]
            public Int32 CellCountPerDimension;
            [Abide.Guerilla.Tags.FieldAttribute("Cache Blocks", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("decorator_cache_block_block", 4096, typeof(DecoratorCacheBlockBlock))]
            public TagBlock CacheBlocks;
            [Abide.Guerilla.Tags.FieldAttribute("Groups", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("decorator_group_block", 131072, typeof(DecoratorGroupBlock))]
            public TagBlock Groups;
            [Abide.Guerilla.Tags.FieldAttribute("Cells", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("decorator_cell_collection_block", 65535, typeof(DecoratorCellCollectionBlock))]
            public TagBlock Cells;
            [Abide.Guerilla.Tags.FieldAttribute("Decals", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("decorator_projected_decal_block", 32768, typeof(DecoratorProjectedDecalBlock))]
            public TagBlock Decals;
            public int Size
            {
                get
                {
                    return 64;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(60, 4)]
            public sealed class DecoratorCacheBlockBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("Geometry Block Info*", typeof(GlobalGeometryBlockInfoStructBlock))]
                public GlobalGeometryBlockInfoStructBlock GeometryBlockInfo;
                [Abide.Guerilla.Tags.FieldAttribute("Cache Block Data*", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("decorator_cache_block_data_block", 1, typeof(DecoratorCacheBlockDataBlock))]
                public TagBlock CacheBlockData;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(4)]
                public Byte[] EmptyString;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(4)]
                public Byte[] EmptyString1;
                public int Size
                {
                    get
                    {
                        return 60;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(156, 4)]
                public sealed class DecoratorCacheBlockDataBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("Placements*", typeof(TagBlock))]
                    [Abide.Guerilla.Tags.BlockAttribute("decorator_placement_block", 32768, typeof(DecoratorPlacementBlock))]
                    public TagBlock Placements;
                    [Abide.Guerilla.Tags.FieldAttribute("Decal Vertices*", typeof(TagBlock))]
                    [Abide.Guerilla.Tags.BlockAttribute("decal_vertices_block", 65536, typeof(DecalVerticesBlock))]
                    public TagBlock DecalVertices;
                    [Abide.Guerilla.Tags.FieldAttribute("Decal Indices*", typeof(TagBlock))]
                    [Abide.Guerilla.Tags.BlockAttribute("indices_block", 65536, typeof(IndicesBlock))]
                    public TagBlock DecalIndices;
                    [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                    [Abide.Guerilla.Tags.PaddingAttribute(16)]
                    public Byte[] EmptyString;
                    [Abide.Guerilla.Tags.FieldAttribute("Sprite Vertices*", typeof(TagBlock))]
                    [Abide.Guerilla.Tags.BlockAttribute("sprite_vertices_block", 65536, typeof(SpriteVerticesBlock))]
                    public TagBlock SpriteVertices;
                    [Abide.Guerilla.Tags.FieldAttribute("Sprite Indices*", typeof(TagBlock))]
                    [Abide.Guerilla.Tags.BlockAttribute("indices_block", 65536, typeof(IndicesBlock))]
                    public TagBlock SpriteIndices;
                    [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                    [Abide.Guerilla.Tags.PaddingAttribute(16)]
                    public Byte[] EmptyString1;
                    public int Size
                    {
                        get
                        {
                            return 156;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(24, 4)]
                    public sealed class DecoratorPlacementBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Internal Data 1", typeof(Int32))]
                        public Int32 InternalData1;
                        [Abide.Guerilla.Tags.FieldAttribute("Compressed Position", typeof(Int32))]
                        public Int32 CompressedPosition;
                        [Abide.Guerilla.Tags.FieldAttribute("Tint Color", typeof(ColorRgb))]
                        public ColorRgb TintColor;
                        [Abide.Guerilla.Tags.FieldAttribute("Lightmap Color", typeof(ColorRgb))]
                        public ColorRgb LightmapColor;
                        [Abide.Guerilla.Tags.FieldAttribute("Compressed Light Direction", typeof(Int32))]
                        public Int32 CompressedLightDirection;
                        [Abide.Guerilla.Tags.FieldAttribute("Compressed Light 2 Direction", typeof(Int32))]
                        public Int32 CompressedLight2Direction;
                        public int Size
                        {
                            get
                            {
                                return 24;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(32, 4)]
                    public sealed class DecalVerticesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Position*", typeof(Vector3))]
                        public Vector3 Position;
                        [Abide.Guerilla.Tags.FieldAttribute("texcoord 0*", typeof(Vector2))]
                        public Vector2 Texcoord0;
                        [Abide.Guerilla.Tags.FieldAttribute("texcoord 1*", typeof(Vector2))]
                        public Vector2 Texcoord1;
                        [Abide.Guerilla.Tags.FieldAttribute("Color*", typeof(ColorRgb))]
                        public ColorRgb Color;
                        public int Size
                        {
                            get
                            {
                                return 32;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(2, 4)]
                    public sealed class IndicesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Index*", typeof(Int16))]
                        public Int16 Index;
                        public int Size
                        {
                            get
                            {
                                return 2;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(48, 4)]
                    public sealed class SpriteVerticesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Position*", typeof(Vector3))]
                        public Vector3 Position;
                        [Abide.Guerilla.Tags.FieldAttribute("Offset*", typeof(Vector3))]
                        public Vector3 Offset;
                        [Abide.Guerilla.Tags.FieldAttribute("Axis*", typeof(Vector3))]
                        public Vector3 Axis;
                        [Abide.Guerilla.Tags.FieldAttribute("texcoord*", typeof(Vector2))]
                        public Vector2 Texcoord;
                        [Abide.Guerilla.Tags.FieldAttribute("Color*", typeof(ColorRgb))]
                        public ColorRgb Color;
                        public int Size
                        {
                            get
                            {
                                return 48;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(40, 4)]
                public sealed class GlobalGeometryBlockInfoStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("Block Offset*", typeof(Int32))]
                    public Int32 BlockOffset;
                    [Abide.Guerilla.Tags.FieldAttribute("Block Size*", typeof(Int32))]
                    public Int32 BlockSize;
                    [Abide.Guerilla.Tags.FieldAttribute("Section Data Size*", typeof(Int32))]
                    public Int32 SectionDataSize;
                    [Abide.Guerilla.Tags.FieldAttribute("Resource Data Size*", typeof(Int32))]
                    public Int32 ResourceDataSize;
                    [Abide.Guerilla.Tags.FieldAttribute("Resources*", typeof(TagBlock))]
                    [Abide.Guerilla.Tags.BlockAttribute("block resources", 1024, typeof(GlobalGeometryBlockResourceBlock))]
                    public TagBlock Resources;
                    [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                    [Abide.Guerilla.Tags.PaddingAttribute(4)]
                    public Byte[] EmptyString;
                    [Abide.Guerilla.Tags.FieldAttribute("Owner Tag Section Offset*", typeof(Int16))]
                    public Int16 OwnerTagSectionOffset;
                    [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                    [Abide.Guerilla.Tags.PaddingAttribute(2)]
                    public Byte[] EmptyString1;
                    [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                    [Abide.Guerilla.Tags.PaddingAttribute(4)]
                    public Byte[] EmptyString2;
                    public int Size
                    {
                        get
                        {
                            return 40;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(16, 4)]
                    public sealed class GlobalGeometryBlockResourceBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Type*", typeof(Byte))]
                        [Abide.Guerilla.Tags.OptionsAttribute(typeof(TypeOptions), false)]
                        public Byte Type;
                        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                        [Abide.Guerilla.Tags.PaddingAttribute(3)]
                        public Byte[] EmptyString;
                        [Abide.Guerilla.Tags.FieldAttribute("Primary Locator*", typeof(Int16))]
                        public Int16 PrimaryLocator;
                        [Abide.Guerilla.Tags.FieldAttribute("Secondary Locator*", typeof(Int16))]
                        public Int16 SecondaryLocator;
                        [Abide.Guerilla.Tags.FieldAttribute("Resource Data Size*", typeof(Int32))]
                        public Int32 ResourceDataSize;
                        [Abide.Guerilla.Tags.FieldAttribute("Resource Data Offset*", typeof(Int32))]
                        public Int32 ResourceDataOffset;
                        public int Size
                        {
                            get
                            {
                                return 16;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                        public enum TypeOptions
                        {
                            TagBlock = 0,
                            TagData = 1,
                            VertexBuffer = 2,
                        }
                    }
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(24, 4)]
            public sealed class DecoratorGroupBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("Decorator Set*", typeof(Byte))]
                public Byte DecoratorSet;
                [Abide.Guerilla.Tags.FieldAttribute("Decorator Type", typeof(Byte))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(DecoratorTypeOptions), false)]
                public Byte DecoratorType;
                [Abide.Guerilla.Tags.FieldAttribute("Shader Index*", typeof(Byte))]
                public Byte ShaderIndex;
                [Abide.Guerilla.Tags.FieldAttribute("Compressed Radius*", typeof(Byte))]
                public Byte CompressedRadius;
                [Abide.Guerilla.Tags.FieldAttribute("Cluster*", typeof(Int16))]
                public Int16 Cluster;
                [Abide.Guerilla.Tags.FieldAttribute("Cache Block*", typeof(Int16))]
                public Int16 CacheBlock;
                [Abide.Guerilla.Tags.FieldAttribute("Decorator Start Index*", typeof(Int16))]
                public Int16 DecoratorStartIndex;
                [Abide.Guerilla.Tags.FieldAttribute("Decorator Count*", typeof(Int16))]
                public Int16 DecoratorCount;
                [Abide.Guerilla.Tags.FieldAttribute("Vertex Start Offset*", typeof(Int16))]
                public Int16 VertexStartOffset;
                [Abide.Guerilla.Tags.FieldAttribute("Vertex Count*", typeof(Int16))]
                public Int16 VertexCount;
                [Abide.Guerilla.Tags.FieldAttribute("Index Start Offset*", typeof(Int16))]
                public Int16 IndexStartOffset;
                [Abide.Guerilla.Tags.FieldAttribute("Index Count*", typeof(Int16))]
                public Int16 IndexCount;
                [Abide.Guerilla.Tags.FieldAttribute("Compressed Bounding Center*", typeof(Int32))]
                public Int32 CompressedBoundingCenter;
                public int Size
                {
                    get
                    {
                        return 24;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                public enum DecoratorTypeOptions
                {
                    Model = 0,
                    FloatingDecal = 1,
                    ProjectedDecal = 2,
                    ScreenFacingQuad = 3,
                    AxisRotatingQuad = 4,
                    CrossQuad = 5,
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(24, 4)]
            public sealed class DecoratorCellCollectionBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("Child Indices", typeof(ChildIndicesElement[]))]
                [Abide.Guerilla.Tags.ArrayAttribute(8, typeof(ChildIndicesElement))]
                public ChildIndicesElement[] ChildIndices;
                [Abide.Guerilla.Tags.FieldAttribute("Cache Block Index", typeof(Int16))]
                public Int16 CacheBlockIndex;
                [Abide.Guerilla.Tags.FieldAttribute("Group Count", typeof(Int16))]
                public Int16 GroupCount;
                [Abide.Guerilla.Tags.FieldAttribute("Group Start Index", typeof(Int32))]
                public Int32 GroupStartIndex;
                public int Size
                {
                    get
                    {
                        return 24;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                public sealed class ChildIndicesElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("Child Index", typeof(Int16))]
                    public Int16 ChildIndex;
                    public int Size
                    {
                        get
                        {
                            return 0;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(64, 4)]
            public sealed class DecoratorProjectedDecalBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("Decorator Set", typeof(Byte))]
                public Byte DecoratorSet;
                [Abide.Guerilla.Tags.FieldAttribute("Decorator Class", typeof(Byte))]
                public Byte DecoratorClass;
                [Abide.Guerilla.Tags.FieldAttribute("Decorator Permutation", typeof(Byte))]
                public Byte DecoratorPermutation;
                [Abide.Guerilla.Tags.FieldAttribute("Sprite Index", typeof(Byte))]
                public Byte SpriteIndex;
                [Abide.Guerilla.Tags.FieldAttribute("Position", typeof(Vector3))]
                public Vector3 Position;
                [Abide.Guerilla.Tags.FieldAttribute("Left", typeof(Vector3))]
                public Vector3 Left;
                [Abide.Guerilla.Tags.FieldAttribute("Up", typeof(Vector3))]
                public Vector3 Up;
                [Abide.Guerilla.Tags.FieldAttribute("Extents", typeof(Vector3))]
                public Vector3 Extents;
                [Abide.Guerilla.Tags.FieldAttribute("Previous Position", typeof(Vector3))]
                public Vector3 PreviousPosition;
                public int Size
                {
                    get
                    {
                        return 64;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(80, 4)]
        public sealed class GlobalStructurePhysicsStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString;
            [Abide.Guerilla.Tags.FieldAttribute("*mopp Bounds Min", typeof(Vector3))]
            public Vector3 MoppBoundsMin;
            [Abide.Guerilla.Tags.FieldAttribute("*mopp Bounds Max", typeof(Vector3))]
            public Vector3 MoppBoundsMax;
            [Abide.Guerilla.Tags.FieldAttribute("Breakable Surface Key Table", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("breakable_surface_key_table_block", 8192, typeof(BreakableSurfaceKeyTableBlock))]
            public TagBlock BreakableSurfaceKeyTable;
            public int Size
            {
                get
                {
                    return 80;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(32, 4)]
            public sealed class BreakableSurfaceKeyTableBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("*Instanced Geometry Index", typeof(Int16))]
                public Int16 InstancedGeometryIndex;
                [Abide.Guerilla.Tags.FieldAttribute("*Breakable Surface Index", typeof(Int16))]
                public Int16 BreakableSurfaceIndex;
                [Abide.Guerilla.Tags.FieldAttribute("*Seed Surface Index", typeof(Int32))]
                public Int32 SeedSurfaceIndex;
                [Abide.Guerilla.Tags.FieldAttribute("*x0", typeof(Single))]
                public Single X0;
                [Abide.Guerilla.Tags.FieldAttribute("*x1", typeof(Single))]
                public Single X1;
                [Abide.Guerilla.Tags.FieldAttribute("*y0", typeof(Single))]
                public Single Y0;
                [Abide.Guerilla.Tags.FieldAttribute("*y1", typeof(Single))]
                public Single Y1;
                [Abide.Guerilla.Tags.FieldAttribute("*z0", typeof(Single))]
                public Single Z0;
                [Abide.Guerilla.Tags.FieldAttribute("*z1", typeof(Single))]
                public Single Z1;
                public int Size
                {
                    get
                    {
                        return 32;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
        }
    }
}
#pragma warning restore CS1591
