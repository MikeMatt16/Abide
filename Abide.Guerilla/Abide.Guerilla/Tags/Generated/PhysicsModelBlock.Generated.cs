#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Abide.Guerilla.Tags
{
    using Abide.Guerilla.Types;
    using Abide.HaloLibrary;
    using System;
    
    [Abide.Guerilla.Tags.FieldSetAttribute(396, 4)]
    [Abide.Guerilla.Tags.TagGroupAttribute("physics_model", 1885891951u, 4294967293u, typeof(PhysicsModelBlock))]
    public sealed class PhysicsModelBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
    {
        [Abide.Guerilla.Tags.FieldAttribute("flags", typeof(Int32))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
        public Int32 Flags;
        [Abide.Guerilla.Tags.FieldAttribute("mass", typeof(Single))]
        public Single Mass;
        [Abide.Guerilla.Tags.FieldAttribute("low freq. deactivation scale#0 is default (1). LESS than 1 deactivates less aggre" +
            "ssively. GREATER than 1 is more agressive.", typeof(Single))]
        public Single LowFreqDeactivationScale;
        [Abide.Guerilla.Tags.FieldAttribute("high freq. deactivation scale#0 is default (1). LESS than 1 deactivates less aggr" +
            "essively. GREATER than 1 is more agressive.", typeof(Single))]
        public Single HighFreqDeactivationScale;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(24)]
        public Byte[] EmptyString;
        [Abide.Guerilla.Tags.FieldAttribute("phantom types", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("phantom_types_block", 16, typeof(PhantomTypesBlock))]
        public TagBlock PhantomTypes;
        [Abide.Guerilla.Tags.FieldAttribute("node edges*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("physics_model_node_constraint_edge_block", 4096, typeof(PhysicsModelNodeConstraintEdgeBlock))]
        public TagBlock NodeEdges;
        [Abide.Guerilla.Tags.FieldAttribute("rigid bodies*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("rigid_bodies_block", 64, typeof(RigidBodiesBlock))]
        public TagBlock RigidBodies;
        [Abide.Guerilla.Tags.FieldAttribute("materials*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("materials_block", 64, typeof(MaterialsBlock))]
        public TagBlock Materials;
        [Abide.Guerilla.Tags.FieldAttribute("spheres*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("spheres_block", 1024, typeof(SpheresBlock))]
        public TagBlock Spheres;
        [Abide.Guerilla.Tags.FieldAttribute("multi spheres*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("multi_spheres_block", 1024, typeof(MultiSpheresBlock))]
        public TagBlock MultiSpheres;
        [Abide.Guerilla.Tags.FieldAttribute("pills*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("pills_block", 1024, typeof(PillsBlock))]
        public TagBlock Pills;
        [Abide.Guerilla.Tags.FieldAttribute("boxes*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("boxes_block", 1024, typeof(BoxesBlock))]
        public TagBlock Boxes;
        [Abide.Guerilla.Tags.FieldAttribute("triangles*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("triangles_block", 1024, typeof(TrianglesBlock))]
        public TagBlock Triangles;
        [Abide.Guerilla.Tags.FieldAttribute("polyhedra*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("polyhedra_block", 1024, typeof(PolyhedraBlock))]
        public TagBlock Polyhedra;
        [Abide.Guerilla.Tags.FieldAttribute("polyhedron four vectors*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("polyhedron_four_vectors_block", 4096, typeof(PolyhedronFourVectorsBlock))]
        public TagBlock PolyhedronFourVectors;
        [Abide.Guerilla.Tags.FieldAttribute("polyhedron plane equations*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("polyhedron_plane_equations_block", 1024, typeof(PolyhedronPlaneEquationsBlock))]
        public TagBlock PolyhedronPlaneEquations;
        [Abide.Guerilla.Tags.FieldAttribute("mass distributions*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("mass_distributions_block", 256, typeof(MassDistributionsBlock))]
        public TagBlock MassDistributions;
        [Abide.Guerilla.Tags.FieldAttribute("lists*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("lists_block", 64, typeof(ListsBlock))]
        public TagBlock Lists;
        [Abide.Guerilla.Tags.FieldAttribute("list shapes*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("list_shapes_block", 256, typeof(ListShapesBlock))]
        public TagBlock ListShapes;
        [Abide.Guerilla.Tags.FieldAttribute("mopps*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("mopps_block", 64, typeof(MoppsBlock))]
        public TagBlock Mopps;
        [Abide.Guerilla.Tags.FieldAttribute("hinge constraints*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("hinge_constraints_block", 64, typeof(HingeConstraintsBlock))]
        public TagBlock HingeConstraints;
        [Abide.Guerilla.Tags.FieldAttribute("ragdoll constraints*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("ragdoll_constraints_block", 64, typeof(RagdollConstraintsBlock))]
        public TagBlock RagdollConstraints;
        [Abide.Guerilla.Tags.FieldAttribute("regions*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("regions_block", 16, typeof(RegionsBlock))]
        public TagBlock Regions;
        [Abide.Guerilla.Tags.FieldAttribute("nodes*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("nodes_block", 255, typeof(NodesBlock))]
        public TagBlock Nodes;
        [Abide.Guerilla.Tags.FieldAttribute("import info*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("import info", 1, typeof(GlobalTagImportInfoBlock))]
        public TagBlock ImportInfo;
        [Abide.Guerilla.Tags.FieldAttribute("errors*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("error report category", 64, typeof(GlobalErrorReportCategoriesBlock))]
        public TagBlock Errors;
        [Abide.Guerilla.Tags.FieldAttribute("point to path curves*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("point_to_path_curve_block", 64, typeof(PointToPathCurveBlock))]
        public TagBlock PointToPathCurves;
        [Abide.Guerilla.Tags.FieldAttribute("limited hinge constraints*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("limited_hinge_constraints_block", 64, typeof(LimitedHingeConstraintsBlock))]
        public TagBlock LimitedHingeConstraints;
        [Abide.Guerilla.Tags.FieldAttribute("ball and socket constraints*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("ball_and_socket_constraints_block", 64, typeof(BallAndSocketConstraintsBlock))]
        public TagBlock BallAndSocketConstraints;
        [Abide.Guerilla.Tags.FieldAttribute("stiff spring constraints*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("stiff_spring_constraints_block", 64, typeof(StiffSpringConstraintsBlock))]
        public TagBlock StiffSpringConstraints;
        [Abide.Guerilla.Tags.FieldAttribute("prismatic constraints*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("prismatic_constraints_block", 64, typeof(PrismaticConstraintsBlock))]
        public TagBlock PrismaticConstraints;
        [Abide.Guerilla.Tags.FieldAttribute("phantoms*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("phantoms_block", 1024, typeof(PhantomsBlock))]
        public TagBlock Phantoms;
        public int Size
        {
            get
            {
                return 396;
            }
        }
        public void Initialize()
        {
        }
        public void Read(System.IO.BinaryReader reader)
        {
        }
        public void Write(System.IO.BinaryWriter writer)
        {
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(104, 4)]
        public sealed class PhantomTypesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("flags", typeof(Int32))]
            [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
            public Int32 Flags;
            [Abide.Guerilla.Tags.FieldAttribute("minimum size", typeof(Byte))]
            [Abide.Guerilla.Tags.OptionsAttribute(typeof(MinimumSizeOptions), false)]
            public Byte MinimumSize;
            [Abide.Guerilla.Tags.FieldAttribute("maximum size", typeof(Byte))]
            [Abide.Guerilla.Tags.OptionsAttribute(typeof(MaximumSizeOptions), false)]
            public Byte MaximumSize;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(2)]
            public Byte[] EmptyString;
            [Abide.Guerilla.Tags.FieldAttribute("marker name#you don\'t need this if you\'re just generating effects.  If empty it d" +
                "efaults to the up of the object", typeof(StringId))]
            public StringId MarkerName;
            [Abide.Guerilla.Tags.FieldAttribute("alignment marker name#you don\'t need this if you\'re just generating effects.  If " +
                "empty it defaults to \"marker name\"", typeof(StringId))]
            public StringId AlignmentMarkerName;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(8)]
            public Byte[] EmptyString1;
            [Abide.Guerilla.Tags.FieldAttribute("hookes law e#0 if you don\'t want this to behave like spring.  1 is a good startin" +
                "g point if you do.", typeof(Single))]
            public Single HookesLawE;
            [Abide.Guerilla.Tags.FieldAttribute("linear dead radius#radius from linear motion origin in which acceleration is dead" +
                ".", typeof(Single))]
            public Single LinearDeadRadius;
            [Abide.Guerilla.Tags.FieldAttribute("center acc", typeof(Single))]
            public Single CenterAcc;
            [Abide.Guerilla.Tags.FieldAttribute("center max vel", typeof(Single))]
            public Single CenterMaxVel;
            [Abide.Guerilla.Tags.FieldAttribute("axis acc", typeof(Single))]
            public Single AxisAcc;
            [Abide.Guerilla.Tags.FieldAttribute("axis max vel", typeof(Single))]
            public Single AxisMaxVel;
            [Abide.Guerilla.Tags.FieldAttribute("direction acc", typeof(Single))]
            public Single DirectionAcc;
            [Abide.Guerilla.Tags.FieldAttribute("direction max vel", typeof(Single))]
            public Single DirectionMaxVel;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(28)]
            public Byte[] EmptyString2;
            [Abide.Guerilla.Tags.FieldAttribute("alignment hookes law e#0 if you don\'t want this to behave like spring.  1 is a go" +
                "od starting point if you do.", typeof(Single))]
            public Single AlignmentHookesLawE;
            [Abide.Guerilla.Tags.FieldAttribute("alignment acc", typeof(Single))]
            public Single AlignmentAcc;
            [Abide.Guerilla.Tags.FieldAttribute("alignment max vel", typeof(Single))]
            public Single AlignmentMaxVel;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(8)]
            public Byte[] EmptyString3;
            public int Size
            {
                get
                {
                    return 104;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            public enum FlagsOptions
            {
                GeneratesEffects = 1,
                UseAccAsForce = 2,
                NegatesGravity = 4,
                IgnoresPlayers = 8,
                IgnoresNonplayers = 16,
                IgnoresBipeds = 32,
                IgnoresVehicles = 64,
                IgnoresWeapons = 128,
                IgnoresEquipment = 256,
                IgnoresGarbage = 512,
                IgnoresProjectiles = 1024,
                IgnoresScenery = 2048,
                IgnoresMachines = 4096,
                IgnoresControls = 8192,
                IgnoresLightFixtures = 16384,
                IgnoresSoundScenery = 32768,
                IgnoresCrates = 65536,
                IgnoresCreatures = 131072,
                EmptyString = 262144,
                EmptyString1 = 524288,
                EmptyString2 = 1048576,
                EmptyString3 = 2097152,
                EmptyString4 = 4194304,
                EmptyString5 = 8388608,
                LocalizesPhysics = 16777216,
                DisableLinearDamping = 33554432,
                DisableAngularDamping = 67108864,
                IgnoresDeadBipeds = 134217728,
            }
            public enum MinimumSizeOptions
            {
                Default = 0,
                Tiny = 1,
                Small = 2,
                Medium = 3,
                Large = 4,
                Huge = 5,
                ExtraHuge = 6,
            }
            public enum MaximumSizeOptions
            {
                Default = 0,
                Tiny = 1,
                Small = 2,
                Medium = 3,
                Large = 4,
                Huge = 5,
                ExtraHuge = 6,
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(28, 4)]
        public sealed class PhysicsModelNodeConstraintEdgeBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString;
            [Abide.Guerilla.Tags.FieldAttribute("node a*", typeof(Int16))]
            public Int16 NodeA;
            [Abide.Guerilla.Tags.FieldAttribute("node b*", typeof(Int16))]
            public Int16 NodeB;
            [Abide.Guerilla.Tags.FieldAttribute("constraints*", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("physics_model_constraint_edge_constraint_block", 64, typeof(PhysicsModelConstraintEdgeConstraintBlock))]
            public TagBlock Constraints;
            [Abide.Guerilla.Tags.FieldAttribute("node a material#if you don\'t fill this out we will pluck the material from the fi" +
                "rst primitive, of the first rigid body attached to node a", typeof(StringId))]
            public StringId NodeAMaterial;
            [Abide.Guerilla.Tags.FieldAttribute("node b material#if you don\'t fill this out we will pluck the material from the fi" +
                "rst primitive, of the first rigid body attached to node b, if node b is none we " +
                "use whatever material a has", typeof(StringId))]
            public StringId NodeBMaterial;
            public int Size
            {
                get
                {
                    return 28;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(12, 4)]
            public sealed class PhysicsModelConstraintEdgeConstraintBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("type*", typeof(Int16))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(TypeOptions), false)]
                public Int16 Type;
                [Abide.Guerilla.Tags.FieldAttribute("index*", typeof(Int16))]
                public Int16 Index;
                [Abide.Guerilla.Tags.FieldAttribute("flags", typeof(Int32))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
                public Int32 Flags;
                [Abide.Guerilla.Tags.FieldAttribute("friction#0 is the default (takes what it was set in max) anything else overrides " +
                    "that value", typeof(Single))]
                public Single Friction;
                public int Size
                {
                    get
                    {
                        return 12;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                public enum TypeOptions
                {
                    Hinge = 0,
                    LimitedHinge = 1,
                    Ragdoll = 2,
                    StiffSpring = 3,
                    BallAndSocket = 4,
                    Prismatic = 5,
                }
                public enum FlagsOptions
                {
                    IsRigid = 1,
                    DisableEffects = 2,
                }
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(144, 16)]
        public sealed class RigidBodiesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("node*", typeof(Int16))]
            public Int16 Node;
            [Abide.Guerilla.Tags.FieldAttribute("region*", typeof(Int16))]
            public Int16 Region;
            [Abide.Guerilla.Tags.FieldAttribute("permutattion*", typeof(Int16))]
            public Int16 Permutattion;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(2)]
            public Byte[] EmptyString;
            [Abide.Guerilla.Tags.FieldAttribute("bouding sphere offset*", typeof(Vector3))]
            public Vector3 BoudingSphereOffset;
            [Abide.Guerilla.Tags.FieldAttribute("bounding sphere radius*", typeof(Single))]
            public Single BoundingSphereRadius;
            [Abide.Guerilla.Tags.FieldAttribute("flags", typeof(Int16))]
            [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
            public Int16 Flags;
            [Abide.Guerilla.Tags.FieldAttribute("motion type", typeof(Int16))]
            [Abide.Guerilla.Tags.OptionsAttribute(typeof(MotionTypeOptions), false)]
            public Int16 MotionType;
            [Abide.Guerilla.Tags.FieldAttribute("no phantom power alt", typeof(Int16))]
            public Int16 NoPhantomPowerAlt;
            [Abide.Guerilla.Tags.FieldAttribute("size", typeof(Int16))]
            [Abide.Guerilla.Tags.OptionsAttribute(typeof(SizeOptions), false)]
            public Int16 Size1;
            [Abide.Guerilla.Tags.FieldAttribute("inertia tensor scale#0.0 defaults to 1.0", typeof(Single))]
            public Single InertiaTensorScale;
            [Abide.Guerilla.Tags.FieldAttribute("linear damping#this goes from 0-10 (10 is really, really high)", typeof(Single))]
            public Single LinearDamping;
            [Abide.Guerilla.Tags.FieldAttribute("angular damping#this goes from 0-10 (10 is really, really high)", typeof(Single))]
            public Single AngularDamping;
            [Abide.Guerilla.Tags.FieldAttribute("center off mass offset", typeof(Vector3))]
            public Vector3 CenterOffMassOffset;
            [Abide.Guerilla.Tags.FieldAttribute("shape type*", typeof(Int16))]
            [Abide.Guerilla.Tags.OptionsAttribute(typeof(ShapeTypeOptions), false)]
            public Int16 ShapeType;
            [Abide.Guerilla.Tags.FieldAttribute("shape*", typeof(Int16))]
            public Int16 Shape;
            [Abide.Guerilla.Tags.FieldAttribute("mass:kg*", typeof(Single))]
            public Single Mass;
            [Abide.Guerilla.Tags.FieldAttribute("center of mass*", typeof(Vector3))]
            public Vector3 CenterOfMass;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString1;
            [Abide.Guerilla.Tags.FieldAttribute("intertia tensor x*", typeof(Vector3))]
            public Vector3 IntertiaTensorX;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString2;
            [Abide.Guerilla.Tags.FieldAttribute("intertia tensor y*", typeof(Vector3))]
            public Vector3 IntertiaTensorY;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString3;
            [Abide.Guerilla.Tags.FieldAttribute("intertia tensor z*", typeof(Vector3))]
            public Vector3 IntertiaTensorZ;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString4;
            [Abide.Guerilla.Tags.FieldAttribute("bounding sphere pad#the bounding sphere for this rigid body will be outset by thi" +
                "s much", typeof(Single))]
            public Single BoundingSpherePad;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(12)]
            public Byte[] EmptyString5;
            public int Size
            {
                get
                {
                    return 144;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            public enum FlagsOptions
            {
                NoCollisionsWself = 1,
                OnlyCollideWenv = 2,
                DisableEffects = 4,
                DoesNotInteractWenvironment = 8,
                BestEarlyMoverBody = 16,
                HasNoPhantomPowerVersion = 32,
            }
            public enum MotionTypeOptions
            {
                Sphere = 0,
                StabilizedSphere = 1,
                Box = 2,
                StabilizedBox = 3,
                Keyframed = 4,
                Fixed = 5,
            }
            public enum SizeOptions
            {
                Default = 0,
                Tiny = 1,
                Small = 2,
                Medium = 3,
                Large = 4,
                Huge = 5,
                ExtraHuge = 6,
            }
            public enum ShapeTypeOptions
            {
                Sphere = 0,
                Pill = 1,
                Box = 2,
                Triangle = 3,
                Polyhedron = 4,
                MultiSphere = 5,
                Unused0 = 6,
                Unused1 = 7,
                Unused2 = 8,
                Unused3 = 9,
                Unused4 = 10,
                Unused5 = 11,
                Unused6 = 12,
                Unused7 = 13,
                List = 14,
                Mopp = 15,
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(12, 4)]
        public sealed class MaterialsBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("name^*", typeof(StringId))]
            public StringId Name;
            [Abide.Guerilla.Tags.FieldAttribute("global material name", typeof(StringId))]
            public StringId GlobalMaterialName;
            [Abide.Guerilla.Tags.FieldAttribute("phantom type", typeof(Int16))]
            public Int16 PhantomType;
            [Abide.Guerilla.Tags.FieldAttribute("flags", typeof(Int16))]
            [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
            public Int16 Flags;
            public int Size
            {
                get
                {
                    return 12;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            public enum FlagsOptions
            {
                DoesNotCollideWithFixedBodies = 1,
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(128, 16)]
        public sealed class SpheresBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("name^*", typeof(StringId))]
            public StringId Name;
            [Abide.Guerilla.Tags.FieldAttribute("material*", typeof(Int16))]
            public Int16 Material;
            [Abide.Guerilla.Tags.FieldAttribute("flags", typeof(Int16))]
            [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
            public Int16 Flags;
            [Abide.Guerilla.Tags.FieldAttribute("relative mass scale", typeof(Single))]
            public Single RelativeMassScale;
            [Abide.Guerilla.Tags.FieldAttribute("friction", typeof(Single))]
            public Single Friction;
            [Abide.Guerilla.Tags.FieldAttribute("restitution", typeof(Single))]
            public Single Restitution;
            [Abide.Guerilla.Tags.FieldAttribute("volume *", typeof(Single))]
            public Single Volume;
            [Abide.Guerilla.Tags.FieldAttribute("mass*", typeof(Single))]
            public Single Mass;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(2)]
            public Byte[] EmptyString;
            [Abide.Guerilla.Tags.FieldAttribute("phantom*", typeof(Int16))]
            public Int16 Phantom;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString1;
            [Abide.Guerilla.Tags.FieldAttribute("size*", typeof(Int16))]
            public Int16 Size1;
            [Abide.Guerilla.Tags.FieldAttribute("count*", typeof(Int16))]
            public Int16 Count;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString2;
            [Abide.Guerilla.Tags.FieldAttribute("radius*", typeof(Single))]
            public Single Radius;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString3;
            [Abide.Guerilla.Tags.FieldAttribute("size*", typeof(Int16))]
            public Int16 Size2;
            [Abide.Guerilla.Tags.FieldAttribute("count*", typeof(Int16))]
            public Int16 Count1;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString4;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString5;
            [Abide.Guerilla.Tags.FieldAttribute("rotation i*", typeof(Vector3))]
            public Vector3 RotationI;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString6;
            [Abide.Guerilla.Tags.FieldAttribute("rotation j*", typeof(Vector3))]
            public Vector3 RotationJ;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString7;
            [Abide.Guerilla.Tags.FieldAttribute("rotation k*", typeof(Vector3))]
            public Vector3 RotationK;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString8;
            [Abide.Guerilla.Tags.FieldAttribute("translation*", typeof(Vector3))]
            public Vector3 Translation;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString9;
            public int Size
            {
                get
                {
                    return 128;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            public enum FlagsOptions
            {
                Unused = 1,
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(176, 16)]
        public sealed class MultiSpheresBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("name^*", typeof(StringId))]
            public StringId Name;
            [Abide.Guerilla.Tags.FieldAttribute("material*", typeof(Int16))]
            public Int16 Material;
            [Abide.Guerilla.Tags.FieldAttribute("flags", typeof(Int16))]
            [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
            public Int16 Flags;
            [Abide.Guerilla.Tags.FieldAttribute("relative mass scale", typeof(Single))]
            public Single RelativeMassScale;
            [Abide.Guerilla.Tags.FieldAttribute("friction", typeof(Single))]
            public Single Friction;
            [Abide.Guerilla.Tags.FieldAttribute("restitution", typeof(Single))]
            public Single Restitution;
            [Abide.Guerilla.Tags.FieldAttribute("volume *", typeof(Single))]
            public Single Volume;
            [Abide.Guerilla.Tags.FieldAttribute("mass*", typeof(Single))]
            public Single Mass;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(2)]
            public Byte[] EmptyString;
            [Abide.Guerilla.Tags.FieldAttribute("phantom*", typeof(Int16))]
            public Int16 Phantom;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString1;
            [Abide.Guerilla.Tags.FieldAttribute("size*", typeof(Int16))]
            public Int16 Size1;
            [Abide.Guerilla.Tags.FieldAttribute("count*", typeof(Int16))]
            public Int16 Count;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString2;
            [Abide.Guerilla.Tags.FieldAttribute("num spheres*", typeof(Int32))]
            public Int32 NumSpheres;
            [Abide.Guerilla.Tags.FieldAttribute("four vectors storage*", typeof(FourVectorsStorageElement[]))]
            [Abide.Guerilla.Tags.ArrayAttribute(8, typeof(FourVectorsStorageElement))]
            public FourVectorsStorageElement[] FourVectorsStorage;
            public int Size
            {
                get
                {
                    return 176;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            public sealed class FourVectorsStorageElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("sphere*", typeof(Vector3))]
                public Vector3 Sphere;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(4)]
                public Byte[] EmptyString;
                public int Size
                {
                    get
                    {
                        return 0;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
            public enum FlagsOptions
            {
                Unused = 1,
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(80, 16)]
        public sealed class PillsBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("name^*", typeof(StringId))]
            public StringId Name;
            [Abide.Guerilla.Tags.FieldAttribute("material*", typeof(Int16))]
            public Int16 Material;
            [Abide.Guerilla.Tags.FieldAttribute("flags", typeof(Int16))]
            [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
            public Int16 Flags;
            [Abide.Guerilla.Tags.FieldAttribute("relative mass scale", typeof(Single))]
            public Single RelativeMassScale;
            [Abide.Guerilla.Tags.FieldAttribute("friction", typeof(Single))]
            public Single Friction;
            [Abide.Guerilla.Tags.FieldAttribute("restitution", typeof(Single))]
            public Single Restitution;
            [Abide.Guerilla.Tags.FieldAttribute("volume *", typeof(Single))]
            public Single Volume;
            [Abide.Guerilla.Tags.FieldAttribute("mass*", typeof(Single))]
            public Single Mass;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(2)]
            public Byte[] EmptyString;
            [Abide.Guerilla.Tags.FieldAttribute("phantom*", typeof(Int16))]
            public Int16 Phantom;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString1;
            [Abide.Guerilla.Tags.FieldAttribute("size*", typeof(Int16))]
            public Int16 Size1;
            [Abide.Guerilla.Tags.FieldAttribute("count*", typeof(Int16))]
            public Int16 Count;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString2;
            [Abide.Guerilla.Tags.FieldAttribute("radius*", typeof(Single))]
            public Single Radius;
            [Abide.Guerilla.Tags.FieldAttribute("bottom*", typeof(Vector3))]
            public Vector3 Bottom;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString3;
            [Abide.Guerilla.Tags.FieldAttribute("top*", typeof(Vector3))]
            public Vector3 Top;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString4;
            public int Size
            {
                get
                {
                    return 80;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            public enum FlagsOptions
            {
                Unused = 1,
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(144, 16)]
        public sealed class BoxesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("name^*", typeof(StringId))]
            public StringId Name;
            [Abide.Guerilla.Tags.FieldAttribute("material*", typeof(Int16))]
            public Int16 Material;
            [Abide.Guerilla.Tags.FieldAttribute("flags", typeof(Int16))]
            [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
            public Int16 Flags;
            [Abide.Guerilla.Tags.FieldAttribute("relative mass scale", typeof(Single))]
            public Single RelativeMassScale;
            [Abide.Guerilla.Tags.FieldAttribute("friction", typeof(Single))]
            public Single Friction;
            [Abide.Guerilla.Tags.FieldAttribute("restitution", typeof(Single))]
            public Single Restitution;
            [Abide.Guerilla.Tags.FieldAttribute("volume *", typeof(Single))]
            public Single Volume;
            [Abide.Guerilla.Tags.FieldAttribute("mass*", typeof(Single))]
            public Single Mass;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(2)]
            public Byte[] EmptyString;
            [Abide.Guerilla.Tags.FieldAttribute("phantom*", typeof(Int16))]
            public Int16 Phantom;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString1;
            [Abide.Guerilla.Tags.FieldAttribute("size*", typeof(Int16))]
            public Int16 Size1;
            [Abide.Guerilla.Tags.FieldAttribute("count*", typeof(Int16))]
            public Int16 Count;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString2;
            [Abide.Guerilla.Tags.FieldAttribute("radius*", typeof(Single))]
            public Single Radius;
            [Abide.Guerilla.Tags.FieldAttribute("half extents*", typeof(Vector3))]
            public Vector3 HalfExtents;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString3;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString4;
            [Abide.Guerilla.Tags.FieldAttribute("size*", typeof(Int16))]
            public Int16 Size2;
            [Abide.Guerilla.Tags.FieldAttribute("count*", typeof(Int16))]
            public Int16 Count1;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString5;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString6;
            [Abide.Guerilla.Tags.FieldAttribute("rotation i*", typeof(Vector3))]
            public Vector3 RotationI;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString7;
            [Abide.Guerilla.Tags.FieldAttribute("rotation j*", typeof(Vector3))]
            public Vector3 RotationJ;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString8;
            [Abide.Guerilla.Tags.FieldAttribute("rotation k*", typeof(Vector3))]
            public Vector3 RotationK;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString9;
            [Abide.Guerilla.Tags.FieldAttribute("translation*", typeof(Vector3))]
            public Vector3 Translation;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString10;
            public int Size
            {
                get
                {
                    return 144;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            public enum FlagsOptions
            {
                Unused = 1,
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(96, 16)]
        public sealed class TrianglesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("name^*", typeof(StringId))]
            public StringId Name;
            [Abide.Guerilla.Tags.FieldAttribute("material*", typeof(Int16))]
            public Int16 Material;
            [Abide.Guerilla.Tags.FieldAttribute("flags", typeof(Int16))]
            [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
            public Int16 Flags;
            [Abide.Guerilla.Tags.FieldAttribute("relative mass scale", typeof(Single))]
            public Single RelativeMassScale;
            [Abide.Guerilla.Tags.FieldAttribute("friction", typeof(Single))]
            public Single Friction;
            [Abide.Guerilla.Tags.FieldAttribute("restitution", typeof(Single))]
            public Single Restitution;
            [Abide.Guerilla.Tags.FieldAttribute("volume *", typeof(Single))]
            public Single Volume;
            [Abide.Guerilla.Tags.FieldAttribute("mass*", typeof(Single))]
            public Single Mass;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(2)]
            public Byte[] EmptyString;
            [Abide.Guerilla.Tags.FieldAttribute("phantom*", typeof(Int16))]
            public Int16 Phantom;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString1;
            [Abide.Guerilla.Tags.FieldAttribute("size*", typeof(Int16))]
            public Int16 Size1;
            [Abide.Guerilla.Tags.FieldAttribute("count*", typeof(Int16))]
            public Int16 Count;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString2;
            [Abide.Guerilla.Tags.FieldAttribute("radius*", typeof(Single))]
            public Single Radius;
            [Abide.Guerilla.Tags.FieldAttribute("point a*", typeof(Vector3))]
            public Vector3 PointA;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString3;
            [Abide.Guerilla.Tags.FieldAttribute("point b*", typeof(Vector3))]
            public Vector3 PointB;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString4;
            [Abide.Guerilla.Tags.FieldAttribute("point c*", typeof(Vector3))]
            public Vector3 PointC;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString5;
            public int Size
            {
                get
                {
                    return 96;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            public enum FlagsOptions
            {
                Unused = 1,
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(256, 16)]
        public sealed class PolyhedraBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("name^*", typeof(StringId))]
            public StringId Name;
            [Abide.Guerilla.Tags.FieldAttribute("material*", typeof(Int16))]
            public Int16 Material;
            [Abide.Guerilla.Tags.FieldAttribute("flags", typeof(Int16))]
            [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
            public Int16 Flags;
            [Abide.Guerilla.Tags.FieldAttribute("relative mass scale", typeof(Single))]
            public Single RelativeMassScale;
            [Abide.Guerilla.Tags.FieldAttribute("friction", typeof(Single))]
            public Single Friction;
            [Abide.Guerilla.Tags.FieldAttribute("restitution", typeof(Single))]
            public Single Restitution;
            [Abide.Guerilla.Tags.FieldAttribute("volume *", typeof(Single))]
            public Single Volume;
            [Abide.Guerilla.Tags.FieldAttribute("mass*", typeof(Single))]
            public Single Mass;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(2)]
            public Byte[] EmptyString;
            [Abide.Guerilla.Tags.FieldAttribute("phantom*", typeof(Int16))]
            public Int16 Phantom;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString1;
            [Abide.Guerilla.Tags.FieldAttribute("size*", typeof(Int16))]
            public Int16 Size1;
            [Abide.Guerilla.Tags.FieldAttribute("count*", typeof(Int16))]
            public Int16 Count;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString2;
            [Abide.Guerilla.Tags.FieldAttribute("radius*", typeof(Single))]
            public Single Radius;
            [Abide.Guerilla.Tags.FieldAttribute("aabb half extents*", typeof(Vector3))]
            public Vector3 AabbHalfExtents;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString3;
            [Abide.Guerilla.Tags.FieldAttribute("aabb center*", typeof(Vector3))]
            public Vector3 AabbCenter;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString4;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString5;
            [Abide.Guerilla.Tags.FieldAttribute("four vectors size*", typeof(Int32))]
            public Int32 FourVectorsSize;
            [Abide.Guerilla.Tags.FieldAttribute("four vectors capacity*", typeof(Int32))]
            public Int32 FourVectorsCapacity;
            [Abide.Guerilla.Tags.FieldAttribute("num vertices*", typeof(Int32))]
            public Int32 NumVertices;
            [Abide.Guerilla.Tags.FieldAttribute("four vectors storage*", typeof(FourVectorsStorageElement[]))]
            [Abide.Guerilla.Tags.ArrayAttribute(3, typeof(FourVectorsStorageElement))]
            public FourVectorsStorageElement[] FourVectorsStorage;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString6;
            [Abide.Guerilla.Tags.FieldAttribute("plane equations size*", typeof(Int32))]
            public Int32 PlaneEquationsSize;
            [Abide.Guerilla.Tags.FieldAttribute("plane equations capacity*", typeof(Int32))]
            public Int32 PlaneEquationsCapacity;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString7;
            public int Size
            {
                get
                {
                    return 256;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            public sealed class FourVectorsStorageElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("four vectors x*", typeof(Vector3))]
                public Vector3 FourVectorsX;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(4)]
                public Byte[] EmptyString;
                [Abide.Guerilla.Tags.FieldAttribute("four vectors y*", typeof(Vector3))]
                public Vector3 FourVectorsY;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(4)]
                public Byte[] EmptyString1;
                [Abide.Guerilla.Tags.FieldAttribute("four vectors z*", typeof(Vector3))]
                public Vector3 FourVectorsZ;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(4)]
                public Byte[] EmptyString2;
                public int Size
                {
                    get
                    {
                        return 0;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
            public enum FlagsOptions
            {
                Unused = 1,
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(48, 16)]
        public sealed class PolyhedronFourVectorsBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("four vectors x*", typeof(Vector3))]
            public Vector3 FourVectorsX;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString;
            [Abide.Guerilla.Tags.FieldAttribute("four vectors y*", typeof(Vector3))]
            public Vector3 FourVectorsY;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString1;
            [Abide.Guerilla.Tags.FieldAttribute("four vectors z*", typeof(Vector3))]
            public Vector3 FourVectorsZ;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString2;
            public int Size
            {
                get
                {
                    return 48;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(16, 16)]
        public sealed class PolyhedronPlaneEquationsBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(16)]
            public Byte[] EmptyString;
            public int Size
            {
                get
                {
                    return 16;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(64, 16)]
        public sealed class MassDistributionsBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("center of mass*", typeof(Vector3))]
            public Vector3 CenterOfMass;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString;
            [Abide.Guerilla.Tags.FieldAttribute("inertia tensor i*", typeof(Vector3))]
            public Vector3 InertiaTensorI;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString1;
            [Abide.Guerilla.Tags.FieldAttribute("inertia tensor j*", typeof(Vector3))]
            public Vector3 InertiaTensorJ;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString2;
            [Abide.Guerilla.Tags.FieldAttribute("inertia tensor k*", typeof(Vector3))]
            public Vector3 InertiaTensorK;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString3;
            public int Size
            {
                get
                {
                    return 64;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(56, 4)]
        public sealed class ListsBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString;
            [Abide.Guerilla.Tags.FieldAttribute("size*", typeof(Int16))]
            public Int16 Size1;
            [Abide.Guerilla.Tags.FieldAttribute("count*", typeof(Int16))]
            public Int16 Count;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString1;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString2;
            [Abide.Guerilla.Tags.FieldAttribute("child shapes size*", typeof(Int32))]
            public Int32 ChildShapesSize;
            [Abide.Guerilla.Tags.FieldAttribute("child shapes capacity*", typeof(Int32))]
            public Int32 ChildShapesCapacity;
            [Abide.Guerilla.Tags.FieldAttribute("child shapes storage*", typeof(ChildShapesStorageElement[]))]
            [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(ChildShapesStorageElement))]
            public ChildShapesStorageElement[] ChildShapesStorage;
            public int Size
            {
                get
                {
                    return 56;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            public sealed class ChildShapesStorageElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("shape type*", typeof(Int16))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(ShapeTypeOptions), false)]
                public Int16 ShapeType;
                [Abide.Guerilla.Tags.FieldAttribute("shape*", typeof(Int16))]
                public Int16 Shape;
                [Abide.Guerilla.Tags.FieldAttribute("collision filter*", typeof(Int32))]
                public Int32 CollisionFilter;
                public int Size
                {
                    get
                    {
                        return 0;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                public enum ShapeTypeOptions
                {
                    Sphere = 0,
                    Pill = 1,
                    Box = 2,
                    Triangle = 3,
                    Polyhedron = 4,
                    MultiSphere = 5,
                    Unused0 = 6,
                    Unused1 = 7,
                    Unused2 = 8,
                    Unused3 = 9,
                    Unused4 = 10,
                    Unused5 = 11,
                    Unused6 = 12,
                    Unused7 = 13,
                    List = 14,
                    Mopp = 15,
                }
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(8, 4)]
        public sealed class ListShapesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("shape type*", typeof(Int16))]
            [Abide.Guerilla.Tags.OptionsAttribute(typeof(ShapeTypeOptions), false)]
            public Int16 ShapeType;
            [Abide.Guerilla.Tags.FieldAttribute("shape*", typeof(Int16))]
            public Int16 Shape;
            [Abide.Guerilla.Tags.FieldAttribute("collision filter*", typeof(Int32))]
            public Int32 CollisionFilter;
            public int Size
            {
                get
                {
                    return 8;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            public enum ShapeTypeOptions
            {
                Sphere = 0,
                Pill = 1,
                Box = 2,
                Triangle = 3,
                Polyhedron = 4,
                MultiSphere = 5,
                Unused0 = 6,
                Unused1 = 7,
                Unused2 = 8,
                Unused3 = 9,
                Unused4 = 10,
                Unused5 = 11,
                Unused6 = 12,
                Unused7 = 13,
                List = 14,
                Mopp = 15,
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(20, 4)]
        public sealed class MoppsBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString;
            [Abide.Guerilla.Tags.FieldAttribute("size*", typeof(Int16))]
            public Int16 Size1;
            [Abide.Guerilla.Tags.FieldAttribute("count*", typeof(Int16))]
            public Int16 Count;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString1;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(2)]
            public Byte[] EmptyString2;
            [Abide.Guerilla.Tags.FieldAttribute("list*", typeof(Int16))]
            public Int16 List;
            [Abide.Guerilla.Tags.FieldAttribute("code offset", typeof(Int32))]
            public Int32 CodeOffset;
            public int Size
            {
                get
                {
                    return 20;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(120, 4)]
        public sealed class HingeConstraintsBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("constraint bodies*", typeof(ConstraintBodiesStructBlock))]
            public ConstraintBodiesStructBlock ConstraintBodies;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString;
            public int Size
            {
                get
                {
                    return 120;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(116, 4)]
            public sealed class ConstraintBodiesStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("name^*", typeof(StringId))]
                public StringId Name;
                [Abide.Guerilla.Tags.FieldAttribute("node a*", typeof(Int16))]
                public Int16 NodeA;
                [Abide.Guerilla.Tags.FieldAttribute("node b*", typeof(Int16))]
                public Int16 NodeB;
                [Abide.Guerilla.Tags.FieldAttribute("a scale*", typeof(Single))]
                public Single AScale;
                [Abide.Guerilla.Tags.FieldAttribute("a forward*", typeof(Vector3))]
                public Vector3 AForward;
                [Abide.Guerilla.Tags.FieldAttribute("a left*", typeof(Vector3))]
                public Vector3 ALeft;
                [Abide.Guerilla.Tags.FieldAttribute("a up*", typeof(Vector3))]
                public Vector3 AUp;
                [Abide.Guerilla.Tags.FieldAttribute("a position*", typeof(Vector3))]
                public Vector3 APosition;
                [Abide.Guerilla.Tags.FieldAttribute("b scale*", typeof(Single))]
                public Single BScale;
                [Abide.Guerilla.Tags.FieldAttribute("b forward*", typeof(Vector3))]
                public Vector3 BForward;
                [Abide.Guerilla.Tags.FieldAttribute("b left*", typeof(Vector3))]
                public Vector3 BLeft;
                [Abide.Guerilla.Tags.FieldAttribute("b up*", typeof(Vector3))]
                public Vector3 BUp;
                [Abide.Guerilla.Tags.FieldAttribute("b position*", typeof(Vector3))]
                public Vector3 BPosition;
                [Abide.Guerilla.Tags.FieldAttribute("edge index*", typeof(Int16))]
                public Int16 EdgeIndex;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(2)]
                public Byte[] EmptyString;
                public int Size
                {
                    get
                    {
                        return 116;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(148, 4)]
        public sealed class RagdollConstraintsBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("constraint bodies*", typeof(ConstraintBodiesStructBlock))]
            public ConstraintBodiesStructBlock ConstraintBodies;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString;
            [Abide.Guerilla.Tags.FieldAttribute("min twist*", typeof(Single))]
            public Single MinTwist;
            [Abide.Guerilla.Tags.FieldAttribute("max twist*", typeof(Single))]
            public Single MaxTwist;
            [Abide.Guerilla.Tags.FieldAttribute("min cone*", typeof(Single))]
            public Single MinCone;
            [Abide.Guerilla.Tags.FieldAttribute("max cone*", typeof(Single))]
            public Single MaxCone;
            [Abide.Guerilla.Tags.FieldAttribute("min plane*", typeof(Single))]
            public Single MinPlane;
            [Abide.Guerilla.Tags.FieldAttribute("max plane*", typeof(Single))]
            public Single MaxPlane;
            [Abide.Guerilla.Tags.FieldAttribute("max friciton torque*", typeof(Single))]
            public Single MaxFricitonTorque;
            public int Size
            {
                get
                {
                    return 148;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(116, 4)]
            public sealed class ConstraintBodiesStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("name^*", typeof(StringId))]
                public StringId Name;
                [Abide.Guerilla.Tags.FieldAttribute("node a*", typeof(Int16))]
                public Int16 NodeA;
                [Abide.Guerilla.Tags.FieldAttribute("node b*", typeof(Int16))]
                public Int16 NodeB;
                [Abide.Guerilla.Tags.FieldAttribute("a scale*", typeof(Single))]
                public Single AScale;
                [Abide.Guerilla.Tags.FieldAttribute("a forward*", typeof(Vector3))]
                public Vector3 AForward;
                [Abide.Guerilla.Tags.FieldAttribute("a left*", typeof(Vector3))]
                public Vector3 ALeft;
                [Abide.Guerilla.Tags.FieldAttribute("a up*", typeof(Vector3))]
                public Vector3 AUp;
                [Abide.Guerilla.Tags.FieldAttribute("a position*", typeof(Vector3))]
                public Vector3 APosition;
                [Abide.Guerilla.Tags.FieldAttribute("b scale*", typeof(Single))]
                public Single BScale;
                [Abide.Guerilla.Tags.FieldAttribute("b forward*", typeof(Vector3))]
                public Vector3 BForward;
                [Abide.Guerilla.Tags.FieldAttribute("b left*", typeof(Vector3))]
                public Vector3 BLeft;
                [Abide.Guerilla.Tags.FieldAttribute("b up*", typeof(Vector3))]
                public Vector3 BUp;
                [Abide.Guerilla.Tags.FieldAttribute("b position*", typeof(Vector3))]
                public Vector3 BPosition;
                [Abide.Guerilla.Tags.FieldAttribute("edge index*", typeof(Int16))]
                public Int16 EdgeIndex;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(2)]
                public Byte[] EmptyString;
                public int Size
                {
                    get
                    {
                        return 116;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(16, 4)]
        public sealed class RegionsBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("name^*", typeof(StringId))]
            public StringId Name;
            [Abide.Guerilla.Tags.FieldAttribute("permutations", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("permutations_block", 32, typeof(PermutationsBlock))]
            public TagBlock Permutations;
            public int Size
            {
                get
                {
                    return 16;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(16, 4)]
            public sealed class PermutationsBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("name^*", typeof(StringId))]
                public StringId Name;
                [Abide.Guerilla.Tags.FieldAttribute("rigid bodies", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("rigid_body_indices_block", 64, typeof(RigidBodyIndicesBlock))]
                public TagBlock RigidBodies;
                public int Size
                {
                    get
                    {
                        return 16;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(2, 4)]
                public sealed class RigidBodyIndicesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("rigid body^*", typeof(Int16))]
                    public Int16 RigidBody;
                    public int Size
                    {
                        get
                        {
                            return 2;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                }
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(12, 4)]
        public sealed class NodesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("name^*", typeof(StringId))]
            public StringId Name;
            [Abide.Guerilla.Tags.FieldAttribute("flags", typeof(Int16))]
            [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
            public Int16 Flags;
            [Abide.Guerilla.Tags.FieldAttribute("parent*", typeof(Int16))]
            public Int16 Parent;
            [Abide.Guerilla.Tags.FieldAttribute("sibling*", typeof(Int16))]
            public Int16 Sibling;
            [Abide.Guerilla.Tags.FieldAttribute("child*", typeof(Int16))]
            public Int16 Child;
            public int Size
            {
                get
                {
                    return 12;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            public enum FlagsOptions
            {
                DoesNotAnimate = 1,
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(596, 4)]
        public sealed class GlobalTagImportInfoBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("build*", typeof(Int32))]
            public Int32 Build;
            [Abide.Guerilla.Tags.FieldAttribute("version*", typeof(String256))]
            public String256 Version;
            [Abide.Guerilla.Tags.FieldAttribute("import date*", typeof(String32))]
            public String32 ImportDate;
            [Abide.Guerilla.Tags.FieldAttribute("culprit*", typeof(String32))]
            public String32 Culprit;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(96)]
            public Byte[] EmptyString;
            [Abide.Guerilla.Tags.FieldAttribute("import time*", typeof(String32))]
            public String32 ImportTime;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString1;
            [Abide.Guerilla.Tags.FieldAttribute("files*", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("import file", 1024, typeof(TagImportFileBlock))]
            public TagBlock Files;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(128)]
            public Byte[] EmptyString2;
            public int Size
            {
                get
                {
                    return 596;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(540, 4)]
            public sealed class TagImportFileBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("path*", typeof(String256))]
                public String256 Path;
                [Abide.Guerilla.Tags.FieldAttribute("modification date*", typeof(String32))]
                public String32 ModificationDate;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(8)]
                public Byte[] EmptyString;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(88)]
                public Byte[] EmptyString1;
                [Abide.Guerilla.Tags.FieldAttribute("checksum*:crc32", typeof(Int32))]
                public Int32 Checksum;
                [Abide.Guerilla.Tags.FieldAttribute("size*:bytes", typeof(Int32))]
                public Int32 Size1;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(128)]
                public Byte[] EmptyString2;
                public int Size
                {
                    get
                    {
                        return 540;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(680, 4)]
        public sealed class GlobalErrorReportCategoriesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("Name^*", typeof(String256))]
            public String256 Name;
            [Abide.Guerilla.Tags.FieldAttribute("Report Type*", typeof(Int16))]
            [Abide.Guerilla.Tags.OptionsAttribute(typeof(ReportTypeOptions), false)]
            public Int16 ReportType;
            [Abide.Guerilla.Tags.FieldAttribute("Flags*", typeof(Int16))]
            [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
            public Int16 Flags;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(2)]
            public Byte[] EmptyString;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(2)]
            public Byte[] EmptyString1;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(404)]
            public Byte[] EmptyString2;
            [Abide.Guerilla.Tags.FieldAttribute("Reports*", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("error report", 1024, typeof(ErrorReportsBlock))]
            public TagBlock Reports;
            public int Size
            {
                get
                {
                    return 680;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(644, 4)]
            public sealed class ErrorReportsBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("Type*", typeof(Int16))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(TypeOptions), false)]
                public Int16 Type;
                [Abide.Guerilla.Tags.FieldAttribute("Flags*", typeof(Int16))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
                public Int16 Flags;
                [Abide.Guerilla.Tags.FieldAttribute("Source Filename*", typeof(String32))]
                public String32 SourceFilename;
                [Abide.Guerilla.Tags.FieldAttribute("Source Line Number*", typeof(Int32))]
                public Int32 SourceLineNumber;
                [Abide.Guerilla.Tags.FieldAttribute("Vertices*", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("error report vertex", 1024, typeof(ErrorReportVerticesBlock))]
                public TagBlock Vertices;
                [Abide.Guerilla.Tags.FieldAttribute("Vectors*", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("error report vector", 1024, typeof(ErrorReportVectorsBlock))]
                public TagBlock Vectors;
                [Abide.Guerilla.Tags.FieldAttribute("Lines*", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("error report line", 1024, typeof(ErrorReportLinesBlock))]
                public TagBlock Lines;
                [Abide.Guerilla.Tags.FieldAttribute("Triangles*", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("error report triangle", 1024, typeof(ErrorReportTrianglesBlock))]
                public TagBlock Triangles;
                [Abide.Guerilla.Tags.FieldAttribute("Quads*", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("error report quad", 1024, typeof(ErrorReportQuadsBlock))]
                public TagBlock Quads;
                [Abide.Guerilla.Tags.FieldAttribute("Comments*", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("error report comment", 1024, typeof(ErrorReportCommentsBlock))]
                public TagBlock Comments;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(380)]
                public Byte[] EmptyString;
                [Abide.Guerilla.Tags.FieldAttribute("Report Key*", typeof(Int32))]
                public Int32 ReportKey;
                [Abide.Guerilla.Tags.FieldAttribute("Node Index*", typeof(Int32))]
                public Int32 NodeIndex;
                [Abide.Guerilla.Tags.FieldAttribute("Color*", typeof(ColorArgbF))]
                public ColorArgbF Color;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(84)]
                public Byte[] EmptyString1;
                public int Size
                {
                    get
                    {
                        return 644;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(52, 4)]
                public sealed class ErrorReportVerticesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("Position*", typeof(Vector3))]
                    public Vector3 Position;
                    [Abide.Guerilla.Tags.FieldAttribute("Node Indices*", typeof(NodeIndicesElement[]))]
                    [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeIndicesElement))]
                    public NodeIndicesElement[] NodeIndices;
                    [Abide.Guerilla.Tags.FieldAttribute("Node Weights*", typeof(NodeWeightsElement[]))]
                    [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeWeightsElement))]
                    public NodeWeightsElement[] NodeWeights;
                    [Abide.Guerilla.Tags.FieldAttribute("Color*", typeof(ColorArgbF))]
                    public ColorArgbF Color;
                    [Abide.Guerilla.Tags.FieldAttribute("Screen Size*", typeof(Single))]
                    public Single ScreenSize;
                    public int Size
                    {
                        get
                        {
                            return 52;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    public sealed class NodeIndicesElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Node Index*", typeof(Byte))]
                        public Byte NodeIndex;
                        public int Size
                        {
                            get
                            {
                                return 0;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                    public sealed class NodeWeightsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Node Weight*", typeof(Single))]
                        public Single NodeWeight;
                        public int Size
                        {
                            get
                            {
                                return 0;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(64, 4)]
                public sealed class ErrorReportVectorsBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("Position*", typeof(Vector3))]
                    public Vector3 Position;
                    [Abide.Guerilla.Tags.FieldAttribute("Node Indices*", typeof(NodeIndicesElement[]))]
                    [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeIndicesElement))]
                    public NodeIndicesElement[] NodeIndices;
                    [Abide.Guerilla.Tags.FieldAttribute("Node Weights*", typeof(NodeWeightsElement[]))]
                    [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeWeightsElement))]
                    public NodeWeightsElement[] NodeWeights;
                    [Abide.Guerilla.Tags.FieldAttribute("Color*", typeof(ColorArgbF))]
                    public ColorArgbF Color;
                    [Abide.Guerilla.Tags.FieldAttribute("Normal*", typeof(Vector3))]
                    public Vector3 Normal;
                    [Abide.Guerilla.Tags.FieldAttribute("Screen Length*", typeof(Single))]
                    public Single ScreenLength;
                    public int Size
                    {
                        get
                        {
                            return 64;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    public sealed class NodeIndicesElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Node Index*", typeof(Byte))]
                        public Byte NodeIndex;
                        public int Size
                        {
                            get
                            {
                                return 0;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                    public sealed class NodeWeightsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Node Weight*", typeof(Single))]
                        public Single NodeWeight;
                        public int Size
                        {
                            get
                            {
                                return 0;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(80, 4)]
                public sealed class ErrorReportLinesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("Points*", typeof(PointsElement[]))]
                    [Abide.Guerilla.Tags.ArrayAttribute(2, typeof(PointsElement))]
                    public PointsElement[] Points;
                    [Abide.Guerilla.Tags.FieldAttribute("Node Weights*", typeof(NodeWeightsElement[]))]
                    [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeWeightsElement))]
                    public NodeWeightsElement[] NodeWeights;
                    [Abide.Guerilla.Tags.FieldAttribute("Color*", typeof(ColorArgbF))]
                    public ColorArgbF Color;
                    public int Size
                    {
                        get
                        {
                            return 80;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    public sealed class PointsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Position*", typeof(Vector3))]
                        public Vector3 Position;
                        [Abide.Guerilla.Tags.FieldAttribute("Node Indices*", typeof(NodeIndicesElement[]))]
                        [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeIndicesElement))]
                        public NodeIndicesElement[] NodeIndices;
                        [Abide.Guerilla.Tags.FieldAttribute("Node Weights*", typeof(NodeWeightsElement[]))]
                        [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeWeightsElement))]
                        public NodeWeightsElement[] NodeWeights;
                        public int Size
                        {
                            get
                            {
                                return 0;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                        public sealed class NodeIndicesElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("Node Index*", typeof(Byte))]
                            public Byte NodeIndex;
                            public int Size
                            {
                                get
                                {
                                    return 0;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                        }
                        public sealed class NodeWeightsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("Node Weight*", typeof(Single))]
                            public Single NodeWeight;
                            public int Size
                            {
                                get
                                {
                                    return 0;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                        }
                    }
                    public sealed class NodeWeightsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Node Weight*", typeof(Single))]
                        public Single NodeWeight;
                        public int Size
                        {
                            get
                            {
                                return 0;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(112, 4)]
                public sealed class ErrorReportTrianglesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("Points*", typeof(PointsElement[]))]
                    [Abide.Guerilla.Tags.ArrayAttribute(3, typeof(PointsElement))]
                    public PointsElement[] Points;
                    [Abide.Guerilla.Tags.FieldAttribute("Node Weights*", typeof(NodeWeightsElement[]))]
                    [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeWeightsElement))]
                    public NodeWeightsElement[] NodeWeights;
                    [Abide.Guerilla.Tags.FieldAttribute("Color*", typeof(ColorArgbF))]
                    public ColorArgbF Color;
                    public int Size
                    {
                        get
                        {
                            return 112;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    public sealed class PointsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Position*", typeof(Vector3))]
                        public Vector3 Position;
                        [Abide.Guerilla.Tags.FieldAttribute("Node Indices*", typeof(NodeIndicesElement[]))]
                        [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeIndicesElement))]
                        public NodeIndicesElement[] NodeIndices;
                        [Abide.Guerilla.Tags.FieldAttribute("Node Weights*", typeof(NodeWeightsElement[]))]
                        [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeWeightsElement))]
                        public NodeWeightsElement[] NodeWeights;
                        public int Size
                        {
                            get
                            {
                                return 0;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                        public sealed class NodeIndicesElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("Node Index*", typeof(Byte))]
                            public Byte NodeIndex;
                            public int Size
                            {
                                get
                                {
                                    return 0;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                        }
                        public sealed class NodeWeightsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("Node Weight*", typeof(Single))]
                            public Single NodeWeight;
                            public int Size
                            {
                                get
                                {
                                    return 0;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                        }
                    }
                    public sealed class NodeWeightsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Node Weight*", typeof(Single))]
                        public Single NodeWeight;
                        public int Size
                        {
                            get
                            {
                                return 0;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(144, 4)]
                public sealed class ErrorReportQuadsBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("Points*", typeof(PointsElement[]))]
                    [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(PointsElement))]
                    public PointsElement[] Points;
                    [Abide.Guerilla.Tags.FieldAttribute("Node Weights*", typeof(NodeWeightsElement[]))]
                    [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeWeightsElement))]
                    public NodeWeightsElement[] NodeWeights;
                    [Abide.Guerilla.Tags.FieldAttribute("Color*", typeof(ColorArgbF))]
                    public ColorArgbF Color;
                    public int Size
                    {
                        get
                        {
                            return 144;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    public sealed class PointsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Position*", typeof(Vector3))]
                        public Vector3 Position;
                        [Abide.Guerilla.Tags.FieldAttribute("Node Indices*", typeof(NodeIndicesElement[]))]
                        [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeIndicesElement))]
                        public NodeIndicesElement[] NodeIndices;
                        [Abide.Guerilla.Tags.FieldAttribute("Node Weights*", typeof(NodeWeightsElement[]))]
                        [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeWeightsElement))]
                        public NodeWeightsElement[] NodeWeights;
                        public int Size
                        {
                            get
                            {
                                return 0;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                        public sealed class NodeIndicesElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("Node Index*", typeof(Byte))]
                            public Byte NodeIndex;
                            public int Size
                            {
                                get
                                {
                                    return 0;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                        }
                        public sealed class NodeWeightsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("Node Weight*", typeof(Single))]
                            public Single NodeWeight;
                            public int Size
                            {
                                get
                                {
                                    return 0;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                        }
                    }
                    public sealed class NodeWeightsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Node Weight*", typeof(Single))]
                        public Single NodeWeight;
                        public int Size
                        {
                            get
                            {
                                return 0;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(68, 4)]
                public sealed class ErrorReportCommentsBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("Position*", typeof(Vector3))]
                    public Vector3 Position;
                    [Abide.Guerilla.Tags.FieldAttribute("Node Indices*", typeof(NodeIndicesElement[]))]
                    [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeIndicesElement))]
                    public NodeIndicesElement[] NodeIndices;
                    [Abide.Guerilla.Tags.FieldAttribute("Node Weights*", typeof(NodeWeightsElement[]))]
                    [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeWeightsElement))]
                    public NodeWeightsElement[] NodeWeights;
                    [Abide.Guerilla.Tags.FieldAttribute("Color*", typeof(ColorArgbF))]
                    public ColorArgbF Color;
                    public int Size
                    {
                        get
                        {
                            return 68;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    public sealed class NodeIndicesElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Node Index*", typeof(Byte))]
                        public Byte NodeIndex;
                        public int Size
                        {
                            get
                            {
                                return 0;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                    public sealed class NodeWeightsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Node Weight*", typeof(Single))]
                        public Single NodeWeight;
                        public int Size
                        {
                            get
                            {
                                return 0;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                }
                public enum TypeOptions
                {
                    Silent = 0,
                    Comment = 1,
                    Warning = 2,
                    Error = 3,
                }
                public enum FlagsOptions
                {
                    Rendered = 1,
                    TangentSpace = 2,
                    Noncritical = 4,
                    LightmapLight = 8,
                    ReportKeyIsValid = 16,
                }
            }
            public enum ReportTypeOptions
            {
                Silent = 0,
                Comment = 1,
                Warning = 2,
                Error = 3,
            }
            public enum FlagsOptions
            {
                Rendered = 1,
                TangentSpace = 2,
                Noncritical = 4,
                LightmapLight = 8,
                ReportKeyIsValid = 16,
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(20, 4)]
        public sealed class PointToPathCurveBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("name^*", typeof(StringId))]
            public StringId Name;
            [Abide.Guerilla.Tags.FieldAttribute("node index*", typeof(Int16))]
            public Int16 NodeIndex;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(2)]
            public Byte[] EmptyString;
            [Abide.Guerilla.Tags.FieldAttribute("points*", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("point_to_path_curve_point_block", 1024, typeof(PointToPathCurvePointBlock))]
            public TagBlock Points;
            public int Size
            {
                get
                {
                    return 20;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(16, 4)]
            public sealed class PointToPathCurvePointBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("position*", typeof(Vector3))]
                public Vector3 Position;
                [Abide.Guerilla.Tags.FieldAttribute("t value*", typeof(Single))]
                public Single TValue;
                public int Size
                {
                    get
                    {
                        return 16;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(132, 4)]
        public sealed class LimitedHingeConstraintsBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("constraint bodies*", typeof(ConstraintBodiesStructBlock))]
            public ConstraintBodiesStructBlock ConstraintBodies;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString;
            [Abide.Guerilla.Tags.FieldAttribute("limit friction*", typeof(Single))]
            public Single LimitFriction;
            [Abide.Guerilla.Tags.FieldAttribute("limit min angle*", typeof(Single))]
            public Single LimitMinAngle;
            [Abide.Guerilla.Tags.FieldAttribute("limit max angle*", typeof(Single))]
            public Single LimitMaxAngle;
            public int Size
            {
                get
                {
                    return 132;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(116, 4)]
            public sealed class ConstraintBodiesStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("name^*", typeof(StringId))]
                public StringId Name;
                [Abide.Guerilla.Tags.FieldAttribute("node a*", typeof(Int16))]
                public Int16 NodeA;
                [Abide.Guerilla.Tags.FieldAttribute("node b*", typeof(Int16))]
                public Int16 NodeB;
                [Abide.Guerilla.Tags.FieldAttribute("a scale*", typeof(Single))]
                public Single AScale;
                [Abide.Guerilla.Tags.FieldAttribute("a forward*", typeof(Vector3))]
                public Vector3 AForward;
                [Abide.Guerilla.Tags.FieldAttribute("a left*", typeof(Vector3))]
                public Vector3 ALeft;
                [Abide.Guerilla.Tags.FieldAttribute("a up*", typeof(Vector3))]
                public Vector3 AUp;
                [Abide.Guerilla.Tags.FieldAttribute("a position*", typeof(Vector3))]
                public Vector3 APosition;
                [Abide.Guerilla.Tags.FieldAttribute("b scale*", typeof(Single))]
                public Single BScale;
                [Abide.Guerilla.Tags.FieldAttribute("b forward*", typeof(Vector3))]
                public Vector3 BForward;
                [Abide.Guerilla.Tags.FieldAttribute("b left*", typeof(Vector3))]
                public Vector3 BLeft;
                [Abide.Guerilla.Tags.FieldAttribute("b up*", typeof(Vector3))]
                public Vector3 BUp;
                [Abide.Guerilla.Tags.FieldAttribute("b position*", typeof(Vector3))]
                public Vector3 BPosition;
                [Abide.Guerilla.Tags.FieldAttribute("edge index*", typeof(Int16))]
                public Int16 EdgeIndex;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(2)]
                public Byte[] EmptyString;
                public int Size
                {
                    get
                    {
                        return 116;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(120, 4)]
        public sealed class BallAndSocketConstraintsBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("constraint bodies*", typeof(ConstraintBodiesStructBlock))]
            public ConstraintBodiesStructBlock ConstraintBodies;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString;
            public int Size
            {
                get
                {
                    return 120;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(116, 4)]
            public sealed class ConstraintBodiesStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("name^*", typeof(StringId))]
                public StringId Name;
                [Abide.Guerilla.Tags.FieldAttribute("node a*", typeof(Int16))]
                public Int16 NodeA;
                [Abide.Guerilla.Tags.FieldAttribute("node b*", typeof(Int16))]
                public Int16 NodeB;
                [Abide.Guerilla.Tags.FieldAttribute("a scale*", typeof(Single))]
                public Single AScale;
                [Abide.Guerilla.Tags.FieldAttribute("a forward*", typeof(Vector3))]
                public Vector3 AForward;
                [Abide.Guerilla.Tags.FieldAttribute("a left*", typeof(Vector3))]
                public Vector3 ALeft;
                [Abide.Guerilla.Tags.FieldAttribute("a up*", typeof(Vector3))]
                public Vector3 AUp;
                [Abide.Guerilla.Tags.FieldAttribute("a position*", typeof(Vector3))]
                public Vector3 APosition;
                [Abide.Guerilla.Tags.FieldAttribute("b scale*", typeof(Single))]
                public Single BScale;
                [Abide.Guerilla.Tags.FieldAttribute("b forward*", typeof(Vector3))]
                public Vector3 BForward;
                [Abide.Guerilla.Tags.FieldAttribute("b left*", typeof(Vector3))]
                public Vector3 BLeft;
                [Abide.Guerilla.Tags.FieldAttribute("b up*", typeof(Vector3))]
                public Vector3 BUp;
                [Abide.Guerilla.Tags.FieldAttribute("b position*", typeof(Vector3))]
                public Vector3 BPosition;
                [Abide.Guerilla.Tags.FieldAttribute("edge index*", typeof(Int16))]
                public Int16 EdgeIndex;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(2)]
                public Byte[] EmptyString;
                public int Size
                {
                    get
                    {
                        return 116;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(124, 4)]
        public sealed class StiffSpringConstraintsBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("constraint bodies*", typeof(ConstraintBodiesStructBlock))]
            public ConstraintBodiesStructBlock ConstraintBodies;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString;
            [Abide.Guerilla.Tags.FieldAttribute("spring_length*", typeof(Single))]
            public Single SpringLength;
            public int Size
            {
                get
                {
                    return 124;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(116, 4)]
            public sealed class ConstraintBodiesStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("name^*", typeof(StringId))]
                public StringId Name;
                [Abide.Guerilla.Tags.FieldAttribute("node a*", typeof(Int16))]
                public Int16 NodeA;
                [Abide.Guerilla.Tags.FieldAttribute("node b*", typeof(Int16))]
                public Int16 NodeB;
                [Abide.Guerilla.Tags.FieldAttribute("a scale*", typeof(Single))]
                public Single AScale;
                [Abide.Guerilla.Tags.FieldAttribute("a forward*", typeof(Vector3))]
                public Vector3 AForward;
                [Abide.Guerilla.Tags.FieldAttribute("a left*", typeof(Vector3))]
                public Vector3 ALeft;
                [Abide.Guerilla.Tags.FieldAttribute("a up*", typeof(Vector3))]
                public Vector3 AUp;
                [Abide.Guerilla.Tags.FieldAttribute("a position*", typeof(Vector3))]
                public Vector3 APosition;
                [Abide.Guerilla.Tags.FieldAttribute("b scale*", typeof(Single))]
                public Single BScale;
                [Abide.Guerilla.Tags.FieldAttribute("b forward*", typeof(Vector3))]
                public Vector3 BForward;
                [Abide.Guerilla.Tags.FieldAttribute("b left*", typeof(Vector3))]
                public Vector3 BLeft;
                [Abide.Guerilla.Tags.FieldAttribute("b up*", typeof(Vector3))]
                public Vector3 BUp;
                [Abide.Guerilla.Tags.FieldAttribute("b position*", typeof(Vector3))]
                public Vector3 BPosition;
                [Abide.Guerilla.Tags.FieldAttribute("edge index*", typeof(Int16))]
                public Int16 EdgeIndex;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(2)]
                public Byte[] EmptyString;
                public int Size
                {
                    get
                    {
                        return 116;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(132, 4)]
        public sealed class PrismaticConstraintsBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("constraint bodies*", typeof(ConstraintBodiesStructBlock))]
            public ConstraintBodiesStructBlock ConstraintBodies;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString;
            [Abide.Guerilla.Tags.FieldAttribute("min_limit*", typeof(Single))]
            public Single MinLimit;
            [Abide.Guerilla.Tags.FieldAttribute("max_limit*", typeof(Single))]
            public Single MaxLimit;
            [Abide.Guerilla.Tags.FieldAttribute("max_friction_force*", typeof(Single))]
            public Single MaxFrictionForce;
            public int Size
            {
                get
                {
                    return 132;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(116, 4)]
            public sealed class ConstraintBodiesStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("name^*", typeof(StringId))]
                public StringId Name;
                [Abide.Guerilla.Tags.FieldAttribute("node a*", typeof(Int16))]
                public Int16 NodeA;
                [Abide.Guerilla.Tags.FieldAttribute("node b*", typeof(Int16))]
                public Int16 NodeB;
                [Abide.Guerilla.Tags.FieldAttribute("a scale*", typeof(Single))]
                public Single AScale;
                [Abide.Guerilla.Tags.FieldAttribute("a forward*", typeof(Vector3))]
                public Vector3 AForward;
                [Abide.Guerilla.Tags.FieldAttribute("a left*", typeof(Vector3))]
                public Vector3 ALeft;
                [Abide.Guerilla.Tags.FieldAttribute("a up*", typeof(Vector3))]
                public Vector3 AUp;
                [Abide.Guerilla.Tags.FieldAttribute("a position*", typeof(Vector3))]
                public Vector3 APosition;
                [Abide.Guerilla.Tags.FieldAttribute("b scale*", typeof(Single))]
                public Single BScale;
                [Abide.Guerilla.Tags.FieldAttribute("b forward*", typeof(Vector3))]
                public Vector3 BForward;
                [Abide.Guerilla.Tags.FieldAttribute("b left*", typeof(Vector3))]
                public Vector3 BLeft;
                [Abide.Guerilla.Tags.FieldAttribute("b up*", typeof(Vector3))]
                public Vector3 BUp;
                [Abide.Guerilla.Tags.FieldAttribute("b position*", typeof(Vector3))]
                public Vector3 BPosition;
                [Abide.Guerilla.Tags.FieldAttribute("edge index*", typeof(Int16))]
                public Int16 EdgeIndex;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(2)]
                public Byte[] EmptyString;
                public int Size
                {
                    get
                    {
                        return 116;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(32, 4)]
        public sealed class PhantomsBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString;
            [Abide.Guerilla.Tags.FieldAttribute("size*", typeof(Int16))]
            public Int16 Size1;
            [Abide.Guerilla.Tags.FieldAttribute("count*", typeof(Int16))]
            public Int16 Count;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString1;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString2;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString3;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString4;
            [Abide.Guerilla.Tags.FieldAttribute("size*", typeof(Int16))]
            public Int16 Size2;
            [Abide.Guerilla.Tags.FieldAttribute("count*", typeof(Int16))]
            public Int16 Count1;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString5;
            public int Size
            {
                get
                {
                    return 32;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
        }
        public enum FlagsOptions
        {
            Unused = 1,
        }
    }
}
#pragma warning restore CS1591
