#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Abide.Guerilla.Tags
{
    using Abide.Guerilla.Types;
    using Abide.HaloLibrary;
    using System;
    using System.IO;
    
    [FieldSetAttribute(24, 4)]
    [TagGroupAttribute("scenario_decals_resource", 1684366122u, 4294967293u, typeof(ScenarioDecalsResourceBlock))]
    public sealed class ScenarioDecalsResourceBlock : AbideTagBlock
    {
        private TagBlockList<ScenarioDecalPaletteBlock> paletteList = new TagBlockList<ScenarioDecalPaletteBlock>(128);
        private TagBlockList<ScenarioDecalsBlock> decalsList = new TagBlockList<ScenarioDecalsBlock>(65536);
        [FieldAttribute("Palette", typeof(TagBlock))]
        [BlockAttribute("scenario_decal_palette_block", 128, typeof(ScenarioDecalPaletteBlock))]
        public TagBlock Palette;
        [FieldAttribute("Decals", typeof(TagBlock))]
        [BlockAttribute("scenario_decals_block", 65536, typeof(ScenarioDecalsBlock))]
        public TagBlock Decals;
        public TagBlockList<ScenarioDecalPaletteBlock> PaletteList
        {
            get
            {
                return this.paletteList;
            }
        }
        public TagBlockList<ScenarioDecalsBlock> DecalsList
        {
            get
            {
                return this.decalsList;
            }
        }
        public override int Size
        {
            get
            {
                return 24;
            }
        }
        public override void Initialize()
        {
            this.paletteList.Clear();
            this.decalsList.Clear();
            this.Palette = TagBlock.Zero;
            this.Decals = TagBlock.Zero;
        }
        public override void Read(BinaryReader reader)
        {
            this.Palette = reader.ReadInt64();
            this.paletteList.Read(reader, this.Palette);
            this.Decals = reader.ReadInt64();
            this.decalsList.Read(reader, this.Decals);
        }
        public override void Write(BinaryWriter writer)
        {
        }
        [FieldSetAttribute(16, 4)]
        public sealed class ScenarioDecalPaletteBlock : AbideTagBlock
        {
            [FieldAttribute("Reference^", typeof(TagReference))]
            public TagReference Reference;
            public override int Size
            {
                get
                {
                    return 16;
                }
            }
            public override void Initialize()
            {
                this.Reference = TagReference.Null;
            }
            public override void Read(BinaryReader reader)
            {
                this.Reference = reader.Read<TagReference>();
            }
            public override void Write(BinaryWriter writer)
            {
            }
        }
        [FieldSetAttribute(16, 4)]
        public sealed class ScenarioDecalsBlock : AbideTagBlock
        {
            [FieldAttribute("Decal Type^", typeof(Int16))]
            public Int16 DecalType;
            [FieldAttribute("Yaw[-127,127]*", typeof(Byte))]
            public Byte Yaw127127;
            [FieldAttribute("Pitch[-127,127]*", typeof(Byte))]
            public Byte Pitch127127;
            [FieldAttribute("Position*", typeof(Vector3))]
            public Vector3 Position;
            public override int Size
            {
                get
                {
                    return 16;
                }
            }
            public override void Initialize()
            {
                this.DecalType = 0;
                this.Yaw127127 = 0;
                this.Pitch127127 = 0;
                this.Position = Vector3.Zero;
            }
            public override void Read(BinaryReader reader)
            {
                this.DecalType = reader.ReadInt16();
                this.Yaw127127 = reader.ReadByte();
                this.Pitch127127 = reader.ReadByte();
                this.Position = reader.Read<Vector3>();
            }
            public override void Write(BinaryWriter writer)
            {
            }
        }
    }
}
#pragma warning restore CS1591
