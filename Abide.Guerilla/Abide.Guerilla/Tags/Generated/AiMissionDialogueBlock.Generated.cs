#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Abide.Guerilla.Tags
{
    using Abide.Guerilla.Types;
    using Abide.HaloLibrary;
    using System;
    using System.IO;
    
    [FieldSetAttribute(12, 4)]
    [TagGroupAttribute("ai_mission_dialogue", 1835297895u, 4294967293u, typeof(AiMissionDialogueBlock))]
    public sealed class AiMissionDialogueBlock : AbideTagBlock
    {
        private TagBlockList<MissionDialogueLinesBlock> linesList = new TagBlockList<MissionDialogueLinesBlock>(500);
        [FieldAttribute("lines", typeof(TagBlock))]
        [BlockAttribute("mission_dialogue_lines_block", 500, typeof(MissionDialogueLinesBlock))]
        public TagBlock Lines;
        public TagBlockList<MissionDialogueLinesBlock> LinesList
        {
            get
            {
                return this.linesList;
            }
        }
        public override int Size
        {
            get
            {
                return 12;
            }
        }
        public override void Initialize()
        {
            this.linesList.Clear();
            this.Lines = TagBlock.Zero;
        }
        public override void Read(BinaryReader reader)
        {
            this.Lines = reader.ReadInt64();
            this.linesList.Read(reader, this.Lines);
        }
        public override void Write(BinaryWriter writer)
        {
        }
        [FieldSetAttribute(20, 4)]
        public sealed class MissionDialogueLinesBlock : AbideTagBlock
        {
            private TagBlockList<MissionDialogueVariantsBlock> variantsList = new TagBlockList<MissionDialogueVariantsBlock>(10);
            [FieldAttribute("name^", typeof(StringId))]
            public StringId Name;
            [FieldAttribute("variants", typeof(TagBlock))]
            [BlockAttribute("mission_dialogue_variants_block", 10, typeof(MissionDialogueVariantsBlock))]
            public TagBlock Variants;
            [FieldAttribute("default sound effect", typeof(StringId))]
            public StringId DefaultSoundEffect;
            public TagBlockList<MissionDialogueVariantsBlock> VariantsList
            {
                get
                {
                    return this.variantsList;
                }
            }
            public override int Size
            {
                get
                {
                    return 20;
                }
            }
            public override void Initialize()
            {
                this.variantsList.Clear();
                this.Name = StringId.Zero;
                this.Variants = TagBlock.Zero;
                this.DefaultSoundEffect = StringId.Zero;
            }
            public override void Read(BinaryReader reader)
            {
                this.Name = reader.ReadInt32();
                this.Variants = reader.ReadInt64();
                this.variantsList.Read(reader, this.Variants);
                this.DefaultSoundEffect = reader.ReadInt32();
            }
            public override void Write(BinaryWriter writer)
            {
            }
            [FieldSetAttribute(24, 4)]
            public sealed class MissionDialogueVariantsBlock : AbideTagBlock
            {
                [FieldAttribute("variant designation#3-letter designation for the character^", typeof(StringId))]
                public StringId VariantDesignation;
                [FieldAttribute("sound", typeof(TagReference))]
                public TagReference Sound;
                [FieldAttribute("sound effect", typeof(StringId))]
                public StringId SoundEffect;
                public override int Size
                {
                    get
                    {
                        return 24;
                    }
                }
                public override void Initialize()
                {
                    this.VariantDesignation = StringId.Zero;
                    this.Sound = TagReference.Null;
                    this.SoundEffect = StringId.Zero;
                }
                public override void Read(BinaryReader reader)
                {
                    this.VariantDesignation = reader.ReadInt32();
                    this.Sound = reader.Read<TagReference>();
                    this.SoundEffect = reader.ReadInt32();
                }
                public override void Write(BinaryWriter writer)
                {
                }
            }
        }
    }
}
#pragma warning restore CS1591
