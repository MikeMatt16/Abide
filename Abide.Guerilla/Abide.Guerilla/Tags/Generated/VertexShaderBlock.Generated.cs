#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Abide.Guerilla.Tags
{
    using Abide.Guerilla.Types;
    using Abide.HaloLibrary;
    using System;
    using System.IO;
    
    [FieldSetAttribute(20, 4)]
    [TagGroupAttribute("vertex_shader", 1987212408u, 4294967293u, typeof(VertexShaderBlock))]
    public sealed class VertexShaderBlock : AbideTagBlock
    {
        private TagBlockList<VertexShaderClassificationBlock> geometryClassificationsList = new TagBlockList<VertexShaderClassificationBlock>(12);
        [FieldAttribute("platform", typeof(PlatformOptions))]
        [OptionsAttribute(typeof(PlatformOptions), false)]
        public PlatformOptions Platform;
        [FieldAttribute("", typeof(Byte[]))]
        [PaddingAttribute(2)]
        public Byte[] EmptyString;
        [FieldAttribute("geometry classifications", typeof(TagBlock))]
        [BlockAttribute("classification", 12, typeof(VertexShaderClassificationBlock))]
        public TagBlock GeometryClassifications;
        [FieldAttribute("output swizzles", typeof(Int32))]
        public Int32 OutputSwizzles;
        public TagBlockList<VertexShaderClassificationBlock> GeometryClassificationsList
        {
            get
            {
                return this.geometryClassificationsList;
            }
        }
        public override int Size
        {
            get
            {
                return 20;
            }
        }
        public override void Initialize()
        {
            this.geometryClassificationsList.Clear();
            this.Platform = ((PlatformOptions)(0));
            this.EmptyString = new byte[2];
            this.GeometryClassifications = TagBlock.Zero;
            this.OutputSwizzles = 0;
        }
        public override void Read(BinaryReader reader)
        {
            this.Platform = ((PlatformOptions)(reader.ReadInt16()));
            this.EmptyString = reader.ReadBytes(2);
            this.GeometryClassifications = reader.ReadInt64();
            this.geometryClassificationsList.Read(reader, this.GeometryClassifications);
            this.OutputSwizzles = reader.ReadInt32();
        }
        public override void Write(BinaryWriter writer)
        {
        }
        [FieldSetAttribute(44, 4)]
        public sealed class VertexShaderClassificationBlock : AbideTagBlock
        {
            private DataList compiledShaderList = new DataList(8192);
            private DataList codeList = new DataList(65535);
            [FieldAttribute("", typeof(Byte[]))]
            [PaddingAttribute(4)]
            public Byte[] EmptyString;
            [FieldAttribute("compiled shader", typeof(TagBlock))]
            [DataAttribute(8192)]
            public TagBlock CompiledShader;
            [FieldAttribute("code", typeof(TagBlock))]
            [DataAttribute(65535)]
            public TagBlock Code;
            public DataList CompiledShaderList
            {
                get
                {
                    return this.compiledShaderList;
                }
            }
            public DataList CodeList
            {
                get
                {
                    return this.codeList;
                }
            }
            public override int Size
            {
                get
                {
                    return 44;
                }
            }
            public override void Initialize()
            {
                this.compiledShaderList.Clear();
                this.codeList.Clear();
                this.EmptyString = new byte[4];
                this.CompiledShader = TagBlock.Zero;
                this.Code = TagBlock.Zero;
            }
            public override void Read(BinaryReader reader)
            {
                this.EmptyString = reader.ReadBytes(4);
                this.CompiledShader = reader.ReadInt64();
                this.Code = reader.ReadInt64();
            }
            public override void Write(BinaryWriter writer)
            {
            }
        }
        public enum PlatformOptions : Int16
        {
            Pc = 0,
            Xbox = 1,
        }
    }
}
#pragma warning restore CS1591
