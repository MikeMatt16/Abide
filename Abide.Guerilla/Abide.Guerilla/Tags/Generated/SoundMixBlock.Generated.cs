#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Abide.Guerilla.Tags
{
    using Abide.Guerilla.Types;
    using Abide.HaloLibrary;
    using System;
    using System.IO;
    
    [FieldSetAttribute(88, 4)]
    [TagGroupAttribute("sound_mix", 1936616824u, 4294967293u, typeof(SoundMixBlock))]
    public sealed class SoundMixBlock : AbideTagBlock
    {
        [FieldAttribute("left stereo gain:dB", typeof(Single))]
        public Single LeftStereoGain;
        [FieldAttribute("right stereo gain:dB", typeof(Single))]
        public Single RightStereoGain;
        [FieldAttribute("left stereo gain:dB", typeof(Single))]
        public Single LeftStereoGain1;
        [FieldAttribute("right stereo gain:dB", typeof(Single))]
        public Single RightStereoGain1;
        [FieldAttribute("left stereo gain:dB", typeof(Single))]
        public Single LeftStereoGain2;
        [FieldAttribute("right stereo gain:dB", typeof(Single))]
        public Single RightStereoGain2;
        [FieldAttribute("front speaker gain:dB", typeof(Single))]
        public Single FrontSpeakerGain;
        [FieldAttribute("rear speaker gain:dB", typeof(Single))]
        public Single RearSpeakerGain;
        [FieldAttribute("front speaker gain:dB", typeof(Single))]
        public Single FrontSpeakerGain1;
        [FieldAttribute("rear speaker gain:dB", typeof(Single))]
        public Single RearSpeakerGain1;
        [FieldAttribute("global mix", typeof(SoundGlobalMixStructBlock))]
        public SoundGlobalMixStructBlock GlobalMix;
        public override int Size
        {
            get
            {
                return 88;
            }
        }
        public override void Initialize()
        {
            this.LeftStereoGain = 0;
            this.RightStereoGain = 0;
            this.LeftStereoGain1 = 0;
            this.RightStereoGain1 = 0;
            this.LeftStereoGain2 = 0;
            this.RightStereoGain2 = 0;
            this.FrontSpeakerGain = 0;
            this.RearSpeakerGain = 0;
            this.FrontSpeakerGain1 = 0;
            this.RearSpeakerGain1 = 0;
            this.GlobalMix = new SoundGlobalMixStructBlock();
        }
        public override void Read(BinaryReader reader)
        {
            this.LeftStereoGain = reader.ReadSingle();
            this.RightStereoGain = reader.ReadSingle();
            this.LeftStereoGain1 = reader.ReadSingle();
            this.RightStereoGain1 = reader.ReadSingle();
            this.LeftStereoGain2 = reader.ReadSingle();
            this.RightStereoGain2 = reader.ReadSingle();
            this.FrontSpeakerGain = reader.ReadSingle();
            this.RearSpeakerGain = reader.ReadSingle();
            this.FrontSpeakerGain1 = reader.ReadSingle();
            this.RearSpeakerGain1 = reader.ReadSingle();
            this.GlobalMix = reader.ReadDataStructure<SoundGlobalMixStructBlock>();
        }
        public override void Write(BinaryWriter writer)
        {
        }
        [FieldSetAttribute(48, 4)]
        public sealed class SoundGlobalMixStructBlock : AbideTagBlock
        {
            [FieldAttribute("mono unspatialized gain:dB", typeof(Single))]
            public Single MonoUnspatializedGain;
            [FieldAttribute("stereo to 3d gain:dB", typeof(Single))]
            public Single StereoTo3dGain;
            [FieldAttribute("rear surround to front stereo gain:dB", typeof(Single))]
            public Single RearSurroundToFrontStereoGain;
            [FieldAttribute("front speaker gain:dB", typeof(Single))]
            public Single FrontSpeakerGain;
            [FieldAttribute("center speaker gain:dB", typeof(Single))]
            public Single CenterSpeakerGain;
            [FieldAttribute("front speaker gain:dB", typeof(Single))]
            public Single FrontSpeakerGain1;
            [FieldAttribute("center speaker gain:dB", typeof(Single))]
            public Single CenterSpeakerGain1;
            [FieldAttribute("stereo unspatialized gain:dB", typeof(Single))]
            public Single StereoUnspatializedGain;
            [FieldAttribute("solo player fade out delay: seconds", typeof(Single))]
            public Single SoloPlayerFadeOutDelay;
            [FieldAttribute("solo player fade out time: seconds", typeof(Single))]
            public Single SoloPlayerFadeOutTime;
            [FieldAttribute("solo player fade in time: seconds", typeof(Single))]
            public Single SoloPlayerFadeInTime;
            [FieldAttribute("game music fade out time: seconds", typeof(Single))]
            public Single GameMusicFadeOutTime;
            public override int Size
            {
                get
                {
                    return 48;
                }
            }
            public override void Initialize()
            {
                this.MonoUnspatializedGain = 0;
                this.StereoTo3dGain = 0;
                this.RearSurroundToFrontStereoGain = 0;
                this.FrontSpeakerGain = 0;
                this.CenterSpeakerGain = 0;
                this.FrontSpeakerGain1 = 0;
                this.CenterSpeakerGain1 = 0;
                this.StereoUnspatializedGain = 0;
                this.SoloPlayerFadeOutDelay = 0;
                this.SoloPlayerFadeOutTime = 0;
                this.SoloPlayerFadeInTime = 0;
                this.GameMusicFadeOutTime = 0;
            }
            public override void Read(BinaryReader reader)
            {
                this.MonoUnspatializedGain = reader.ReadSingle();
                this.StereoTo3dGain = reader.ReadSingle();
                this.RearSurroundToFrontStereoGain = reader.ReadSingle();
                this.FrontSpeakerGain = reader.ReadSingle();
                this.CenterSpeakerGain = reader.ReadSingle();
                this.FrontSpeakerGain1 = reader.ReadSingle();
                this.CenterSpeakerGain1 = reader.ReadSingle();
                this.StereoUnspatializedGain = reader.ReadSingle();
                this.SoloPlayerFadeOutDelay = reader.ReadSingle();
                this.SoloPlayerFadeOutTime = reader.ReadSingle();
                this.SoloPlayerFadeInTime = reader.ReadSingle();
                this.GameMusicFadeOutTime = reader.ReadSingle();
            }
            public override void Write(BinaryWriter writer)
            {
            }
        }
    }
}
#pragma warning restore CS1591
