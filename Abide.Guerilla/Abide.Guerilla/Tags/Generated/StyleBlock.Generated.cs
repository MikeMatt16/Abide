#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Abide.Guerilla.Tags
{
    using Abide.Guerilla.Types;
    using Abide.HaloLibrary;
    using System;
    using System.IO;
    
    [FieldSetAttribute(100, 4)]
    [TagGroupAttribute("style", 1937013100u, 4294967293u, typeof(StyleBlock))]
    public sealed class StyleBlock : AbideTagBlock
    {
        private TagBlockList<SpecialMovementBlock> specialMovementList = new TagBlockList<SpecialMovementBlock>(1);
        private TagBlockList<BehaviorNamesBlock> behaviorListList = new TagBlockList<BehaviorNamesBlock>(160);
        [FieldAttribute("name^", typeof(String32))]
        public String32 Name;
        [FieldAttribute("Combat status decay options", typeof(CombatStatusDecayOptionsOptions))]
        [OptionsAttribute(typeof(CombatStatusDecayOptionsOptions), false)]
        public CombatStatusDecayOptionsOptions CombatStatusDecayOptions;
        [FieldAttribute("", typeof(Byte[]))]
        [PaddingAttribute(2)]
        public Byte[] EmptyString;
        [FieldAttribute("Attitude", typeof(AttitudeOptions))]
        [OptionsAttribute(typeof(AttitudeOptions), false)]
        public AttitudeOptions Attitude;
        [FieldAttribute("", typeof(Byte[]))]
        [PaddingAttribute(2)]
        public Byte[] EmptyString1;
        [FieldAttribute("engage attitude", typeof(EngageAttitudeOptions))]
        [OptionsAttribute(typeof(EngageAttitudeOptions), false)]
        public EngageAttitudeOptions EngageAttitude;
        [FieldAttribute("evasion attitude", typeof(EvasionAttitudeOptions))]
        [OptionsAttribute(typeof(EvasionAttitudeOptions), false)]
        public EvasionAttitudeOptions EvasionAttitude;
        [FieldAttribute("cover attitude", typeof(CoverAttitudeOptions))]
        [OptionsAttribute(typeof(CoverAttitudeOptions), false)]
        public CoverAttitudeOptions CoverAttitude;
        [FieldAttribute("search attitude", typeof(SearchAttitudeOptions))]
        [OptionsAttribute(typeof(SearchAttitudeOptions), false)]
        public SearchAttitudeOptions SearchAttitude;
        [FieldAttribute("presearch attitude", typeof(PresearchAttitudeOptions))]
        [OptionsAttribute(typeof(PresearchAttitudeOptions), false)]
        public PresearchAttitudeOptions PresearchAttitude;
        [FieldAttribute("retreat attitude", typeof(RetreatAttitudeOptions))]
        [OptionsAttribute(typeof(RetreatAttitudeOptions), false)]
        public RetreatAttitudeOptions RetreatAttitude;
        [FieldAttribute("charge attitude", typeof(ChargeAttitudeOptions))]
        [OptionsAttribute(typeof(ChargeAttitudeOptions), false)]
        public ChargeAttitudeOptions ChargeAttitude;
        [FieldAttribute("ready attitude", typeof(ReadyAttitudeOptions))]
        [OptionsAttribute(typeof(ReadyAttitudeOptions), false)]
        public ReadyAttitudeOptions ReadyAttitude;
        [FieldAttribute("idle attitude", typeof(IdleAttitudeOptions))]
        [OptionsAttribute(typeof(IdleAttitudeOptions), false)]
        public IdleAttitudeOptions IdleAttitude;
        [FieldAttribute("weapon attitude", typeof(WeaponAttitudeOptions))]
        [OptionsAttribute(typeof(WeaponAttitudeOptions), false)]
        public WeaponAttitudeOptions WeaponAttitude;
        [FieldAttribute("swarm attitude", typeof(SwarmAttitudeOptions))]
        [OptionsAttribute(typeof(SwarmAttitudeOptions), false)]
        public SwarmAttitudeOptions SwarmAttitude;
        [FieldAttribute("", typeof(Byte[]))]
        [PaddingAttribute(1)]
        public Byte[] EmptyString2;
        [FieldAttribute("Style control", typeof(StyleControlOptions))]
        [OptionsAttribute(typeof(StyleControlOptions), true)]
        public StyleControlOptions StyleControl;
        [FieldAttribute("Behaviors1", typeof(Behaviors1Options))]
        [OptionsAttribute(typeof(Behaviors1Options), true)]
        public Behaviors1Options Behaviors1;
        [FieldAttribute("Behaviors2", typeof(Behaviors2Options))]
        [OptionsAttribute(typeof(Behaviors2Options), true)]
        public Behaviors2Options Behaviors2;
        [FieldAttribute("Behaviors3", typeof(Behaviors3Options))]
        [OptionsAttribute(typeof(Behaviors3Options), true)]
        public Behaviors3Options Behaviors3;
        [FieldAttribute("Behaviors4", typeof(Behaviors4Options))]
        [OptionsAttribute(typeof(Behaviors4Options), true)]
        public Behaviors4Options Behaviors4;
        [FieldAttribute("Behaviors5", typeof(Behaviors5Options))]
        [OptionsAttribute(typeof(Behaviors5Options), true)]
        public Behaviors5Options Behaviors5;
        [FieldAttribute("Special movement", typeof(TagBlock))]
        [BlockAttribute("special_movement_block", 1, typeof(SpecialMovementBlock))]
        public TagBlock SpecialMovement;
        [FieldAttribute("Behavior list", typeof(TagBlock))]
        [BlockAttribute("behavior_names_block", 160, typeof(BehaviorNamesBlock))]
        public TagBlock BehaviorList;
        public TagBlockList<SpecialMovementBlock> SpecialMovementList
        {
            get
            {
                return this.specialMovementList;
            }
        }
        public TagBlockList<BehaviorNamesBlock> BehaviorListList
        {
            get
            {
                return this.behaviorListList;
            }
        }
        public override int Size
        {
            get
            {
                return 100;
            }
        }
        public override void Initialize()
        {
            this.specialMovementList.Clear();
            this.behaviorListList.Clear();
            this.Name = String32.Empty;
            this.CombatStatusDecayOptions = ((CombatStatusDecayOptionsOptions)(0));
            this.EmptyString = new byte[2];
            this.Attitude = ((AttitudeOptions)(0));
            this.EmptyString1 = new byte[2];
            this.EngageAttitude = ((EngageAttitudeOptions)(0));
            this.EvasionAttitude = ((EvasionAttitudeOptions)(0));
            this.CoverAttitude = ((CoverAttitudeOptions)(0));
            this.SearchAttitude = ((SearchAttitudeOptions)(0));
            this.PresearchAttitude = ((PresearchAttitudeOptions)(0));
            this.RetreatAttitude = ((RetreatAttitudeOptions)(0));
            this.ChargeAttitude = ((ChargeAttitudeOptions)(0));
            this.ReadyAttitude = ((ReadyAttitudeOptions)(0));
            this.IdleAttitude = ((IdleAttitudeOptions)(0));
            this.WeaponAttitude = ((WeaponAttitudeOptions)(0));
            this.SwarmAttitude = ((SwarmAttitudeOptions)(0));
            this.EmptyString2 = new byte[1];
            this.StyleControl = ((StyleControlOptions)(0));
            this.Behaviors1 = ((Behaviors1Options)(0));
            this.Behaviors2 = ((Behaviors2Options)(0));
            this.Behaviors3 = ((Behaviors3Options)(0));
            this.Behaviors4 = ((Behaviors4Options)(0));
            this.Behaviors5 = ((Behaviors5Options)(0));
            this.SpecialMovement = TagBlock.Zero;
            this.BehaviorList = TagBlock.Zero;
        }
        public override void Read(BinaryReader reader)
        {
            this.Name = reader.Read<String32>();
            this.CombatStatusDecayOptions = ((CombatStatusDecayOptionsOptions)(reader.ReadInt16()));
            this.EmptyString = reader.ReadBytes(2);
            this.Attitude = ((AttitudeOptions)(reader.ReadInt16()));
            this.EmptyString1 = reader.ReadBytes(2);
            this.EngageAttitude = ((EngageAttitudeOptions)(reader.ReadByte()));
            this.EvasionAttitude = ((EvasionAttitudeOptions)(reader.ReadByte()));
            this.CoverAttitude = ((CoverAttitudeOptions)(reader.ReadByte()));
            this.SearchAttitude = ((SearchAttitudeOptions)(reader.ReadByte()));
            this.PresearchAttitude = ((PresearchAttitudeOptions)(reader.ReadByte()));
            this.RetreatAttitude = ((RetreatAttitudeOptions)(reader.ReadByte()));
            this.ChargeAttitude = ((ChargeAttitudeOptions)(reader.ReadByte()));
            this.ReadyAttitude = ((ReadyAttitudeOptions)(reader.ReadByte()));
            this.IdleAttitude = ((IdleAttitudeOptions)(reader.ReadByte()));
            this.WeaponAttitude = ((WeaponAttitudeOptions)(reader.ReadByte()));
            this.SwarmAttitude = ((SwarmAttitudeOptions)(reader.ReadByte()));
            this.EmptyString2 = reader.ReadBytes(1);
            this.StyleControl = ((StyleControlOptions)(reader.ReadInt32()));
            this.Behaviors1 = ((Behaviors1Options)(reader.ReadInt32()));
            this.Behaviors2 = ((Behaviors2Options)(reader.ReadInt32()));
            this.Behaviors3 = ((Behaviors3Options)(reader.ReadInt32()));
            this.Behaviors4 = ((Behaviors4Options)(reader.ReadInt32()));
            this.Behaviors5 = ((Behaviors5Options)(reader.ReadInt32()));
            this.SpecialMovement = reader.ReadInt64();
            this.specialMovementList.Read(reader, this.SpecialMovement);
            this.BehaviorList = reader.ReadInt64();
            this.behaviorListList.Read(reader, this.BehaviorList);
        }
        public override void Write(BinaryWriter writer)
        {
        }
        [FieldSetAttribute(4, 4)]
        public sealed class SpecialMovementBlock : AbideTagBlock
        {
            [FieldAttribute("Special movement 1", typeof(SpecialMovement1Options))]
            [OptionsAttribute(typeof(SpecialMovement1Options), true)]
            public SpecialMovement1Options SpecialMovement1;
            public override int Size
            {
                get
                {
                    return 4;
                }
            }
            public override void Initialize()
            {
                this.SpecialMovement1 = ((SpecialMovement1Options)(0));
            }
            public override void Read(BinaryReader reader)
            {
                this.SpecialMovement1 = ((SpecialMovement1Options)(reader.ReadInt32()));
            }
            public override void Write(BinaryWriter writer)
            {
            }
            public enum SpecialMovement1Options : Int32
            {
                Jump = 1,
                Climb = 2,
                Vault = 4,
                Mount = 8,
                Hoist = 16,
                WallJump = 32,
                Na = 64,
            }
        }
        [FieldSetAttribute(32, 4)]
        public sealed class BehaviorNamesBlock : AbideTagBlock
        {
            [FieldAttribute("behavior name*^", typeof(String32))]
            public String32 BehaviorName;
            public override int Size
            {
                get
                {
                    return 32;
                }
            }
            public override void Initialize()
            {
                this.BehaviorName = String32.Empty;
            }
            public override void Read(BinaryReader reader)
            {
                this.BehaviorName = reader.Read<String32>();
            }
            public override void Write(BinaryWriter writer)
            {
            }
        }
        public enum CombatStatusDecayOptionsOptions : Int16
        {
            LatchAtIdle = 0,
            LatchAtAlert = 1,
            LatchAtCombat = 2,
        }
        public enum AttitudeOptions : Int16
        {
            Normal = 0,
            Timid = 1,
            Aggressive = 2,
        }
        public enum EngageAttitudeOptions : Byte
        {
            Default = 0,
            Normal = 1,
            Timid = 2,
            Aggressive = 3,
        }
        public enum EvasionAttitudeOptions : Byte
        {
            Default = 0,
            Normal = 1,
            Timid = 2,
            Aggressive = 3,
        }
        public enum CoverAttitudeOptions : Byte
        {
            Default = 0,
            Normal = 1,
            Timid = 2,
            Aggressive = 3,
        }
        public enum SearchAttitudeOptions : Byte
        {
            Default = 0,
            Normal = 1,
            Timid = 2,
            Aggressive = 3,
        }
        public enum PresearchAttitudeOptions : Byte
        {
            Default = 0,
            Normal = 1,
            Timid = 2,
            Aggressive = 3,
        }
        public enum RetreatAttitudeOptions : Byte
        {
            Default = 0,
            Normal = 1,
            Timid = 2,
            Aggressive = 3,
        }
        public enum ChargeAttitudeOptions : Byte
        {
            Default = 0,
            Normal = 1,
            Timid = 2,
            Aggressive = 3,
        }
        public enum ReadyAttitudeOptions : Byte
        {
            Default = 0,
            Normal = 1,
            Timid = 2,
            Aggressive = 3,
        }
        public enum IdleAttitudeOptions : Byte
        {
            Default = 0,
            Normal = 1,
            Timid = 2,
            Aggressive = 3,
        }
        public enum WeaponAttitudeOptions : Byte
        {
            Default = 0,
            Normal = 1,
            Timid = 2,
            Aggressive = 3,
        }
        public enum SwarmAttitudeOptions : Byte
        {
            Default = 0,
            Normal = 1,
            Timid = 2,
            Aggressive = 3,
        }
        public enum StyleControlOptions : Int32
        {
            NewBehaviorsDefaultToOn = 1,
        }
        public enum Behaviors1Options : Int32
        {
            General = 1,
            Root = 2,
            Null = 4,
            NullDiscrete = 8,
            Obey = 16,
            Guard = 32,
            FollowBehavior = 64,
            Ready = 128,
            SmashObstacle = 256,
            DestroyObstacle = 512,
            Perch = 1024,
            CoverFriend = 2048,
            BlindPanic = 4096,
            Engage = 8192,
            Engage1 = 16384,
            Fight = 32768,
            MeleeCharge = 65536,
            MeleeLeapingCharge = 131072,
            Surprise = 262144,
            GrenadeImpulse = 524288,
            AntiVehicleGrenade = 1048576,
            Stalk = 2097152,
            BerserkWanderImpulse = 4194304,
            Berserk = 8388608,
            LastManBerserk = 16777216,
            StuckWithGrenadeBerserk = 33554432,
            Presearch = 67108864,
            Presearch1 = 134217728,
            PresearchUncover = 268435456,
            DestroyCover = 536870912,
            SuppressingFire = 1073741824,
            GrenadeUncover = -2147483648,
        }
        public enum Behaviors2Options : Int32
        {
            LeapOnCover = 1,
            Search = 2,
            Search1 = 4,
            Uncover = 8,
            Investigate = 16,
            PursuitSync = 32,
            Pursuit = 64,
            Postsearch = 128,
            CovermeInvestigate = 256,
            SelfDefense = 512,
            SelfPreservation = 1024,
            Cover = 2048,
            CoverPeek = 4096,
            Avoid = 8192,
            EvasionImpulse = 16384,
            DiveImpulse = 32768,
            DangerCoverImpulse = 65536,
            DangerCrouchImpulse = 131072,
            ProximityMelee = 262144,
            ProximitySelfPreservation = 524288,
            UnreachableEnemyCover = 1048576,
            ScaryTargetCover = 2097152,
            GroupEmerge = 4194304,
            Retreat = 8388608,
            Retreat1 = 16777216,
            RetreatGrenade = 33554432,
            Flee = 67108864,
            Cower = 134217728,
            LowShieldRetreat = 268435456,
            ScaryTargetRetreat = 536870912,
            LeaderDeadRetreat = 1073741824,
            PeerDeadRetreat = -2147483648,
        }
        public enum Behaviors3Options : Int32
        {
            DangerRetreat = 1,
            ProximityRetreat = 2,
            ChargeWhenCornered = 4,
            SurpriseRetreat = 8,
            OverheatedWeaponRetreat = 16,
            Ambush = 32,
            Ambush1 = 64,
            CoordinatedAmbush = 128,
            ProximityAmbush = 256,
            VulnerableEnemyAmbush = 512,
            NowhereToRunAmbush = 1024,
            Vehicle = 2048,
            Vehicle1 = 4096,
            EnterFriendlyVehicle = 8192,
            ReEnterFlippedVehicle = 16384,
            VehicleEntryEngageImpulse = 32768,
            VehicleBoard = 65536,
            VehicleFight = 131072,
            VehicleCharge = 262144,
            VehicleRamBehavior = 524288,
            VehicleCover = 1048576,
            DamageVehicleCover = 2097152,
            ExposedRearCoverImpulse = 4194304,
            PlayerEndageredCoverImpulse = 8388608,
            VehicleAvoid = 16777216,
            VehiclePickup = 33554432,
            VehiclePlayerPickup = 67108864,
            VehicleExitImpulse = 134217728,
            DangerVehicleExitImpulse = 268435456,
            VehicleFlip = 536870912,
            VehicleTurtle = 1073741824,
            VehicleEngagePatrolImpulse = -2147483648,
        }
        public enum Behaviors4Options : Int32
        {
            VehicleEngageWanderImpulse = 1,
            Postcombat = 2,
            Postcombat1 = 4,
            PostPostcombat = 8,
            CheckFriend = 16,
            ShootCorpse = 32,
            PostcombatApproach = 64,
            Alert = 128,
            Alert1 = 256,
            Idle = 512,
            Idle1 = 1024,
            WanderBehavior = 2048,
            FlightWander = 4096,
            Patrol = 8192,
            FallSleep = 16384,
            Buggers = 32768,
            BuggerGroundUncover = 65536,
            Swarms = 131072,
            SwarmRoot = 262144,
            SwarmAttack = 524288,
            SupportAttack = 1048576,
            Infect = 2097152,
            Scatter = 4194304,
            EjectParasite = 8388608,
            FloodSelfPreservation = 16777216,
            JuggernautFlurry = 33554432,
            Sentinels = 67108864,
            EnforcerWeaponControl = 134217728,
            Grapple = 268435456,
            Special = 536870912,
            Formation = 1073741824,
            GruntScaredByElite = -2147483648,
        }
        public enum Behaviors5Options : Int32
        {
            Stunned = 1,
            CureIsolation = 2,
            DeployTurret = 4,
            EmptyString = 8,
            EmptyString1 = 16,
            EmptyString2 = 32,
            EmptyString3 = 64,
            EmptyString4 = 128,
            EmptyString5 = 256,
            EmptyString6 = 512,
            EmptyString7 = 1024,
            EmptyString8 = 2048,
            EmptyString9 = 4096,
            EmptyString10 = 8192,
            EmptyString11 = 16384,
            EmptyString12 = 32768,
            EmptyString13 = 65536,
            EmptyString14 = 131072,
            EmptyString15 = 262144,
            EmptyString16 = 524288,
            EmptyString17 = 1048576,
            EmptyString18 = 2097152,
            EmptyString19 = 4194304,
            EmptyString20 = 8388608,
            EmptyString21 = 16777216,
            EmptyString22 = 33554432,
            EmptyString23 = 67108864,
            EmptyString24 = 134217728,
            EmptyString25 = 268435456,
            EmptyString26 = 536870912,
            EmptyString27 = 1073741824,
            EmptyString28 = -2147483648,
        }
    }
}
#pragma warning restore CS1591
