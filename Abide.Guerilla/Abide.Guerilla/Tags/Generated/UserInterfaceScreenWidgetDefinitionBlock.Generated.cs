#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Abide.Guerilla.Tags
{
    using Abide.Guerilla.Types;
    using Abide.HaloLibrary;
    using System;
    
    [Abide.Guerilla.Tags.FieldSetAttribute(140, 4)]
    [Abide.Guerilla.Tags.TagGroupAttribute("user_interface_screen_widget_definition", 2003265908u, 4294967293u, typeof(UserInterfaceScreenWidgetDefinitionBlock))]
    public sealed class UserInterfaceScreenWidgetDefinitionBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
    {
        [Abide.Guerilla.Tags.FieldAttribute("flags", typeof(Int32))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
        public Int32 Flags1;
        [Abide.Guerilla.Tags.FieldAttribute("screen ID", typeof(Int16))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(ScreenIdOptions), false)]
        public Int16 ScreenId;
        [Abide.Guerilla.Tags.FieldAttribute("button key type", typeof(Int16))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(ButtonKeyTypeOptions), false)]
        public Int16 ButtonKeyType;
        [Abide.Guerilla.Tags.FieldAttribute("text color", typeof(ColorArgbF))]
        public ColorArgbF TextColor;
        [Abide.Guerilla.Tags.FieldAttribute("string list tag", typeof(TagReference))]
        public TagReference StringListTag;
        [Abide.Guerilla.Tags.FieldAttribute("panes", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("window_pane_reference_block", 16, typeof(WindowPaneReferenceBlock))]
        public TagBlock Panes1;
        [Abide.Guerilla.Tags.FieldAttribute("shape group", typeof(Int16))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(ShapeGroupOptions), false)]
        public Int16 ShapeGroup1;
        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
        [Abide.Guerilla.Tags.PaddingAttribute(2)]
        public Byte[] EmptyString2;
        [Abide.Guerilla.Tags.FieldAttribute("header string id", typeof(StringId))]
        public StringId HeaderStringId;
        [Abide.Guerilla.Tags.FieldAttribute("local strings", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("local_string_id_list_section_reference_block", 16, typeof(LocalStringIdListSectionReferenceBlock))]
        public TagBlock LocalStrings1;
        [Abide.Guerilla.Tags.FieldAttribute("local bitmaps", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("local_bitmap_reference_block", 16, typeof(LocalBitmapReferenceBlock))]
        public TagBlock LocalBitmaps1;
        [Abide.Guerilla.Tags.FieldAttribute("source color", typeof(ColorRgbF))]
        public ColorRgbF SourceColor;
        [Abide.Guerilla.Tags.FieldAttribute("destination color", typeof(ColorRgbF))]
        public ColorRgbF DestinationColor;
        [Abide.Guerilla.Tags.FieldAttribute("accumulate zoom scale x", typeof(Single))]
        public Single AccumulateZoomScaleX;
        [Abide.Guerilla.Tags.FieldAttribute("accumulate zoom scale y", typeof(Single))]
        public Single AccumulateZoomScaleY;
        [Abide.Guerilla.Tags.FieldAttribute("refraction scale x", typeof(Single))]
        public Single RefractionScaleX;
        [Abide.Guerilla.Tags.FieldAttribute("refraction scale y", typeof(Single))]
        public Single RefractionScaleY;
        [Abide.Guerilla.Tags.FieldAttribute("mouse cursor definition", typeof(TagReference))]
        public TagReference MouseCursorDefinition;
        public int Size
        {
            get
            {
                return 140;
            }
        }
        public void Initialize()
        {
        }
        public void Read(System.IO.BinaryReader reader)
        {
        }
        public void Write(System.IO.BinaryWriter writer)
        {
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(112, 4)]
        public sealed class WindowPaneReferenceBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(2)]
            public Byte[] EmptyString;
            [Abide.Guerilla.Tags.FieldAttribute("animation index", typeof(Int16))]
            [Abide.Guerilla.Tags.OptionsAttribute(typeof(AnimationIndexOptions), false)]
            public Int16 AnimationIndex;
            [Abide.Guerilla.Tags.FieldAttribute("buttons", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("button_widget_reference_block", 64, typeof(ButtonWidgetReferenceBlock))]
            public TagBlock Buttons;
            [Abide.Guerilla.Tags.FieldAttribute("list block", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("list_reference_block", 1, typeof(ListReferenceBlock))]
            public TagBlock ListBlock;
            [Abide.Guerilla.Tags.FieldAttribute("table view", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("table_view_list_reference_block", 1, typeof(TableViewListReferenceBlock))]
            public TagBlock TableView;
            [Abide.Guerilla.Tags.FieldAttribute("text blocks", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("text_block_reference_block", 64, typeof(TextBlockReferenceBlock))]
            public TagBlock TextBlocks;
            [Abide.Guerilla.Tags.FieldAttribute("bitmap blocks", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("bitmap_block_reference_block", 64, typeof(BitmapBlockReferenceBlock))]
            public TagBlock BitmapBlocks;
            [Abide.Guerilla.Tags.FieldAttribute("model scene blocks", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("ui_model_scene_reference_block", 32, typeof(UiModelSceneReferenceBlock))]
            public TagBlock ModelSceneBlocks;
            [Abide.Guerilla.Tags.FieldAttribute("text-value blocks", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("s_text_value_pair_blocks_block_UNUSED", 100, typeof(STextValuePairBlocksBlockUnused))]
            public TagBlock TextValueBlocks;
            [Abide.Guerilla.Tags.FieldAttribute("hud blocks", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("hud_block_reference_block", 64, typeof(HudBlockReferenceBlock))]
            public TagBlock HudBlocks;
            [Abide.Guerilla.Tags.FieldAttribute("player blocks", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("player_block_reference_block", 64, typeof(PlayerBlockReferenceBlock))]
            public TagBlock PlayerBlocks;
            public int Size
            {
                get
                {
                    return 112;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(68, 4)]
            public sealed class ButtonWidgetReferenceBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("text flags", typeof(Int32))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(TextFlagsOptions), true)]
                public Int32 TextFlags;
                [Abide.Guerilla.Tags.FieldAttribute("animation index", typeof(Int16))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(AnimationIndexOptions), false)]
                public Int16 AnimationIndex;
                [Abide.Guerilla.Tags.FieldAttribute("intro animation delay milliseconds", typeof(Int16))]
                public Int16 IntroAnimationDelayMilliseconds;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(2)]
                public Byte[] EmptyString;
                [Abide.Guerilla.Tags.FieldAttribute("custom font", typeof(Int16))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(CustomFontOptions), false)]
                public Int16 CustomFont;
                [Abide.Guerilla.Tags.FieldAttribute("text color", typeof(ColorArgbF))]
                public ColorArgbF TextColor;
                [Abide.Guerilla.Tags.FieldAttribute("bounds", typeof(Vector2))]
                public Vector2 Bounds;
                [Abide.Guerilla.Tags.FieldAttribute("bitmap", typeof(TagReference))]
                public TagReference Bitmap;
                [Abide.Guerilla.Tags.FieldAttribute("bitmap offset#from top-left", typeof(Vector2))]
                public Vector2 BitmapOffset;
                [Abide.Guerilla.Tags.FieldAttribute("string id", typeof(StringId))]
                public StringId StringId;
                [Abide.Guerilla.Tags.FieldAttribute("render depth bias", typeof(Int16))]
                public Int16 RenderDepthBias;
                [Abide.Guerilla.Tags.FieldAttribute("mouse region top offset", typeof(Int16))]
                public Int16 MouseRegionTopOffset;
                [Abide.Guerilla.Tags.FieldAttribute("button flags", typeof(Int32))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(ButtonFlagsOptions), true)]
                public Int32 ButtonFlags;
                public int Size
                {
                    get
                    {
                        return 68;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                public enum TextFlagsOptions
                {
                    LeftJustifyText = 1,
                    RightJustifyText = 2,
                    PulsatingText = 4,
                    CalloutText = 8,
                    Small31CharBuffer = 16,
                }
                public enum AnimationIndexOptions
                {
                    None = 0,
                    _00 = 1,
                    _01 = 2,
                    _02 = 3,
                    _03 = 4,
                    _04 = 5,
                    _05 = 6,
                    _06 = 7,
                    _07 = 8,
                    _08 = 9,
                    _09 = 10,
                    _10 = 11,
                    _11 = 12,
                    _12 = 13,
                    _13 = 14,
                    _14 = 15,
                    _15 = 16,
                    _16 = 17,
                    _17 = 18,
                    _18 = 19,
                    _19 = 20,
                    _20 = 21,
                    _21 = 22,
                    _22 = 23,
                    _23 = 24,
                    _24 = 25,
                    _25 = 26,
                    _26 = 27,
                    _27 = 28,
                    _28 = 29,
                    _29 = 30,
                    _30 = 31,
                    _31 = 32,
                    _32 = 33,
                    _33 = 34,
                    _34 = 35,
                    _35 = 36,
                    _36 = 37,
                    _37 = 38,
                    _38 = 39,
                    _39 = 40,
                    _40 = 41,
                    _41 = 42,
                    _42 = 43,
                    _43 = 44,
                    _44 = 45,
                    _45 = 46,
                    _46 = 47,
                    _47 = 48,
                    _48 = 49,
                    _49 = 50,
                    _50 = 51,
                    _51 = 52,
                    _52 = 53,
                    _53 = 54,
                    _54 = 55,
                    _55 = 56,
                    _56 = 57,
                    _57 = 58,
                    _58 = 59,
                    _59 = 60,
                    _60 = 61,
                    _61 = 62,
                    _62 = 63,
                    _63 = 64,
                }
                public enum CustomFontOptions
                {
                    Terminal = 0,
                    BodyText = 1,
                    Title = 2,
                    SuperLargeFont = 3,
                    LargeBodyText = 4,
                    SplitScreenHudMessage = 5,
                    FullScreenHudMessage = 6,
                    EnglishBodyText = 7,
                    HudNumberText = 8,
                    SubtitleFont = 9,
                    MainMenuFont = 10,
                    TextChatFont = 11,
                }
                public enum ButtonFlagsOptions
                {
                    DoesntTabVertically = 1,
                    DoesntTabHorizontally = 2,
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(28, 4)]
            public sealed class ListReferenceBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("flags", typeof(Int32))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
                public Int32 Flags;
                [Abide.Guerilla.Tags.FieldAttribute("skin index", typeof(Int16))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(SkinIndexOptions), false)]
                public Int16 SkinIndex;
                [Abide.Guerilla.Tags.FieldAttribute("num. visible items", typeof(Int16))]
                public Int16 NumVisibleItems;
                [Abide.Guerilla.Tags.FieldAttribute("bottom left", typeof(Vector2))]
                public Vector2 BottomLeft;
                [Abide.Guerilla.Tags.FieldAttribute("animation index", typeof(Int16))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(AnimationIndexOptions), false)]
                public Int16 AnimationIndex;
                [Abide.Guerilla.Tags.FieldAttribute("intro animation delay milliseconds", typeof(Int16))]
                public Int16 IntroAnimationDelayMilliseconds;
                [Abide.Guerilla.Tags.FieldAttribute("UNUSED", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("s_text_value_pair_reference_block_UNUSED", 100, typeof(STextValuePairReferenceBlockUnused))]
                public TagBlock Unused1;
                public int Size
                {
                    get
                    {
                        return 28;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(20, 4)]
                public sealed class STextValuePairReferenceBlockUnused : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("value type", typeof(Int16))]
                    [Abide.Guerilla.Tags.OptionsAttribute(typeof(ValueTypeOptions), false)]
                    public Int16 ValueType;
                    [Abide.Guerilla.Tags.FieldAttribute("boolean value", typeof(Int16))]
                    [Abide.Guerilla.Tags.OptionsAttribute(typeof(BooleanValueOptions), false)]
                    public Int16 BooleanValue;
                    [Abide.Guerilla.Tags.FieldAttribute("integer value", typeof(Int32))]
                    public Int32 IntegerValue;
                    [Abide.Guerilla.Tags.FieldAttribute("fp value", typeof(Single))]
                    public Single FpValue;
                    [Abide.Guerilla.Tags.FieldAttribute("text value string_id", typeof(StringId))]
                    public StringId TextValueStringId;
                    [Abide.Guerilla.Tags.FieldAttribute("text label string_id", typeof(StringId))]
                    public StringId TextLabelStringId;
                    public int Size
                    {
                        get
                        {
                            return 20;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    public enum ValueTypeOptions
                    {
                        IntegerNumber = 0,
                        FloatingPointNumber = 1,
                        Boolean = 2,
                        TextString = 3,
                    }
                    public enum BooleanValueOptions
                    {
                        False = 0,
                        True = 1,
                    }
                }
                public enum FlagsOptions
                {
                    ListWraps = 1,
                    Interactive = 2,
                }
                public enum SkinIndexOptions
                {
                    Default = 0,
                    SquadLobbyPlayerList = 1,
                    SettingsList = 2,
                    PlaylistEntryList = 3,
                    Variants = 4,
                    GameBrowser = 5,
                    OnlinePlayerMenu = 6,
                    GameSetupMenu = 7,
                    PlaylistContentsDisplay = 8,
                    PlayerProfilePicker = 9,
                    MpMapSelection = 10,
                    MainMenuList = 11,
                    ColorPicker = 12,
                    ProfilePicker = 13,
                    YMenuRecentList = 14,
                    PcrTeamStats = 15,
                    PcrPlayerStats = 16,
                    PcrKillStats = 17,
                    PcrPvpStats = 18,
                    PcrMedalStats = 19,
                    MatchmakingProgress = 20,
                    Default5 = 21,
                    Default6 = 22,
                    AdvancedSettingsList = 23,
                    LiveGameBrowser = 24,
                    DefaultWide = 25,
                    Unused26 = 26,
                    Unused27 = 27,
                    Unused28 = 28,
                    Unused29 = 29,
                    Unused30 = 30,
                    Unused31 = 31,
                }
                public enum AnimationIndexOptions
                {
                    None = 0,
                    _00 = 1,
                    _01 = 2,
                    _02 = 3,
                    _03 = 4,
                    _04 = 5,
                    _05 = 6,
                    _06 = 7,
                    _07 = 8,
                    _08 = 9,
                    _09 = 10,
                    _10 = 11,
                    _11 = 12,
                    _12 = 13,
                    _13 = 14,
                    _14 = 15,
                    _15 = 16,
                    _16 = 17,
                    _17 = 18,
                    _18 = 19,
                    _19 = 20,
                    _20 = 21,
                    _21 = 22,
                    _22 = 23,
                    _23 = 24,
                    _24 = 25,
                    _25 = 26,
                    _26 = 27,
                    _27 = 28,
                    _28 = 29,
                    _29 = 30,
                    _30 = 31,
                    _31 = 32,
                    _32 = 33,
                    _33 = 34,
                    _34 = 35,
                    _35 = 36,
                    _36 = 37,
                    _37 = 38,
                    _38 = 39,
                    _39 = 40,
                    _40 = 41,
                    _41 = 42,
                    _42 = 43,
                    _43 = 44,
                    _44 = 45,
                    _45 = 46,
                    _46 = 47,
                    _47 = 48,
                    _48 = 49,
                    _49 = 50,
                    _50 = 51,
                    _51 = 52,
                    _52 = 53,
                    _53 = 54,
                    _54 = 55,
                    _55 = 56,
                    _56 = 57,
                    _57 = 58,
                    _58 = 59,
                    _59 = 60,
                    _60 = 61,
                    _61 = 62,
                    _62 = 63,
                    _63 = 64,
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(44, 4)]
            public sealed class TableViewListReferenceBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("flags", typeof(Int32))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
                public Int32 Flags;
                [Abide.Guerilla.Tags.FieldAttribute("animation index", typeof(Int16))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(AnimationIndexOptions), false)]
                public Int16 AnimationIndex;
                [Abide.Guerilla.Tags.FieldAttribute("intro animation delay milliseconds", typeof(Int16))]
                public Int16 IntroAnimationDelayMilliseconds;
                [Abide.Guerilla.Tags.FieldAttribute("custom font", typeof(Int16))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(CustomFontOptions), false)]
                public Int16 CustomFont;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(2)]
                public Byte[] EmptyString;
                [Abide.Guerilla.Tags.FieldAttribute("text color", typeof(ColorArgbF))]
                public ColorArgbF TextColor;
                [Abide.Guerilla.Tags.FieldAttribute("top-left", typeof(Vector2))]
                public Vector2 TopLeft;
                [Abide.Guerilla.Tags.FieldAttribute("table rows", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("table_view_list_row_reference_block", 16, typeof(TableViewListRowReferenceBlock))]
                public TagBlock TableRows;
                public int Size
                {
                    get
                    {
                        return 44;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(20, 4)]
                public sealed class TableViewListRowReferenceBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("flags", typeof(Int32))]
                    [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
                    public Int32 Flags;
                    [Abide.Guerilla.Tags.FieldAttribute("row height", typeof(Int16))]
                    public Int16 RowHeight;
                    [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                    [Abide.Guerilla.Tags.PaddingAttribute(2)]
                    public Byte[] EmptyString;
                    [Abide.Guerilla.Tags.FieldAttribute("row cells", typeof(TagBlock))]
                    [Abide.Guerilla.Tags.BlockAttribute("table_view_list_item_reference_block", 8, typeof(TableViewListItemReferenceBlock))]
                    public TagBlock RowCells;
                    public int Size
                    {
                        get
                        {
                            return 20;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(36, 4)]
                    public sealed class TableViewListItemReferenceBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("text flags", typeof(Int32))]
                        [Abide.Guerilla.Tags.OptionsAttribute(typeof(TextFlagsOptions), true)]
                        public Int32 TextFlags;
                        [Abide.Guerilla.Tags.FieldAttribute("cell width", typeof(Int16))]
                        public Int16 CellWidth;
                        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                        [Abide.Guerilla.Tags.PaddingAttribute(2)]
                        public Byte[] EmptyString;
                        [Abide.Guerilla.Tags.FieldAttribute("bitmap top-left:if there is a bitmap", typeof(Vector2))]
                        public Vector2 BitmapTopLeft;
                        [Abide.Guerilla.Tags.FieldAttribute("bitmap tag", typeof(TagReference))]
                        public TagReference BitmapTag;
                        [Abide.Guerilla.Tags.FieldAttribute("string id", typeof(StringId))]
                        public StringId StringId;
                        [Abide.Guerilla.Tags.FieldAttribute("render depth bias", typeof(Int16))]
                        public Int16 RenderDepthBias;
                        [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                        [Abide.Guerilla.Tags.PaddingAttribute(2)]
                        public Byte[] EmptyString1;
                        public int Size
                        {
                            get
                            {
                                return 36;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                        public enum TextFlagsOptions
                        {
                            LeftJustifyText = 1,
                            RightJustifyText = 2,
                            PulsatingText = 4,
                            CalloutText = 8,
                            Small31CharBuffer = 16,
                        }
                    }
                    public enum FlagsOptions
                    {
                        Unused = 1,
                    }
                }
                public enum FlagsOptions
                {
                    Unused = 1,
                }
                public enum AnimationIndexOptions
                {
                    None = 0,
                    _00 = 1,
                    _01 = 2,
                    _02 = 3,
                    _03 = 4,
                    _04 = 5,
                    _05 = 6,
                    _06 = 7,
                    _07 = 8,
                    _08 = 9,
                    _09 = 10,
                    _10 = 11,
                    _11 = 12,
                    _12 = 13,
                    _13 = 14,
                    _14 = 15,
                    _15 = 16,
                    _16 = 17,
                    _17 = 18,
                    _18 = 19,
                    _19 = 20,
                    _20 = 21,
                    _21 = 22,
                    _22 = 23,
                    _23 = 24,
                    _24 = 25,
                    _25 = 26,
                    _26 = 27,
                    _27 = 28,
                    _28 = 29,
                    _29 = 30,
                    _30 = 31,
                    _31 = 32,
                    _32 = 33,
                    _33 = 34,
                    _34 = 35,
                    _35 = 36,
                    _36 = 37,
                    _37 = 38,
                    _38 = 39,
                    _39 = 40,
                    _40 = 41,
                    _41 = 42,
                    _42 = 43,
                    _43 = 44,
                    _44 = 45,
                    _45 = 46,
                    _46 = 47,
                    _47 = 48,
                    _48 = 49,
                    _49 = 50,
                    _50 = 51,
                    _51 = 52,
                    _52 = 53,
                    _53 = 54,
                    _54 = 55,
                    _55 = 56,
                    _56 = 57,
                    _57 = 58,
                    _58 = 59,
                    _59 = 60,
                    _60 = 61,
                    _61 = 62,
                    _62 = 63,
                    _63 = 64,
                }
                public enum CustomFontOptions
                {
                    Terminal = 0,
                    BodyText = 1,
                    Title = 2,
                    SuperLargeFont = 3,
                    LargeBodyText = 4,
                    SplitScreenHudMessage = 5,
                    FullScreenHudMessage = 6,
                    EnglishBodyText = 7,
                    HudNumberText = 8,
                    SubtitleFont = 9,
                    MainMenuFont = 10,
                    TextChatFont = 11,
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(44, 4)]
            public sealed class TextBlockReferenceBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("text flags", typeof(Int32))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(TextFlagsOptions), true)]
                public Int32 TextFlags;
                [Abide.Guerilla.Tags.FieldAttribute("animation index", typeof(Int16))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(AnimationIndexOptions), false)]
                public Int16 AnimationIndex;
                [Abide.Guerilla.Tags.FieldAttribute("intro animation delay milliseconds", typeof(Int16))]
                public Int16 IntroAnimationDelayMilliseconds;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(2)]
                public Byte[] EmptyString;
                [Abide.Guerilla.Tags.FieldAttribute("custom font", typeof(Int16))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(CustomFontOptions), false)]
                public Int16 CustomFont;
                [Abide.Guerilla.Tags.FieldAttribute("text color", typeof(ColorArgbF))]
                public ColorArgbF TextColor;
                [Abide.Guerilla.Tags.FieldAttribute("text bounds", typeof(Vector2))]
                public Vector2 TextBounds;
                [Abide.Guerilla.Tags.FieldAttribute("string id", typeof(StringId))]
                public StringId StringId;
                [Abide.Guerilla.Tags.FieldAttribute("render depth bias", typeof(Int16))]
                public Int16 RenderDepthBias;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(2)]
                public Byte[] EmptyString1;
                public int Size
                {
                    get
                    {
                        return 44;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                public enum TextFlagsOptions
                {
                    LeftJustifyText = 1,
                    RightJustifyText = 2,
                    PulsatingText = 4,
                    CalloutText = 8,
                    Small31CharBuffer = 16,
                }
                public enum AnimationIndexOptions
                {
                    None = 0,
                    _00 = 1,
                    _01 = 2,
                    _02 = 3,
                    _03 = 4,
                    _04 = 5,
                    _05 = 6,
                    _06 = 7,
                    _07 = 8,
                    _08 = 9,
                    _09 = 10,
                    _10 = 11,
                    _11 = 12,
                    _12 = 13,
                    _13 = 14,
                    _14 = 15,
                    _15 = 16,
                    _16 = 17,
                    _17 = 18,
                    _18 = 19,
                    _19 = 20,
                    _20 = 21,
                    _21 = 22,
                    _22 = 23,
                    _23 = 24,
                    _24 = 25,
                    _25 = 26,
                    _26 = 27,
                    _27 = 28,
                    _28 = 29,
                    _29 = 30,
                    _30 = 31,
                    _31 = 32,
                    _32 = 33,
                    _33 = 34,
                    _34 = 35,
                    _35 = 36,
                    _36 = 37,
                    _37 = 38,
                    _38 = 39,
                    _39 = 40,
                    _40 = 41,
                    _41 = 42,
                    _42 = 43,
                    _43 = 44,
                    _44 = 45,
                    _45 = 46,
                    _46 = 47,
                    _47 = 48,
                    _48 = 49,
                    _49 = 50,
                    _50 = 51,
                    _51 = 52,
                    _52 = 53,
                    _53 = 54,
                    _54 = 55,
                    _55 = 56,
                    _56 = 57,
                    _57 = 58,
                    _58 = 59,
                    _59 = 60,
                    _60 = 61,
                    _61 = 62,
                    _62 = 63,
                    _63 = 64,
                }
                public enum CustomFontOptions
                {
                    Terminal = 0,
                    BodyText = 1,
                    Title = 2,
                    SuperLargeFont = 3,
                    LargeBodyText = 4,
                    SplitScreenHudMessage = 5,
                    FullScreenHudMessage = 6,
                    EnglishBodyText = 7,
                    HudNumberText = 8,
                    SubtitleFont = 9,
                    MainMenuFont = 10,
                    TextChatFont = 11,
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(64, 4)]
            public sealed class BitmapBlockReferenceBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("flags", typeof(Int32))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
                public Int32 Flags;
                [Abide.Guerilla.Tags.FieldAttribute("animation index", typeof(Int16))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(AnimationIndexOptions), false)]
                public Int16 AnimationIndex;
                [Abide.Guerilla.Tags.FieldAttribute("intro animation delay milliseconds", typeof(Int16))]
                public Int16 IntroAnimationDelayMilliseconds;
                [Abide.Guerilla.Tags.FieldAttribute("bitmap blend method", typeof(Int16))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(BitmapBlendMethodOptions), false)]
                public Int16 BitmapBlendMethod;
                [Abide.Guerilla.Tags.FieldAttribute("initial sprite frame", typeof(Int16))]
                public Int16 InitialSpriteFrame;
                [Abide.Guerilla.Tags.FieldAttribute("top-left", typeof(Vector2))]
                public Vector2 TopLeft;
                [Abide.Guerilla.Tags.FieldAttribute("horiz texture wraps/second", typeof(Single))]
                public Single HorizTextureWrapssecond;
                [Abide.Guerilla.Tags.FieldAttribute("vert texture wraps/second", typeof(Single))]
                public Single VertTextureWrapssecond;
                [Abide.Guerilla.Tags.FieldAttribute("bitmap tag", typeof(TagReference))]
                public TagReference BitmapTag;
                [Abide.Guerilla.Tags.FieldAttribute("render depth bias", typeof(Int16))]
                public Int16 RenderDepthBias;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(2)]
                public Byte[] EmptyString;
                [Abide.Guerilla.Tags.FieldAttribute("sprite animation speed fps", typeof(Single))]
                public Single SpriteAnimationSpeedFps;
                [Abide.Guerilla.Tags.FieldAttribute("progress bottom-left", typeof(Vector2))]
                public Vector2 ProgressBottomLeft;
                [Abide.Guerilla.Tags.FieldAttribute("string identifier", typeof(StringId))]
                public StringId StringIdentifier;
                [Abide.Guerilla.Tags.FieldAttribute("progress scale", typeof(Vector2))]
                public Vector2 ProgressScale;
                public int Size
                {
                    get
                    {
                        return 64;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                public enum FlagsOptions
                {
                    IgnoreForListSkinSizeCalculation = 1,
                    SwapOnRelativeListPosition = 2,
                    RenderAsProgressBar = 4,
                }
                public enum AnimationIndexOptions
                {
                    None = 0,
                    _00 = 1,
                    _01 = 2,
                    _02 = 3,
                    _03 = 4,
                    _04 = 5,
                    _05 = 6,
                    _06 = 7,
                    _07 = 8,
                    _08 = 9,
                    _09 = 10,
                    _10 = 11,
                    _11 = 12,
                    _12 = 13,
                    _13 = 14,
                    _14 = 15,
                    _15 = 16,
                    _16 = 17,
                    _17 = 18,
                    _18 = 19,
                    _19 = 20,
                    _20 = 21,
                    _21 = 22,
                    _22 = 23,
                    _23 = 24,
                    _24 = 25,
                    _25 = 26,
                    _26 = 27,
                    _27 = 28,
                    _28 = 29,
                    _29 = 30,
                    _30 = 31,
                    _31 = 32,
                    _32 = 33,
                    _33 = 34,
                    _34 = 35,
                    _35 = 36,
                    _36 = 37,
                    _37 = 38,
                    _38 = 39,
                    _39 = 40,
                    _40 = 41,
                    _41 = 42,
                    _42 = 43,
                    _43 = 44,
                    _44 = 45,
                    _45 = 46,
                    _46 = 47,
                    _47 = 48,
                    _48 = 49,
                    _49 = 50,
                    _50 = 51,
                    _51 = 52,
                    _52 = 53,
                    _53 = 54,
                    _54 = 55,
                    _55 = 56,
                    _56 = 57,
                    _57 = 58,
                    _58 = 59,
                    _59 = 60,
                    _60 = 61,
                    _61 = 62,
                    _62 = 63,
                    _63 = 64,
                }
                public enum BitmapBlendMethodOptions
                {
                    Standard = 0,
                    Multiply = 1,
                    Unused = 2,
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(84, 4)]
            public sealed class UiModelSceneReferenceBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("flags", typeof(Int32))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
                public Int32 Flags;
                [Abide.Guerilla.Tags.FieldAttribute("animation index", typeof(Int16))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(AnimationIndexOptions), false)]
                public Int16 AnimationIndex;
                [Abide.Guerilla.Tags.FieldAttribute("intro animation delay milliseconds", typeof(Int16))]
                public Int16 IntroAnimationDelayMilliseconds;
                [Abide.Guerilla.Tags.FieldAttribute("render depth bias", typeof(Int16))]
                public Int16 RenderDepthBias;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(2)]
                public Byte[] EmptyString;
                [Abide.Guerilla.Tags.FieldAttribute("objects", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("ui_object_reference_block", 32, typeof(UiObjectReferenceBlock))]
                public TagBlock Objects;
                [Abide.Guerilla.Tags.FieldAttribute("lights", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("ui_light_reference_block", 8, typeof(UiLightReferenceBlock))]
                public TagBlock Lights;
                [Abide.Guerilla.Tags.FieldAttribute("animation scale factor", typeof(Vector3))]
                public Vector3 AnimationScaleFactor;
                [Abide.Guerilla.Tags.FieldAttribute("camera position", typeof(Vector3))]
                public Vector3 CameraPosition;
                [Abide.Guerilla.Tags.FieldAttribute("fov degress", typeof(Single))]
                public Single FovDegress;
                [Abide.Guerilla.Tags.FieldAttribute("ui viewport", typeof(Vector2))]
                public Vector2 UiViewport;
                [Abide.Guerilla.Tags.FieldAttribute("UNUSED intro anim", typeof(StringId))]
                public StringId UnusedIntroAnim;
                [Abide.Guerilla.Tags.FieldAttribute("UNUSED outro anim", typeof(StringId))]
                public StringId UnusedOutroAnim;
                [Abide.Guerilla.Tags.FieldAttribute("UNUSED ambient anim", typeof(StringId))]
                public StringId UnusedAmbientAnim;
                public int Size
                {
                    get
                    {
                        return 84;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(32, 4)]
                public sealed class UiObjectReferenceBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("name", typeof(String32))]
                    public String32 Name;
                    public int Size
                    {
                        get
                        {
                            return 32;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(32, 4)]
                public sealed class UiLightReferenceBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("name", typeof(String32))]
                    public String32 Name;
                    public int Size
                    {
                        get
                        {
                            return 32;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                }
                public enum FlagsOptions
                {
                    Unused = 1,
                }
                public enum AnimationIndexOptions
                {
                    None = 0,
                    _00 = 1,
                    _01 = 2,
                    _02 = 3,
                    _03 = 4,
                    _04 = 5,
                    _05 = 6,
                    _06 = 7,
                    _07 = 8,
                    _08 = 9,
                    _09 = 10,
                    _10 = 11,
                    _11 = 12,
                    _12 = 13,
                    _13 = 14,
                    _14 = 15,
                    _15 = 16,
                    _16 = 17,
                    _17 = 18,
                    _18 = 19,
                    _19 = 20,
                    _20 = 21,
                    _21 = 22,
                    _22 = 23,
                    _23 = 24,
                    _24 = 25,
                    _25 = 26,
                    _26 = 27,
                    _27 = 28,
                    _28 = 29,
                    _29 = 30,
                    _30 = 31,
                    _31 = 32,
                    _32 = 33,
                    _33 = 34,
                    _34 = 35,
                    _35 = 36,
                    _36 = 37,
                    _37 = 38,
                    _38 = 39,
                    _39 = 40,
                    _40 = 41,
                    _41 = 42,
                    _42 = 43,
                    _43 = 44,
                    _44 = 45,
                    _45 = 46,
                    _46 = 47,
                    _47 = 48,
                    _48 = 49,
                    _49 = 50,
                    _50 = 51,
                    _51 = 52,
                    _52 = 53,
                    _53 = 54,
                    _54 = 55,
                    _55 = 56,
                    _56 = 57,
                    _57 = 58,
                    _58 = 59,
                    _59 = 60,
                    _60 = 61,
                    _61 = 62,
                    _62 = 63,
                    _63 = 64,
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(44, 4)]
            public sealed class STextValuePairBlocksBlockUnused : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("name", typeof(String32))]
                public String32 Name;
                [Abide.Guerilla.Tags.FieldAttribute("text value pairs", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("s_text_value_pair_reference_block_UNUSED", 100, typeof(STextValuePairReferenceBlockUnused))]
                public TagBlock TextValuePairs;
                public int Size
                {
                    get
                    {
                        return 44;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(20, 4)]
                public sealed class STextValuePairReferenceBlockUnused : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("value type", typeof(Int16))]
                    [Abide.Guerilla.Tags.OptionsAttribute(typeof(ValueTypeOptions), false)]
                    public Int16 ValueType;
                    [Abide.Guerilla.Tags.FieldAttribute("boolean value", typeof(Int16))]
                    [Abide.Guerilla.Tags.OptionsAttribute(typeof(BooleanValueOptions), false)]
                    public Int16 BooleanValue;
                    [Abide.Guerilla.Tags.FieldAttribute("integer value", typeof(Int32))]
                    public Int32 IntegerValue;
                    [Abide.Guerilla.Tags.FieldAttribute("fp value", typeof(Single))]
                    public Single FpValue;
                    [Abide.Guerilla.Tags.FieldAttribute("text value string_id", typeof(StringId))]
                    public StringId TextValueStringId;
                    [Abide.Guerilla.Tags.FieldAttribute("text label string_id", typeof(StringId))]
                    public StringId TextLabelStringId;
                    public int Size
                    {
                        get
                        {
                            return 20;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    public enum ValueTypeOptions
                    {
                        IntegerNumber = 0,
                        FloatingPointNumber = 1,
                        Boolean = 2,
                        TextString = 3,
                    }
                    public enum BooleanValueOptions
                    {
                        False = 0,
                        True = 1,
                    }
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(52, 4)]
            public sealed class HudBlockReferenceBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("flags", typeof(Int32))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
                public Int32 Flags;
                [Abide.Guerilla.Tags.FieldAttribute("animation index", typeof(Int16))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(AnimationIndexOptions), false)]
                public Int16 AnimationIndex;
                [Abide.Guerilla.Tags.FieldAttribute("intro animation delay milliseconds", typeof(Int16))]
                public Int16 IntroAnimationDelayMilliseconds;
                [Abide.Guerilla.Tags.FieldAttribute("render depth bias", typeof(Int16))]
                public Int16 RenderDepthBias;
                [Abide.Guerilla.Tags.FieldAttribute("starting bitmap sequence index", typeof(Int16))]
                public Int16 StartingBitmapSequenceIndex;
                [Abide.Guerilla.Tags.FieldAttribute("bitmap", typeof(TagReference))]
                public TagReference Bitmap;
                [Abide.Guerilla.Tags.FieldAttribute("shader", typeof(TagReference))]
                public TagReference Shader;
                [Abide.Guerilla.Tags.FieldAttribute("bounds", typeof(Vector2))]
                public Vector2 Bounds;
                public int Size
                {
                    get
                    {
                        return 52;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                public enum FlagsOptions
                {
                    IgnoreForListSkinSize = 1,
                    NeedsValidRank = 2,
                }
                public enum AnimationIndexOptions
                {
                    None = 0,
                    _00 = 1,
                    _01 = 2,
                    _02 = 3,
                    _03 = 4,
                    _04 = 5,
                    _05 = 6,
                    _06 = 7,
                    _07 = 8,
                    _08 = 9,
                    _09 = 10,
                    _10 = 11,
                    _11 = 12,
                    _12 = 13,
                    _13 = 14,
                    _14 = 15,
                    _15 = 16,
                    _16 = 17,
                    _17 = 18,
                    _18 = 19,
                    _19 = 20,
                    _20 = 21,
                    _21 = 22,
                    _22 = 23,
                    _23 = 24,
                    _24 = 25,
                    _25 = 26,
                    _26 = 27,
                    _27 = 28,
                    _28 = 29,
                    _29 = 30,
                    _30 = 31,
                    _31 = 32,
                    _32 = 33,
                    _33 = 34,
                    _34 = 35,
                    _35 = 36,
                    _36 = 37,
                    _37 = 38,
                    _38 = 39,
                    _39 = 40,
                    _40 = 41,
                    _41 = 42,
                    _42 = 43,
                    _43 = 44,
                    _44 = 45,
                    _45 = 46,
                    _46 = 47,
                    _47 = 48,
                    _48 = 49,
                    _49 = 50,
                    _50 = 51,
                    _51 = 52,
                    _52 = 53,
                    _53 = 54,
                    _54 = 55,
                    _55 = 56,
                    _56 = 57,
                    _57 = 58,
                    _58 = 59,
                    _59 = 60,
                    _60 = 61,
                    _61 = 62,
                    _62 = 63,
                    _63 = 64,
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(32, 4)]
            public sealed class PlayerBlockReferenceBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(4)]
                public Byte[] EmptyString;
                [Abide.Guerilla.Tags.FieldAttribute("skin", typeof(TagReference))]
                public TagReference Skin;
                [Abide.Guerilla.Tags.FieldAttribute("bottom-left", typeof(Vector2))]
                public Vector2 BottomLeft;
                [Abide.Guerilla.Tags.FieldAttribute("table order", typeof(Byte))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(TableOrderOptions), false)]
                public Byte TableOrder;
                [Abide.Guerilla.Tags.FieldAttribute("maximum player count", typeof(Byte))]
                public Byte MaximumPlayerCount;
                [Abide.Guerilla.Tags.FieldAttribute("row count", typeof(Byte))]
                public Byte RowCount;
                [Abide.Guerilla.Tags.FieldAttribute("column count", typeof(Byte))]
                public Byte ColumnCount;
                [Abide.Guerilla.Tags.FieldAttribute("row height", typeof(Int16))]
                public Int16 RowHeight;
                [Abide.Guerilla.Tags.FieldAttribute("column width", typeof(Int16))]
                public Int16 ColumnWidth;
                public int Size
                {
                    get
                    {
                        return 32;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                public enum TableOrderOptions
                {
                    RowMajor = 0,
                    ColumnMajor = 1,
                }
            }
            public enum AnimationIndexOptions
            {
                None = 0,
                _00 = 1,
                _01 = 2,
                _02 = 3,
                _03 = 4,
                _04 = 5,
                _05 = 6,
                _06 = 7,
                _07 = 8,
                _08 = 9,
                _09 = 10,
                _10 = 11,
                _11 = 12,
                _12 = 13,
                _13 = 14,
                _14 = 15,
                _15 = 16,
                _16 = 17,
                _17 = 18,
                _18 = 19,
                _19 = 20,
                _20 = 21,
                _21 = 22,
                _22 = 23,
                _23 = 24,
                _24 = 25,
                _25 = 26,
                _26 = 27,
                _27 = 28,
                _28 = 29,
                _29 = 30,
                _30 = 31,
                _31 = 32,
                _32 = 33,
                _33 = 34,
                _34 = 35,
                _35 = 36,
                _36 = 37,
                _37 = 38,
                _38 = 39,
                _39 = 40,
                _40 = 41,
                _41 = 42,
                _42 = 43,
                _43 = 44,
                _44 = 45,
                _45 = 46,
                _46 = 47,
                _47 = 48,
                _48 = 49,
                _49 = 50,
                _50 = 51,
                _51 = 52,
                _52 = 53,
                _53 = 54,
                _54 = 55,
                _55 = 56,
                _56 = 57,
                _57 = 58,
                _58 = 59,
                _59 = 60,
                _60 = 61,
                _61 = 62,
                _62 = 63,
                _63 = 64,
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(16, 4)]
        public sealed class LocalStringIdListSectionReferenceBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("section name^", typeof(StringId))]
            public StringId SectionName;
            [Abide.Guerilla.Tags.FieldAttribute("local string section references", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("local_string_id_list_string_reference_block", 64, typeof(LocalStringIdListStringReferenceBlock))]
            public TagBlock LocalStringSectionReferences;
            public int Size
            {
                get
                {
                    return 16;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(4, 4)]
            public sealed class LocalStringIdListStringReferenceBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("string id", typeof(StringId))]
                public StringId StringId;
                public int Size
                {
                    get
                    {
                        return 4;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(16, 4)]
        public sealed class LocalBitmapReferenceBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("bitmap", typeof(TagReference))]
            public TagReference Bitmap;
            public int Size
            {
                get
                {
                    return 16;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
        }
        public enum FlagsOptions
        {
            _14ScreenDialog = 1,
            MultiplePanesAreForListFlavorItems = 2,
            NoHeaderText = 4,
            _12ScreenDialog = 8,
            LargeDialog = 16,
            DisableOverlayEffect = 32,
        }
        public enum ScreenIdOptions
        {
            Test = 0,
            Test1 = 1,
            Test2 = 2,
            Test3 = 3,
            Test4 = 4,
            GameShellBackground = 5,
            MainMenu = 6,
            ErrorDialogOkCancel = 7,
            ErrorDialogOk = 8,
            PressStartIntro = 9,
            PlayerProfileSelect = 10,
            SpLevelSelect = 11,
            SpDifficultySelect = 12,
            NetworkSquadBrowser = 13,
            MpPregameLobby = 14,
            CustomGameMenu = 15,
            PostgameStats = 16,
            MpMapSelect = 17,
            SpPauseGame = 18,
            Settings = 19,
            GamertagSelect = 20,
            GamertagPasscodeEntry = 21,
            MultiplayerProtocol = 22,
            SquadSettings = 23,
            SquadGameSettings = 24,
            SquadPrivacySettings = 25,
            YMenuGameshell = 26,
            YMenuGameshellCollapsed = 27,
            YMenuIngame = 28,
            YMenuIngameCollapsed = 29,
            _4wayJoinScreen = 30,
            YMenuPlayerSelectedOptions = 31,
            PlayerSelectedOptions = 32,
            ConfirmationDialog = 33,
            LiveFeedbackMenuDialog = 34,
            LiveMessageTypeDialog = 35,
            VoiceMsgDialog = 36,
            StereoFaceplate = 37,
            PlayerProfileEditMenu = 38,
            PpControllerSettings = 39,
            PpButtonSettings = 40,
            PpThumbstickSettings = 41,
            PpLookSensitivitySettings = 42,
            PpInvertLookSettings = 43,
            PpAutolevelSettings = 44,
            PpHandicapSettings = 45,
            PpHighScoreRecSettings = 46,
            PpMultiplayerSettingsMenu = 47,
            PpProfileDeleteConfirmationDlg = 48,
            PpChooseForegroundEmblem = 49,
            PpChoosePrimaryColor = 50,
            PpChooseSecondaryColor = 51,
            PpChooseModel = 52,
            PpVoiceSettingsMenu = 53,
            PpChooseVoiceMask = 54,
            PpVoiceThruTv = 55,
            PpEditRotationList = 56,
            PpXblStatusMenu = 57,
            PpAppearOffline = 58,
            PpAutoOffline = 59,
            GameEngineCategoryListing = 60,
            EditSlayerMenu = 61,
            EditKothMenu = 62,
            EditRaceMenu = 63,
            EditOddballMenu = 64,
            EditJuggernautMenu = 65,
            EditHeadhunterMenu = 66,
            EditCtfMenu = 67,
            EditAssaultMenu = 68,
            EditSlayerScoreToWin = 69,
            EditSlayerTimeLimit = 70,
            EditSlayerTeams = 71,
            EditSlayerScore4Killing = 72,
            EditSlayerKillInOrder = 73,
            EditSlayerDeathPtLoss = 74,
            EditSlayerSuicidePtLoss = 75,
            EditSlayerDmgAfterKill = 76,
            EditSlayerDmgAfterDeath = 77,
            EditSlayerSpeedAfterKill = 78,
            EditSlayerSpeedAfterDeath = 79,
            EditKothScoreToWin = 80,
            EditKothTimeLimit = 81,
            EditKothTeams = 82,
            EditKothMovingHills = 83,
            EditKothUncontesedControl = 84,
            EditKothXtraDmg = 85,
            EditRaceLapsToWin = 86,
            EditRaceTimeLimit = 87,
            EditRaceTeams = 88,
            EditRaceTeamScoring = 89,
            EditRaceType = 90,
            EditRaceFlagOrder = 91,
            EditRaceGameEndCondition = 92,
            EditRaceDmgWithLaps = 93,
            EditRaceSpeedWithLaps = 94,
            EditOddballTimeToWin = 95,
            EditOddballTimeLimit = 96,
            EditOddballTeams = 97,
            EditOddballBallSpawnCount = 98,
            EditOddballBallWaypoints = 99,
            EditOddballDamageWithBall = 100,
            EditOddballSpeedWithBall = 101,
            EditOddballInvisibilityWithBall = 102,
            EditJugScoreToWin = 103,
            EditJugTimeLimit = 104,
            EditJugPtsForKillingJugger = 105,
            EditJugCount = 106,
            EditJugSpecies = 107,
            EditJugStartingEquip = 108,
            EditJugDamage = 109,
            EditJugHealth = 110,
            EditJugSpeed = 111,
            EditJugRegeneration = 112,
            EditJugWaypoints = 113,
            EditHhScoreToWin = 114,
            EditHhTimeLimit = 115,
            EditHhTeams = 116,
            EditHhDeathPtLoss = 117,
            EditHhSuicidePtLoss = 118,
            EditHhSpeedWithToken = 119,
            EditHhDroppedTokenLifetime = 120,
            EditHhScoreMultiplier = 121,
            EditCtfScoreToWin = 122,
            EditCtfTimeLimit = 123,
            EditCtfTieResolution = 124,
            EditCtfSingleFlag = 125,
            EditCtfRoleSwapping = 126,
            EditCtfFlagAtHomeToScore = 127,
            EditCtfFlagMustReset = 128,
            EditCtfDmgWithFlag = 129,
            EditCtfSpeedWithFlag = 130,
            EditAssaultScoreToWin = 131,
            EditAssaultTimeLimit = 132,
            EditAssaultTieResolution = 133,
            EditAssaultSingleFlag = 134,
            EditAssaultRoleSwapping = 135,
            EditAssaultEnemyFlagAtHomeToScore = 136,
            EditAssaultFlagMustReset = 137,
            EditAssaultDmgWithFlag = 138,
            EditAssaultSpeedWithFlag = 139,
            EditPlayerNumberOfLives = 140,
            EditPlayerMaxHealth = 141,
            EditPlayerShields = 142,
            EditPlayerRespawnTime = 143,
            EditPlayerCount = 144,
            EditPlayerInvisibility = 145,
            EditPlayerSuicidePenalty = 146,
            EditPlayerFriendlyFire = 147,
            EditItemRespawnGrenades = 148,
            EditItemPowerups = 149,
            EditItemWeaponSet = 150,
            EditItemStartingEquipment = 151,
            EditItemWarthogs = 152,
            EditItemGhosts = 153,
            EditItemScorpions = 154,
            EditItemBanshees = 155,
            EditItemMongeese = 156,
            EditItemShadows = 157,
            EditItemWraiths = 158,
            EditIndicatorObjectives = 159,
            EditIndicatorPlayersOnMotionSensor = 160,
            EditIndicatorInvisiblePlayersOnMotionSensor = 161,
            EditIndicatorFriends = 162,
            EditIndicatorEnemies = 163,
            EditPlayerOptions = 164,
            EditItemOptions = 165,
            EditIndicatorOptions = 166,
            VirtualKeyboard = 167,
            CustomGameMenu1 = 168,
            SlayerQuickOptions = 169,
            KothQuickOptions = 170,
            RaceQuickOptions = 171,
            OddballQuickOptions = 172,
            JuggerQuickOptions = 173,
            HhQuickOptions = 174,
            CtfQuickOptions = 175,
            AssaultQuickOptions = 176,
            PickNewSquadLeader = 177,
            VariantEditingOptionsMenu = 178,
            PlaylistListSettings = 179,
            PlaylistContents = 180,
            PlaylistSelectedOptions = 181,
            XboxLiveTaskProgress = 182,
            PpVibrationSettings = 183,
            BootPlayerDialog = 184,
            PostgameStatsLobby = 185,
            XboxLiveMainMenu = 186,
            EditTerriesMenu = 187,
            EditTerriesScoreToWin = 188,
            EditTerriesTimeLimit = 189,
            EditTerriesTeams = 190,
            TerriesQuickOptions = 191,
            XboxLiveNotificationBeeper = 192,
            PlayerProfileSelectFancy = 193,
            SavedGameFileActionsDialog = 194,
            MpStartMenu = 195,
            MpStartPlayerSettings = 196,
            MpStartHandicapSettings = 197,
            MpStartChangeTeams = 198,
            MpStartAdminSettings = 199,
            MpStartControllerSettings = 200,
            MpStartVoiceSettings = 201,
            MpStartOnlineStatus = 202,
            MpalphaLegalWarning = 203,
            SquadJoinProgressDialog = 204,
            MpAlphaPostgameLegalWarning = 205,
            MpMapSelectLobby = 206,
            MpVariantTypeLobby = 207,
            MpVariantListLobby = 208,
            LoadingProgress = 209,
            MatchmakingProgress = 210,
            LiveMessageDisplay = 211,
            FadeInFromBlack = 212,
            LivePlayerProfile = 213,
            LiveClanProfile = 214,
            LiveMessageSend = 215,
            FriendsOptionsDialog = 216,
            ClanOptionsDialog = 217,
            CampaignOptionsDialog = 218,
            OptimatchHoppersFullscreen = 219,
            PlaylistListDialog = 220,
            VariantEditingFormat = 221,
            VariantQuickOptionsFormat = 222,
            VariantParamSettingFormat = 223,
            VehicleOptions = 224,
            MatchOptions = 225,
            PlayerOptions = 226,
            TeamOptions = 227,
            GameOptions = 228,
            EquipmentOptions = 229,
            MultipleChoiceDialog = 230,
            NetworkTransitionProgress = 231,
            XboxLiveStats = 232,
            PpChooseBackgroundEmblem = 233,
            PpButtonsQtr = 234,
            PpStixQtr = 235,
            ClanMemberPrivs = 236,
            OptimatchHoppersLobby = 237,
            SavedGameFileDialog = 238,
            Xyzzy = 239,
            ErrorOkCancelLarge = 240,
            Yzzyx = 241,
            SubtitleDisplay = 242,
            PpKeyboardSettings = 243,
            PpKeyboardSettingsQtr = 244,
            PpInvertDualWield = 245,
            SystemSettings = 246,
            BungieNews = 247,
            FilterSelect = 248,
            LiveGameBrowser = 249,
            GameDetails = 250,
            MpCustomMapSelect = 251,
            MpAllMapsSelect = 252,
            PpAdvancedKeyboardSettings = 253,
            PpAdvancedKeyboardSettingsQtr = 254,
            NetworkAdapterSettings = 255,
        }
        public enum ButtonKeyTypeOptions
        {
            None = 0,
            AEqualsSelectBEqualsBack = 1,
            AEqualsSelectBEqualsCancel = 2,
            AEqualsEnterBEqualsCancel = 3,
            YEqualsXboxLivePlayers = 4,
            XEqualsFriendsOptions = 5,
            XEqualsClanOptions = 6,
            XEqualsRecentPlayersOptions = 7,
            XEqualsOptions = 8,
            AEqualsSelect = 9,
            XEqualsSettingsAEqualsSelectBEqualsBack = 10,
            XEqualsDeleteAEqualsSelectBEqualsDone = 11,
            AEqualsAccept = 12,
            BEqualsCancel = 13,
            YEqualsXboxLivePlayersAEqualsSelectBEqualsBack = 14,
            YEqualsXboxLivePlayersAEqualsSelectBEqualsCancel = 15,
            YEqualsXboxLivePlayersAEqualsEnterBEqualsCancel = 16,
            YEqualsXboxLivePlayersAEqualsSelect = 17,
            YEqualsXboxLivePlayersAEqualsSelectBEqualsDone = 18,
            YEqualsXboxLivePlayersAEqualsAccept = 19,
            YEqualsXboxLivePlayersBEqualsCancel = 20,
            XEqualsDeleteAEqualsSelectBEqualsBack = 21,
            AEqualsOk = 22,
        }
        public enum ShapeGroupOptions
        {
            None = 0,
            _00 = 1,
            _01 = 2,
            _02 = 3,
            _03 = 4,
            _04 = 5,
            _05 = 6,
            _06 = 7,
            _07 = 8,
            _08 = 9,
            _09 = 10,
            _10 = 11,
            _11 = 12,
            _12 = 13,
            _13 = 14,
            _14 = 15,
            _15 = 16,
            _16 = 17,
            _17 = 18,
            _18 = 19,
            _19 = 20,
            _20 = 21,
            _21 = 22,
            _22 = 23,
            _23 = 24,
            _24 = 25,
            _25 = 26,
            _26 = 27,
            _27 = 28,
            _28 = 29,
            _29 = 30,
            _30 = 31,
            _31 = 32,
        }
    }
}
#pragma warning restore CS1591
