#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Abide.Guerilla.Tags
{
    using Abide.Guerilla.Types;
    using Abide.HaloLibrary;
    using System;
    
    [Abide.Guerilla.Tags.FieldSetAttribute(12, 4)]
    [Abide.Guerilla.Tags.TagGroupAttribute("chocolate_mountain", 1735156838u, 4294967293u, typeof(ChocolateMountainBlock))]
    public sealed class ChocolateMountainBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
    {
        [Abide.Guerilla.Tags.FieldAttribute("lighting variables", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("lighting_variables_block", 13, typeof(LightingVariablesBlock))]
        public TagBlock LightingVariables;
        public int Size
        {
            get
            {
                return 12;
            }
        }
        public void Initialize()
        {
        }
        public void Read(System.IO.BinaryReader reader)
        {
        }
        public void Write(System.IO.BinaryWriter writer)
        {
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(160, 4)]
        public sealed class LightingVariablesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("object affected", typeof(Int32))]
            [Abide.Guerilla.Tags.OptionsAttribute(typeof(ObjectAffectedOptions), true)]
            public Int32 ObjectAffected;
            [Abide.Guerilla.Tags.FieldAttribute("Lightmap brightness offset", typeof(Single))]
            public Single LightmapBrightnessOffset;
            [Abide.Guerilla.Tags.FieldAttribute("primary light", typeof(PrimaryLightStructBlock))]
            public PrimaryLightStructBlock PrimaryLight;
            [Abide.Guerilla.Tags.FieldAttribute("secondary light", typeof(SecondaryLightStructBlock))]
            public SecondaryLightStructBlock SecondaryLight;
            [Abide.Guerilla.Tags.FieldAttribute("ambient light", typeof(AmbientLightStructBlock))]
            public AmbientLightStructBlock AmbientLight;
            [Abide.Guerilla.Tags.FieldAttribute("lightmap shadows", typeof(LightmapShadowsStructBlock))]
            public LightmapShadowsStructBlock LightmapShadows;
            public int Size
            {
                get
                {
                    return 160;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(40, 4)]
            public sealed class PrimaryLightStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("Min lightmap color", typeof(ColorRgbF))]
                public ColorRgbF MinLightmapColor;
                [Abide.Guerilla.Tags.FieldAttribute("Max lightmap color", typeof(ColorRgbF))]
                public ColorRgbF MaxLightmapColor;
                [Abide.Guerilla.Tags.FieldAttribute("exclusion angle from up#degrees from up the direct light cannot be", typeof(Single))]
                public Single ExclusionAngleFromUp;
                [Abide.Guerilla.Tags.FieldAttribute("function", typeof(MappingFunctionBlock))]
                public MappingFunctionBlock Function1;
                public int Size
                {
                    get
                    {
                        return 40;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(12, 4)]
                public sealed class MappingFunctionBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("data", typeof(TagBlock))]
                    [Abide.Guerilla.Tags.BlockAttribute("byte_block", 1024, typeof(ByteBlock))]
                    public TagBlock Data;
                    public int Size
                    {
                        get
                        {
                            return 12;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(1, 4)]
                    public sealed class ByteBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Value", typeof(Byte))]
                        public Byte Value;
                        public int Size
                        {
                            get
                            {
                                return 1;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(64, 4)]
            public sealed class SecondaryLightStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("Min lightmap color", typeof(ColorRgbF))]
                public ColorRgbF MinLightmapColor;
                [Abide.Guerilla.Tags.FieldAttribute("Max lightmap color", typeof(ColorRgbF))]
                public ColorRgbF MaxLightmapColor;
                [Abide.Guerilla.Tags.FieldAttribute("Min diffuse sample", typeof(ColorRgbF))]
                public ColorRgbF MinDiffuseSample;
                [Abide.Guerilla.Tags.FieldAttribute("Max diffuse sample", typeof(ColorRgbF))]
                public ColorRgbF MaxDiffuseSample;
                [Abide.Guerilla.Tags.FieldAttribute("z axis rotation#degrees", typeof(Single))]
                public Single ZAxisRotation;
                [Abide.Guerilla.Tags.FieldAttribute("function", typeof(MappingFunctionBlock))]
                public MappingFunctionBlock Function1;
                public int Size
                {
                    get
                    {
                        return 64;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(12, 4)]
                public sealed class MappingFunctionBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("data", typeof(TagBlock))]
                    [Abide.Guerilla.Tags.BlockAttribute("byte_block", 1024, typeof(ByteBlock))]
                    public TagBlock Data;
                    public int Size
                    {
                        get
                        {
                            return 12;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(1, 4)]
                    public sealed class ByteBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Value", typeof(Byte))]
                        public Byte Value;
                        public int Size
                        {
                            get
                            {
                                return 1;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(36, 4)]
            public sealed class AmbientLightStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("Min lightmap sample", typeof(ColorRgbF))]
                public ColorRgbF MinLightmapSample;
                [Abide.Guerilla.Tags.FieldAttribute("Max lightmap sample", typeof(ColorRgbF))]
                public ColorRgbF MaxLightmapSample;
                [Abide.Guerilla.Tags.FieldAttribute("function", typeof(MappingFunctionBlock))]
                public MappingFunctionBlock Function1;
                public int Size
                {
                    get
                    {
                        return 36;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(12, 4)]
                public sealed class MappingFunctionBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("data", typeof(TagBlock))]
                    [Abide.Guerilla.Tags.BlockAttribute("byte_block", 1024, typeof(ByteBlock))]
                    public TagBlock Data;
                    public int Size
                    {
                        get
                        {
                            return 12;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(1, 4)]
                    public sealed class ByteBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Value", typeof(Byte))]
                        public Byte Value;
                        public int Size
                        {
                            get
                            {
                                return 1;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                }
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(12, 4)]
            public sealed class LightmapShadowsStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("function 1", typeof(MappingFunctionBlock))]
                public MappingFunctionBlock Function1;
                public int Size
                {
                    get
                    {
                        return 12;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(12, 4)]
                public sealed class MappingFunctionBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("data", typeof(TagBlock))]
                    [Abide.Guerilla.Tags.BlockAttribute("byte_block", 1024, typeof(ByteBlock))]
                    public TagBlock Data;
                    public int Size
                    {
                        get
                        {
                            return 12;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(1, 4)]
                    public sealed class ByteBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Value", typeof(Byte))]
                        public Byte Value;
                        public int Size
                        {
                            get
                            {
                                return 1;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                }
            }
            public enum ObjectAffectedOptions
            {
                All = 1,
                Biped = 2,
                Vehicle = 4,
                Weapon = 8,
                Equipment = 16,
                Garbage = 32,
                Projectile = 64,
                Scenery = 128,
                Machine = 256,
                Control = 512,
                LightFixture = 1024,
                SoundScenery = 2048,
                Crate = 4096,
                Creature = 8192,
            }
        }
    }
}
#pragma warning restore CS1591
