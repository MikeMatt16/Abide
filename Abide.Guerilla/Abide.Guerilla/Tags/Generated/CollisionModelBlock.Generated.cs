#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Abide.Guerilla.Tags
{
    using Abide.Guerilla.Types;
    using Abide.HaloLibrary;
    using System;
    
    [Abide.Guerilla.Tags.FieldSetAttribute(76, 4)]
    [Abide.Guerilla.Tags.TagGroupAttribute("collision_model", 1668246636u, 4294967293u, typeof(CollisionModelBlock))]
    public sealed class CollisionModelBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
    {
        [Abide.Guerilla.Tags.FieldAttribute("import info*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("import info", 1, typeof(GlobalTagImportInfoBlock))]
        public TagBlock ImportInfo;
        [Abide.Guerilla.Tags.FieldAttribute("errors*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("error report category", 64, typeof(GlobalErrorReportCategoriesBlock))]
        public TagBlock Errors;
        [Abide.Guerilla.Tags.FieldAttribute("flags*", typeof(Int32))]
        [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
        public Int32 Flags;
        [Abide.Guerilla.Tags.FieldAttribute("materials*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("material", 32, typeof(CollisionModelMaterialBlock))]
        public TagBlock Materials;
        [Abide.Guerilla.Tags.FieldAttribute("regions*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("region", 16, typeof(CollisionModelRegionBlock))]
        public TagBlock Regions;
        [Abide.Guerilla.Tags.FieldAttribute("pathfinding spheres*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("sphere", 32, typeof(CollisionModelPathfindingSphereBlock))]
        public TagBlock PathfindingSpheres;
        [Abide.Guerilla.Tags.FieldAttribute("nodes*", typeof(TagBlock))]
        [Abide.Guerilla.Tags.BlockAttribute("collision_model_node_block", 255, typeof(CollisionModelNodeBlock))]
        public TagBlock Nodes;
        public int Size
        {
            get
            {
                return 76;
            }
        }
        public void Initialize()
        {
        }
        public void Read(System.IO.BinaryReader reader)
        {
        }
        public void Write(System.IO.BinaryWriter writer)
        {
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(596, 4)]
        public sealed class GlobalTagImportInfoBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("build*", typeof(Int32))]
            public Int32 Build;
            [Abide.Guerilla.Tags.FieldAttribute("version*", typeof(String256))]
            public String256 Version;
            [Abide.Guerilla.Tags.FieldAttribute("import date*", typeof(String32))]
            public String32 ImportDate;
            [Abide.Guerilla.Tags.FieldAttribute("culprit*", typeof(String32))]
            public String32 Culprit;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(96)]
            public Byte[] EmptyString;
            [Abide.Guerilla.Tags.FieldAttribute("import time*", typeof(String32))]
            public String32 ImportTime;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(4)]
            public Byte[] EmptyString1;
            [Abide.Guerilla.Tags.FieldAttribute("files*", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("import file", 1024, typeof(TagImportFileBlock))]
            public TagBlock Files;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(128)]
            public Byte[] EmptyString2;
            public int Size
            {
                get
                {
                    return 596;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(540, 4)]
            public sealed class TagImportFileBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("path*", typeof(String256))]
                public String256 Path;
                [Abide.Guerilla.Tags.FieldAttribute("modification date*", typeof(String32))]
                public String32 ModificationDate;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(8)]
                public Byte[] EmptyString;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(88)]
                public Byte[] EmptyString1;
                [Abide.Guerilla.Tags.FieldAttribute("checksum*:crc32", typeof(Int32))]
                public Int32 Checksum;
                [Abide.Guerilla.Tags.FieldAttribute("size*:bytes", typeof(Int32))]
                public Int32 Size1;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(128)]
                public Byte[] EmptyString2;
                public int Size
                {
                    get
                    {
                        return 540;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(680, 4)]
        public sealed class GlobalErrorReportCategoriesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("Name^*", typeof(String256))]
            public String256 Name;
            [Abide.Guerilla.Tags.FieldAttribute("Report Type*", typeof(Int16))]
            [Abide.Guerilla.Tags.OptionsAttribute(typeof(ReportTypeOptions), false)]
            public Int16 ReportType;
            [Abide.Guerilla.Tags.FieldAttribute("Flags*", typeof(Int16))]
            [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
            public Int16 Flags;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(2)]
            public Byte[] EmptyString;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(2)]
            public Byte[] EmptyString1;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(404)]
            public Byte[] EmptyString2;
            [Abide.Guerilla.Tags.FieldAttribute("Reports*", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("error report", 1024, typeof(ErrorReportsBlock))]
            public TagBlock Reports;
            public int Size
            {
                get
                {
                    return 680;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(644, 4)]
            public sealed class ErrorReportsBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("Type*", typeof(Int16))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(TypeOptions), false)]
                public Int16 Type;
                [Abide.Guerilla.Tags.FieldAttribute("Flags*", typeof(Int16))]
                [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
                public Int16 Flags;
                [Abide.Guerilla.Tags.FieldAttribute("Source Filename*", typeof(String32))]
                public String32 SourceFilename;
                [Abide.Guerilla.Tags.FieldAttribute("Source Line Number*", typeof(Int32))]
                public Int32 SourceLineNumber;
                [Abide.Guerilla.Tags.FieldAttribute("Vertices*", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("error report vertex", 1024, typeof(ErrorReportVerticesBlock))]
                public TagBlock Vertices;
                [Abide.Guerilla.Tags.FieldAttribute("Vectors*", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("error report vector", 1024, typeof(ErrorReportVectorsBlock))]
                public TagBlock Vectors;
                [Abide.Guerilla.Tags.FieldAttribute("Lines*", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("error report line", 1024, typeof(ErrorReportLinesBlock))]
                public TagBlock Lines;
                [Abide.Guerilla.Tags.FieldAttribute("Triangles*", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("error report triangle", 1024, typeof(ErrorReportTrianglesBlock))]
                public TagBlock Triangles;
                [Abide.Guerilla.Tags.FieldAttribute("Quads*", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("error report quad", 1024, typeof(ErrorReportQuadsBlock))]
                public TagBlock Quads;
                [Abide.Guerilla.Tags.FieldAttribute("Comments*", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("error report comment", 1024, typeof(ErrorReportCommentsBlock))]
                public TagBlock Comments;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(380)]
                public Byte[] EmptyString;
                [Abide.Guerilla.Tags.FieldAttribute("Report Key*", typeof(Int32))]
                public Int32 ReportKey;
                [Abide.Guerilla.Tags.FieldAttribute("Node Index*", typeof(Int32))]
                public Int32 NodeIndex;
                [Abide.Guerilla.Tags.FieldAttribute("Color*", typeof(ColorArgbF))]
                public ColorArgbF Color;
                [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                [Abide.Guerilla.Tags.PaddingAttribute(84)]
                public Byte[] EmptyString1;
                public int Size
                {
                    get
                    {
                        return 644;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(52, 4)]
                public sealed class ErrorReportVerticesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("Position*", typeof(Vector3))]
                    public Vector3 Position;
                    [Abide.Guerilla.Tags.FieldAttribute("Node Indices*", typeof(NodeIndicesElement[]))]
                    [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeIndicesElement))]
                    public NodeIndicesElement[] NodeIndices;
                    [Abide.Guerilla.Tags.FieldAttribute("Node Weights*", typeof(NodeWeightsElement[]))]
                    [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeWeightsElement))]
                    public NodeWeightsElement[] NodeWeights;
                    [Abide.Guerilla.Tags.FieldAttribute("Color*", typeof(ColorArgbF))]
                    public ColorArgbF Color;
                    [Abide.Guerilla.Tags.FieldAttribute("Screen Size*", typeof(Single))]
                    public Single ScreenSize;
                    public int Size
                    {
                        get
                        {
                            return 52;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    public sealed class NodeIndicesElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Node Index*", typeof(Byte))]
                        public Byte NodeIndex;
                        public int Size
                        {
                            get
                            {
                                return 0;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                    public sealed class NodeWeightsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Node Weight*", typeof(Single))]
                        public Single NodeWeight;
                        public int Size
                        {
                            get
                            {
                                return 0;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(64, 4)]
                public sealed class ErrorReportVectorsBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("Position*", typeof(Vector3))]
                    public Vector3 Position;
                    [Abide.Guerilla.Tags.FieldAttribute("Node Indices*", typeof(NodeIndicesElement[]))]
                    [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeIndicesElement))]
                    public NodeIndicesElement[] NodeIndices;
                    [Abide.Guerilla.Tags.FieldAttribute("Node Weights*", typeof(NodeWeightsElement[]))]
                    [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeWeightsElement))]
                    public NodeWeightsElement[] NodeWeights;
                    [Abide.Guerilla.Tags.FieldAttribute("Color*", typeof(ColorArgbF))]
                    public ColorArgbF Color;
                    [Abide.Guerilla.Tags.FieldAttribute("Normal*", typeof(Vector3))]
                    public Vector3 Normal;
                    [Abide.Guerilla.Tags.FieldAttribute("Screen Length*", typeof(Single))]
                    public Single ScreenLength;
                    public int Size
                    {
                        get
                        {
                            return 64;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    public sealed class NodeIndicesElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Node Index*", typeof(Byte))]
                        public Byte NodeIndex;
                        public int Size
                        {
                            get
                            {
                                return 0;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                    public sealed class NodeWeightsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Node Weight*", typeof(Single))]
                        public Single NodeWeight;
                        public int Size
                        {
                            get
                            {
                                return 0;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(80, 4)]
                public sealed class ErrorReportLinesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("Points*", typeof(PointsElement[]))]
                    [Abide.Guerilla.Tags.ArrayAttribute(2, typeof(PointsElement))]
                    public PointsElement[] Points;
                    [Abide.Guerilla.Tags.FieldAttribute("Node Weights*", typeof(NodeWeightsElement[]))]
                    [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeWeightsElement))]
                    public NodeWeightsElement[] NodeWeights;
                    [Abide.Guerilla.Tags.FieldAttribute("Color*", typeof(ColorArgbF))]
                    public ColorArgbF Color;
                    public int Size
                    {
                        get
                        {
                            return 80;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    public sealed class PointsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Position*", typeof(Vector3))]
                        public Vector3 Position;
                        [Abide.Guerilla.Tags.FieldAttribute("Node Indices*", typeof(NodeIndicesElement[]))]
                        [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeIndicesElement))]
                        public NodeIndicesElement[] NodeIndices;
                        [Abide.Guerilla.Tags.FieldAttribute("Node Weights*", typeof(NodeWeightsElement[]))]
                        [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeWeightsElement))]
                        public NodeWeightsElement[] NodeWeights;
                        public int Size
                        {
                            get
                            {
                                return 0;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                        public sealed class NodeIndicesElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("Node Index*", typeof(Byte))]
                            public Byte NodeIndex;
                            public int Size
                            {
                                get
                                {
                                    return 0;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                        }
                        public sealed class NodeWeightsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("Node Weight*", typeof(Single))]
                            public Single NodeWeight;
                            public int Size
                            {
                                get
                                {
                                    return 0;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                        }
                    }
                    public sealed class NodeWeightsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Node Weight*", typeof(Single))]
                        public Single NodeWeight;
                        public int Size
                        {
                            get
                            {
                                return 0;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(112, 4)]
                public sealed class ErrorReportTrianglesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("Points*", typeof(PointsElement[]))]
                    [Abide.Guerilla.Tags.ArrayAttribute(3, typeof(PointsElement))]
                    public PointsElement[] Points;
                    [Abide.Guerilla.Tags.FieldAttribute("Node Weights*", typeof(NodeWeightsElement[]))]
                    [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeWeightsElement))]
                    public NodeWeightsElement[] NodeWeights;
                    [Abide.Guerilla.Tags.FieldAttribute("Color*", typeof(ColorArgbF))]
                    public ColorArgbF Color;
                    public int Size
                    {
                        get
                        {
                            return 112;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    public sealed class PointsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Position*", typeof(Vector3))]
                        public Vector3 Position;
                        [Abide.Guerilla.Tags.FieldAttribute("Node Indices*", typeof(NodeIndicesElement[]))]
                        [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeIndicesElement))]
                        public NodeIndicesElement[] NodeIndices;
                        [Abide.Guerilla.Tags.FieldAttribute("Node Weights*", typeof(NodeWeightsElement[]))]
                        [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeWeightsElement))]
                        public NodeWeightsElement[] NodeWeights;
                        public int Size
                        {
                            get
                            {
                                return 0;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                        public sealed class NodeIndicesElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("Node Index*", typeof(Byte))]
                            public Byte NodeIndex;
                            public int Size
                            {
                                get
                                {
                                    return 0;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                        }
                        public sealed class NodeWeightsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("Node Weight*", typeof(Single))]
                            public Single NodeWeight;
                            public int Size
                            {
                                get
                                {
                                    return 0;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                        }
                    }
                    public sealed class NodeWeightsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Node Weight*", typeof(Single))]
                        public Single NodeWeight;
                        public int Size
                        {
                            get
                            {
                                return 0;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(144, 4)]
                public sealed class ErrorReportQuadsBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("Points*", typeof(PointsElement[]))]
                    [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(PointsElement))]
                    public PointsElement[] Points;
                    [Abide.Guerilla.Tags.FieldAttribute("Node Weights*", typeof(NodeWeightsElement[]))]
                    [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeWeightsElement))]
                    public NodeWeightsElement[] NodeWeights;
                    [Abide.Guerilla.Tags.FieldAttribute("Color*", typeof(ColorArgbF))]
                    public ColorArgbF Color;
                    public int Size
                    {
                        get
                        {
                            return 144;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    public sealed class PointsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Position*", typeof(Vector3))]
                        public Vector3 Position;
                        [Abide.Guerilla.Tags.FieldAttribute("Node Indices*", typeof(NodeIndicesElement[]))]
                        [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeIndicesElement))]
                        public NodeIndicesElement[] NodeIndices;
                        [Abide.Guerilla.Tags.FieldAttribute("Node Weights*", typeof(NodeWeightsElement[]))]
                        [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeWeightsElement))]
                        public NodeWeightsElement[] NodeWeights;
                        public int Size
                        {
                            get
                            {
                                return 0;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                        public sealed class NodeIndicesElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("Node Index*", typeof(Byte))]
                            public Byte NodeIndex;
                            public int Size
                            {
                                get
                                {
                                    return 0;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                        }
                        public sealed class NodeWeightsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("Node Weight*", typeof(Single))]
                            public Single NodeWeight;
                            public int Size
                            {
                                get
                                {
                                    return 0;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                        }
                    }
                    public sealed class NodeWeightsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Node Weight*", typeof(Single))]
                        public Single NodeWeight;
                        public int Size
                        {
                            get
                            {
                                return 0;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(68, 4)]
                public sealed class ErrorReportCommentsBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("Position*", typeof(Vector3))]
                    public Vector3 Position;
                    [Abide.Guerilla.Tags.FieldAttribute("Node Indices*", typeof(NodeIndicesElement[]))]
                    [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeIndicesElement))]
                    public NodeIndicesElement[] NodeIndices;
                    [Abide.Guerilla.Tags.FieldAttribute("Node Weights*", typeof(NodeWeightsElement[]))]
                    [Abide.Guerilla.Tags.ArrayAttribute(4, typeof(NodeWeightsElement))]
                    public NodeWeightsElement[] NodeWeights;
                    [Abide.Guerilla.Tags.FieldAttribute("Color*", typeof(ColorArgbF))]
                    public ColorArgbF Color;
                    public int Size
                    {
                        get
                        {
                            return 68;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    public sealed class NodeIndicesElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Node Index*", typeof(Byte))]
                        public Byte NodeIndex;
                        public int Size
                        {
                            get
                            {
                                return 0;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                    public sealed class NodeWeightsElement : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("Node Weight*", typeof(Single))]
                        public Single NodeWeight;
                        public int Size
                        {
                            get
                            {
                                return 0;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                    }
                }
                public enum TypeOptions
                {
                    Silent = 0,
                    Comment = 1,
                    Warning = 2,
                    Error = 3,
                }
                public enum FlagsOptions
                {
                    Rendered = 1,
                    TangentSpace = 2,
                    Noncritical = 4,
                    LightmapLight = 8,
                    ReportKeyIsValid = 16,
                }
            }
            public enum ReportTypeOptions
            {
                Silent = 0,
                Comment = 1,
                Warning = 2,
                Error = 3,
            }
            public enum FlagsOptions
            {
                Rendered = 1,
                TangentSpace = 2,
                Noncritical = 4,
                LightmapLight = 8,
                ReportKeyIsValid = 16,
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(4, 4)]
        public sealed class CollisionModelMaterialBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("name^*", typeof(StringId))]
            public StringId Name;
            public int Size
            {
                get
                {
                    return 4;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(16, 4)]
        public sealed class CollisionModelRegionBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("name^*", typeof(StringId))]
            public StringId Name;
            [Abide.Guerilla.Tags.FieldAttribute("permutations*", typeof(TagBlock))]
            [Abide.Guerilla.Tags.BlockAttribute("collision_model_permutation_block", 32, typeof(CollisionModelPermutationBlock))]
            public TagBlock Permutations;
            public int Size
            {
                get
                {
                    return 16;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            [Abide.Guerilla.Tags.FieldSetAttribute(28, 4)]
            public sealed class CollisionModelPermutationBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
            {
                [Abide.Guerilla.Tags.FieldAttribute("name^*", typeof(StringId))]
                public StringId Name;
                [Abide.Guerilla.Tags.FieldAttribute("bsps*", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("bsp", 64, typeof(CollisionModelBspBlock))]
                public TagBlock Bsps;
                [Abide.Guerilla.Tags.FieldAttribute("bsp_physics*", typeof(TagBlock))]
                [Abide.Guerilla.Tags.BlockAttribute("collision_bsp_physics_block", 1024, typeof(CollisionBspPhysicsBlock))]
                public TagBlock BspPhysics;
                public int Size
                {
                    get
                    {
                        return 28;
                    }
                }
                public void Initialize()
                {
                }
                public void Read(System.IO.BinaryReader reader)
                {
                }
                public void Write(System.IO.BinaryWriter writer)
                {
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(100, 4)]
                public sealed class CollisionModelBspBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("node index*", typeof(Int16))]
                    public Int16 NodeIndex;
                    [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                    [Abide.Guerilla.Tags.PaddingAttribute(2)]
                    public Byte[] EmptyString;
                    [Abide.Guerilla.Tags.FieldAttribute("bsp*", typeof(GlobalCollisionBspStructBlock))]
                    public GlobalCollisionBspStructBlock Bsp;
                    public int Size
                    {
                        get
                        {
                            return 100;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                    [Abide.Guerilla.Tags.FieldSetAttribute(96, 4)]
                    public sealed class GlobalCollisionBspStructBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                    {
                        [Abide.Guerilla.Tags.FieldAttribute("BSP 3D Nodes*", typeof(TagBlock))]
                        [Abide.Guerilla.Tags.BlockAttribute("bsp3d_nodes_block", 131072, typeof(Bsp3dNodesBlock))]
                        public TagBlock Bsp3dNodes;
                        [Abide.Guerilla.Tags.FieldAttribute("Planes*", typeof(TagBlock))]
                        [Abide.Guerilla.Tags.BlockAttribute("planes_block", 65536, typeof(PlanesBlock))]
                        public TagBlock Planes;
                        [Abide.Guerilla.Tags.FieldAttribute("Leaves*", typeof(TagBlock))]
                        [Abide.Guerilla.Tags.BlockAttribute("leaves_block", 65536, typeof(LeavesBlock))]
                        public TagBlock Leaves;
                        [Abide.Guerilla.Tags.FieldAttribute("BSP 2D References*", typeof(TagBlock))]
                        [Abide.Guerilla.Tags.BlockAttribute("bsp2d_references_block", 131072, typeof(Bsp2dReferencesBlock))]
                        public TagBlock Bsp2dReferences;
                        [Abide.Guerilla.Tags.FieldAttribute("BSP 2D Nodes*", typeof(TagBlock))]
                        [Abide.Guerilla.Tags.BlockAttribute("bsp2d_nodes_block", 131072, typeof(Bsp2dNodesBlock))]
                        public TagBlock Bsp2dNodes;
                        [Abide.Guerilla.Tags.FieldAttribute("Surfaces*", typeof(TagBlock))]
                        [Abide.Guerilla.Tags.BlockAttribute("surfaces_block", 131072, typeof(SurfacesBlock))]
                        public TagBlock Surfaces;
                        [Abide.Guerilla.Tags.FieldAttribute("Edges*", typeof(TagBlock))]
                        [Abide.Guerilla.Tags.BlockAttribute("edges_block", 262144, typeof(EdgesBlock))]
                        public TagBlock Edges;
                        [Abide.Guerilla.Tags.FieldAttribute("Vertices*", typeof(TagBlock))]
                        [Abide.Guerilla.Tags.BlockAttribute("vertices_block", 131072, typeof(VerticesBlock))]
                        public TagBlock Vertices;
                        public int Size
                        {
                            get
                            {
                                return 96;
                            }
                        }
                        public void Initialize()
                        {
                        }
                        public void Read(System.IO.BinaryReader reader)
                        {
                        }
                        public void Write(System.IO.BinaryWriter writer)
                        {
                        }
                        [Abide.Guerilla.Tags.FieldSetAttribute(8, 8)]
                        public sealed class Bsp3dNodesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                            [Abide.Guerilla.Tags.PaddingAttribute(8)]
                            public Byte[] EmptyString;
                            public int Size
                            {
                                get
                                {
                                    return 8;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                        }
                        [Abide.Guerilla.Tags.FieldSetAttribute(16, 16)]
                        public sealed class PlanesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("Plane*", typeof(Vector4))]
                            public Vector4 Plane;
                            public int Size
                            {
                                get
                                {
                                    return 16;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                        }
                        [Abide.Guerilla.Tags.FieldSetAttribute(4, 4)]
                        public sealed class LeavesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("Flags*", typeof(Byte))]
                            [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
                            public Byte Flags;
                            [Abide.Guerilla.Tags.FieldAttribute("BSP 2D Reference Count*", typeof(Byte))]
                            public Byte Bsp2dReferenceCount;
                            [Abide.Guerilla.Tags.FieldAttribute("First BSP 2D Reference*", typeof(Int16))]
                            public Int16 FirstBsp2dReference;
                            public int Size
                            {
                                get
                                {
                                    return 4;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                            public enum FlagsOptions
                            {
                                ContainsDoubleSidedSurfaces = 1,
                            }
                        }
                        [Abide.Guerilla.Tags.FieldSetAttribute(4, 4)]
                        public sealed class Bsp2dReferencesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("Plane*", typeof(Int16))]
                            public Int16 Plane;
                            [Abide.Guerilla.Tags.FieldAttribute("BSP 2D Node*", typeof(Int16))]
                            public Int16 Bsp2dNode;
                            public int Size
                            {
                                get
                                {
                                    return 4;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                        }
                        [Abide.Guerilla.Tags.FieldSetAttribute(16, 16)]
                        public sealed class Bsp2dNodesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("Plane*", typeof(Vector3))]
                            public Vector3 Plane;
                            [Abide.Guerilla.Tags.FieldAttribute("Left Child*", typeof(Int16))]
                            public Int16 LeftChild;
                            [Abide.Guerilla.Tags.FieldAttribute("Right Child*", typeof(Int16))]
                            public Int16 RightChild;
                            public int Size
                            {
                                get
                                {
                                    return 16;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                        }
                        [Abide.Guerilla.Tags.FieldSetAttribute(8, 8)]
                        public sealed class SurfacesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("Plane*", typeof(Int16))]
                            public Int16 Plane;
                            [Abide.Guerilla.Tags.FieldAttribute("First Edge*", typeof(Int16))]
                            public Int16 FirstEdge;
                            [Abide.Guerilla.Tags.FieldAttribute("Flags*", typeof(Byte))]
                            [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
                            public Byte Flags;
                            [Abide.Guerilla.Tags.FieldAttribute("Breakable Surface*", typeof(Byte))]
                            public Byte BreakableSurface;
                            [Abide.Guerilla.Tags.FieldAttribute("Material*", typeof(Int16))]
                            public Int16 Material;
                            public int Size
                            {
                                get
                                {
                                    return 8;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                            public enum FlagsOptions
                            {
                                TwoSided = 1,
                                Invisible = 2,
                                Climbable = 4,
                                Breakable = 8,
                                Invalid = 16,
                                Conveyor = 32,
                            }
                        }
                        [Abide.Guerilla.Tags.FieldSetAttribute(12, 4)]
                        public sealed class EdgesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("Start Vertex*", typeof(Int16))]
                            public Int16 StartVertex;
                            [Abide.Guerilla.Tags.FieldAttribute("End Vertex*", typeof(Int16))]
                            public Int16 EndVertex;
                            [Abide.Guerilla.Tags.FieldAttribute("Forward Edge*", typeof(Int16))]
                            public Int16 ForwardEdge;
                            [Abide.Guerilla.Tags.FieldAttribute("Reverse Edge*", typeof(Int16))]
                            public Int16 ReverseEdge;
                            [Abide.Guerilla.Tags.FieldAttribute("Left Surface*", typeof(Int16))]
                            public Int16 LeftSurface;
                            [Abide.Guerilla.Tags.FieldAttribute("Right Surface*", typeof(Int16))]
                            public Int16 RightSurface;
                            public int Size
                            {
                                get
                                {
                                    return 12;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                        }
                        [Abide.Guerilla.Tags.FieldSetAttribute(16, 16)]
                        public sealed class VerticesBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                        {
                            [Abide.Guerilla.Tags.FieldAttribute("Point*", typeof(Vector3))]
                            public Vector3 Point;
                            [Abide.Guerilla.Tags.FieldAttribute("First Edge*", typeof(Int16))]
                            public Int16 FirstEdge;
                            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                            [Abide.Guerilla.Tags.PaddingAttribute(2)]
                            public Byte[] EmptyString;
                            public int Size
                            {
                                get
                                {
                                    return 16;
                                }
                            }
                            public void Initialize()
                            {
                            }
                            public void Read(System.IO.BinaryReader reader)
                            {
                            }
                            public void Write(System.IO.BinaryWriter writer)
                            {
                            }
                        }
                    }
                }
                [Abide.Guerilla.Tags.FieldSetAttribute(128, 16)]
                public sealed class CollisionBspPhysicsBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
                {
                    [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                    [Abide.Guerilla.Tags.PaddingAttribute(4)]
                    public Byte[] EmptyString;
                    [Abide.Guerilla.Tags.FieldAttribute("Size*", typeof(Int16))]
                    public Int16 Size1;
                    [Abide.Guerilla.Tags.FieldAttribute("Count*", typeof(Int16))]
                    public Int16 Count;
                    [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                    [Abide.Guerilla.Tags.PaddingAttribute(4)]
                    public Byte[] EmptyString1;
                    [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                    [Abide.Guerilla.Tags.PaddingAttribute(4)]
                    public Byte[] EmptyString2;
                    [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                    [Abide.Guerilla.Tags.PaddingAttribute(32)]
                    public Byte[] EmptyString3;
                    [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                    [Abide.Guerilla.Tags.PaddingAttribute(16)]
                    public Byte[] EmptyString4;
                    [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                    [Abide.Guerilla.Tags.PaddingAttribute(4)]
                    public Byte[] EmptyString5;
                    [Abide.Guerilla.Tags.FieldAttribute("Size*", typeof(Int16))]
                    public Int16 Size2;
                    [Abide.Guerilla.Tags.FieldAttribute("Count*", typeof(Int16))]
                    public Int16 Count1;
                    [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                    [Abide.Guerilla.Tags.PaddingAttribute(4)]
                    public Byte[] EmptyString6;
                    [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                    [Abide.Guerilla.Tags.PaddingAttribute(4)]
                    public Byte[] EmptyString7;
                    [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                    [Abide.Guerilla.Tags.PaddingAttribute(4)]
                    public Byte[] EmptyString8;
                    [Abide.Guerilla.Tags.FieldAttribute("Size*", typeof(Int16))]
                    public Int16 Size3;
                    [Abide.Guerilla.Tags.FieldAttribute("Count*", typeof(Int16))]
                    public Int16 Count2;
                    [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                    [Abide.Guerilla.Tags.PaddingAttribute(4)]
                    public Byte[] EmptyString9;
                    [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                    [Abide.Guerilla.Tags.PaddingAttribute(8)]
                    public Byte[] EmptyString10;
                    [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
                    [Abide.Guerilla.Tags.PaddingAttribute(8)]
                    public Byte[] EmptyString11;
                    public int Size
                    {
                        get
                        {
                            return 128;
                        }
                    }
                    public void Initialize()
                    {
                    }
                    public void Read(System.IO.BinaryReader reader)
                    {
                    }
                    public void Write(System.IO.BinaryWriter writer)
                    {
                    }
                }
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(20, 4)]
        public sealed class CollisionModelPathfindingSphereBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("node*", typeof(Int16))]
            public Int16 Node;
            [Abide.Guerilla.Tags.FieldAttribute("flags", typeof(Int16))]
            [Abide.Guerilla.Tags.OptionsAttribute(typeof(FlagsOptions), true)]
            public Int16 Flags;
            [Abide.Guerilla.Tags.FieldAttribute("center*", typeof(Vector3))]
            public Vector3 Center;
            [Abide.Guerilla.Tags.FieldAttribute("radius*", typeof(Single))]
            public Single Radius;
            public int Size
            {
                get
                {
                    return 20;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
            public enum FlagsOptions
            {
                RemainsWhenOpen = 1,
                VehicleOnly = 2,
                WithSectors = 4,
            }
        }
        [Abide.Guerilla.Tags.FieldSetAttribute(12, 4)]
        public sealed class CollisionModelNodeBlock : Abide.Guerilla.Tags.IReadable, Abide.Guerilla.Tags.IWritable
        {
            [Abide.Guerilla.Tags.FieldAttribute("name^*", typeof(StringId))]
            public StringId Name;
            [Abide.Guerilla.Tags.FieldAttribute("", typeof(Byte[]))]
            [Abide.Guerilla.Tags.PaddingAttribute(2)]
            public Byte[] EmptyString;
            [Abide.Guerilla.Tags.FieldAttribute("parent node*", typeof(Int16))]
            public Int16 ParentNode;
            [Abide.Guerilla.Tags.FieldAttribute("next sibling node*", typeof(Int16))]
            public Int16 NextSiblingNode;
            [Abide.Guerilla.Tags.FieldAttribute("first child node*", typeof(Int16))]
            public Int16 FirstChildNode;
            public int Size
            {
                get
                {
                    return 12;
                }
            }
            public void Initialize()
            {
            }
            public void Read(System.IO.BinaryReader reader)
            {
            }
            public void Write(System.IO.BinaryWriter writer)
            {
            }
        }
        public enum FlagsOptions
        {
            ContainsOpenEdges = 1,
        }
    }
}
#pragma warning restore CS1591
