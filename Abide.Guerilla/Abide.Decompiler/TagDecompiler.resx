<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAC
        CwAAAk1TRnQBSQFMAgEBAgEAARABAAEQAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEBIAAwQBBQMEAQUDBAEGAwQBBgMFAQcDBQEHAwUBBwMGAQgDBgEIAwcBCQMH
        AQkDBwEKAwcBCgMHAQoDCAELAwgBCwgAA2MBlwNpAZ8DaQGfA2kBnwNpAZ8DaQGfA2kBnwNpAZ8DaQGf
        A2kBnwNpAZ8DYwGXiAADBAEFAwQBBQH3AaMBbQH/AfcBowFtAf8B9wGjAW0B/wH3AaMBbQH/AfcBowFt
        Af8B9wGjAW0B/wH3AaMBbQH/AfcBowFtAf8B9wGjAW0B/wH3AaMBbQH/Ae0BnQFpAf8B7QGdAWkB/wMH
        AQoDBwEKCAAD8wH/A/AB/wPxAf8D8QH/A/EB/wPxAf8D8QH/A/EB/wPxAf8D8QH/A/AB/wPzAf+IAAMD
        BAQBBQH3AaMBbQH/AfQBawE1Af8B9AFrATUB/wH0AWsBNQH/AfQBawE1Af8B9AFrATUB/wH0AWsBNQH/
        AfQBawE1Af8B9AFrATUB/wH3AaMBbQH/AfEBsgFxAf8B7gGdAWkB/wMHAQkDBwEKCAAD2AHyA/EB/wPy
        Af8D8gH/A/AB/wPsAf8D6QH/A+kB/wPsAf8D8AH/A/EB/wPYAfKIAAMDAQQDAwEEAfcBowFtAf8B9QFx
        ATsB/wH1AXEBOwH/AfUBcQE7Af8B9QFxATsB/wH1AXEBOwH/AfUBcQE7Af8B9QFxATsB/wH1AXEBOwH/
        AfcBowFtAf8B8gGzAXEB/wHuAZ0BaQH/AwcBCQMHAQkIAAPYAfID8QH/A/IB/wPvAf8D5gH/A9oB/wPT
        Af8D0wH/A9oB/wPnAf8D7gH/A9gB8ogAAwMBBAMDAQQB9wGjAW0B/wH1AXkBQQH/AfUBeQFBAf8B9QF5
        AUEB/wH1AXkBQQH/AfUBeQFBAf8B9QF5AUEB/wH1AXkBQQH/AfUBeQFBAf8B9wGaAWMB/wHyAakBbgH/
        AY8BcgFgAcUDBgEIAwYBCAgAA9gB8gPxAf8D8AH/A+cB/wPdAf8DzAH/AsYByAH/AtEB0gH/A8oB/wPW
        Af8D5gH/A9YB8ogAAwMBBAMDAQQB9wGjAW0B/wH2AYMBSAH/AfYBgwFIAf8B9gGDAUgB/wH2AYMBSAH/
        AfYBgwFIAf8B9gGDAUgB/wH2AYMBSAH/AfYBgwFIAf8B9gGOAVUB/wH2AaMBbQH/ASwCKwFCAwYBCAMG
        AQgIAAPYAfID8QH/A+wB/wLZAdgB/wGyAbEBrwH/AasBrgG2Af8BrgGzAcAB/wGnAaoBsQH/AsgByQH/
        A8oB/wPZAf8D1AHyiAADAgQDAQQB9wGjAW0B/wH3AYsBTwH/AfcBiwFPAf8B9wGLAU8B/wH3AYsBTwH/
        AfcBiwFPAf8B9wGLAU8B/wH3AYsBTwH/AfcBiwFPAf8B9wGLAU8B/wH3AaMBbQH/AwUBBwMFAQcDBQEH
        CAAD2AHyA/EB/wPrAf8CvgG8Af8BwwHHAdUB/wHJAccBwwH/Ac0BswFpAf8B2AHEAY8B/wGqAawBsgH/
        AtEB0gH/A9EB/wPRAfOIAAMCAQMDAgEDAfcBowFtAf8B9wGUAVYB/wH3AZQBVgH/AfcBlAFWAf8B9wGU
        AVYB/wH3AZQBVgH/AfcBlAFWAf8B9wGUAVYB/wH3AZQBVgH/AfcBlAFWAf8B9wGjAW0B/wMFAQcDBQEH
        AwUBBwgAA9gB8gPxAf8C3wHdAf8BxwHLAdcB/wPUAf8B1wG+AW8B/wHIAZsBGwH/AdEBtQFpAf8BsQG1
        AcEB/wHEAcUByAH/A9AB/wPRAfOIAAMCAQMDAgEDAfcBowFtAf8B9wGdAV0B/wH3AZ0BXQH/AfcBnQFd
        Af8B9wGdAV0B/wH3AZ0BXQH/AfcBnQFdAf8B9wGdAV0B/wH3AZ0BXQH/AfcBnQFdAf8B9wGjAW0B/wME
        AQYDBAEGAwQBBggAA9gB8gPxAf8B4gHkAe0B/wHVAdYB3AH/Ad0BygGFAf8B0wGzAUYB/wHXAb4BcgH/
        AcoBxwHDAf8BqwGuAbcB/wLMAcsB/wPYAf8D1AHyiAADAQQCAQMB9wGjAW0B/wH4AaUBZAH/AfgBpQFk
        Af8B+AGlAWQB/wH4AaUBZAH/AfgBpQFkAf8B+AGlAWQB/wH4AaUBZAH/AfgBpQFkAf8B+AGlAWQB/wH3
        AaMBbQH/AwQBBgMEAQYDBAEGCAAD2AHyA/EB/wHyAfQB9wH/Ad4B0AGaAf8B3QHCAVgB/wHdAcsBjgH/
        AdMB1AHXAf8BwwHHAdUB/wKxAa8B/wPfAf8D5QH/A9YB8ogAAwEBAgMBAQIB9wGjAW0B/wH5Aa0BawH/
        AfkBrQFrAf8B+QGtAWsB/wH5Aa0BawH/AfkBrQFrAf8B+QGtAWsB/wH5Aa0BawH/AfkBrQFrAf8B+QGt
        AWsB/wH3AaMBbQH/AwQBBQMEAQUDBAEFCAAD2AHyA/EB/wHwAewB2gH/AeYB1QGJAf8B3gHUAa0B/wHT
        AdYB3wH/AccBywHWAf8BvwG+AbwB/wPYAf8D5wH/A+0B/wPYAfKIAAMBAQIDAQECAfcBowFtAf8B+QG1
        AXEB/wH5AbUBcQH/AfkBtQFxAf8B+QG1AXEB/wH5AbUBcQH/AfkBtQFxAf8B+QG1AXEB/wH5AbUBcQH/
        AfkBtQFxAf8B9wGjAW0B/wMEAQUDBAEFAwQBBQgAA9gB8gPxAf8B8AHuAeMB/wHxAe8B4wH/AfEB8wH4
        Af8C4wHpAf8C4AHeAf8D6QH/A+wB/wPxAf8D8AX/iAADAQECAwEBAgH3AaMBbQH/AfoBuwF3Af8B+gG7
        AXcB/wH6AbsBdwH/AfoBuwF3Af8B+gG7AXcB/wH6AbsBdwH/AfoBuwF3Af8B+gG7AXcB/wH6AbsBdwH/
        AfcBowFtAf8DAwEEAwMBBAMDAQQIAAPYAfID8QH/A/IB/wPyAf8D8gH/A/IB/wPyAf8D8gH/A/IB/wPw
        Bf8DcAG4iAADAQECAwEBAgH3AaMBbQH/AfoBwQF7Af8B+gHBAXsB/wH6AcEBewH/AfoBwQF7Af8B+gHB
        AXsB/wH6AcEBewH/AfoBwQF7Af8B+gHBAXsB/wH6AcEBewH/AfcBowFtAf8DAgEDAwIEAwEECAAD2AHy
        A/EB/wPyAf8D8gH/A/IB/wPyAf8D8gH/A/MB/wPwBf8DfAHEjAADAQECAwEBAgH3AaMBbQH/AfcBowFt
        Af8B9wGjAW0B/wH3AaMBbQH/AfcBowFtAf8B9wGjAW0B/wH3AaMBbQH/AfcBowFtAf8B9wGjAW0B/wH3
        AaMBbQH/AfcBowFtAf8DAgEDAwIBAwMCAQMIAAPzAf8D7wH/A/AB/wPwAf8D8AH/A/AB/wPwAf8D8gX/
        A4wBzJMAAQEDAAQBAQIDAQECAwEBAgMBAQIDAQECAwEBAgMBAQIDAQECAwEBAgMBAQIDAQECAwEBAgMB
        AQIDAQECCAADcQGmA3gBrwN4Aa8DeAGvA3gBrwN4Aa8DeAGvA3sBrwNXAY6UAAFCAU0BPgcAAT4DAAEo
        AwABQAMAARADAAEBAQABAQUAAYAXAAP/AwABwAEDBgABwAEDBgABwAEDBgABwAEDBgABwAEDBgABwAED
        BgABwAEDBgABwAEDBgABwAEDBgABwAEDBgABwAEDBgABwAEDBgABwAEDBgABwAEHBgABwAEPBgABwAEf
        BAAL
</value>
  </data>
</root>