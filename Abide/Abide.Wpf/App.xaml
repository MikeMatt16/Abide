<Application x:Class="Abide.Wpf.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             Startup="ApplicationStartup">
    <Application.Resources>
        <Color x:Key="ActiveGlow" A="255" R="74" G="105" B="241"/>
        <SolidColorBrush x:Key="ActiveGlowBrush" Color="{StaticResource ActiveGlow}"/>
        <SolidColorBrush x:Key="ActiveAccent" Color="{StaticResource ActiveGlow}"/>
        <SolidColorBrush x:Key="ActiveAccentHighlight" Color="#6D88FF"/>
        <SolidColorBrush x:Key="Background" Color="#FF2D2D30"/>
        <SolidColorBrush x:Key="Foreground" Color="White"/>
        <SolidColorBrush x:Key="ForegroundDisabled" Color="#FF3F3F46"/>
        <SolidColorBrush x:Key="BackgroundDark" Color="#FF1E1E1E"/>
        <SolidColorBrush x:Key="BackgroundLight" Color="#FF3F3F46"/>
        <SolidColorBrush x:Key="BorderDisabled" Color="#FF3F3F46"/>
        
        <Style x:Key="CaptionButton" TargetType="Button">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="Transparent" Name="Border">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#3f3f41"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource ActiveGlowBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="{x:Type TreeView}" TargetType="TreeView">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TreeView">
                        <Border x:Name="Border" BorderThickness="1" BorderBrush="{StaticResource BackgroundLight}"
                                Background="{StaticResource BackgroundDark}">
                            <ScrollViewer Focusable="False" CanContentScroll="False">
                                <ItemsPresenter/>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="VisualStudioExpandCollapseToggleStyle" TargetType="ToggleButton">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid Width="15" Height="13" Background="Transparent">
                            <Path x:Name="ExpandedStatePath" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="1"
                                  Data="M 4 0 L 8 4 L 4 8 Z" Fill="White"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="ExpandedStatePath" Property="Data" Value="M 0 4 L 8 4 L 4 8 Z"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="VisualStudioTreeViewItemFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border>
                            <Rectangle Margin="0" StrokeThickness="5" Stroke="Black" StrokeDashArray="1 2" Opacity="0"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="{x:Type TreeViewItem}" TargetType="TreeViewItem">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment,
                RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment,
                RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Foreground" Value="{StaticResource Foreground}"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource VisualStudioTreeViewItemFocusVisual}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TreeViewItem">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="19" Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <ToggleButton Grid.Column="0" x:Name="Expander" Style="{StaticResource VisualStudioExpandCollapseToggleStyle}"
                                          ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                          HorizontalAlignment="Left"/>
                            <Border x:Name="Bd" Grid.Column="1" Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                                    Padding="{TemplateBinding Padding}">
                                <ContentPresenter x:Name="PART_Header" ContentSource="Header"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" Visibility="Collapsed"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="true">
                                <Setter TargetName="ItemsHost" Property="Visibility" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="IsSelectionActive" Value="true"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource ActiveAccent}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource BackgroundLight}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader" Value="false" />
                                    <Condition Property="Width" Value="Auto" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header" Property="MinWidth" Value="75" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader" Value="false" />
                                    <Condition Property="Height" Value="Auto" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header" Property="MinHeight" Value="19" />
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style> 

        <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="MenuItem">
            <Border Name="Border" Background="Transparent" Height="22" Width="317">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="34" SharedSizeGroup="Icon"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                        <ColumnDefinition Width="20"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter Name="Icon" Margin="6,0,6,0"
                                  VerticalAlignment="Center" HorizontalAlignment="Center"
                                  ContentSource="Icon"/>
                    <ContentPresenter Name="HeaderHost" Grid.Column="1" VerticalAlignment="Center"
                                  ContentSource="Header" RecognizesAccessKey="True"/>
                    <TextBlock x:Name="InputGestureText" Grid.Column="2"
                           Foreground="{TemplateBinding Foreground}"
                           Text="{TemplateBinding InputGestureText}"
                           Margin="5,2,0,2"/>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter TargetName="Border" Property="Background" Value="{StaticResource BackgroundLight}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="TextBlock.Foreground" Value="{StaticResource ForegroundDisabled}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" TargetType="MenuItem">
            <Border Name="Border" Background="Transparent" Height="22" Width="317">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="34" SharedSizeGroup="Icon"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                        <ColumnDefinition Width="20"/>
                    </Grid.ColumnDefinitions>

                    <ContentPresenter Name="Icon" Margin="6,0,6,0"
                                  VerticalAlignment="Center" HorizontalAlignment="Center"
                                  ContentSource="Icon"/>

                    <ContentPresenter Name="HeaderHost" Grid.Column="1" VerticalAlignment="Center"
                                  ContentSource="Header" RecognizesAccessKey="True"/>

                    <TextBlock x:Name="InputGestureText" Grid.Column="2"
                           Foreground="{TemplateBinding Foreground}"
                           Text="{TemplateBinding InputGestureText}"
                           Margin="5,2,0,2"/>
                    <Path Name="Arrow" Grid.Column="3" Fill="{TemplateBinding Foreground}"
                      Data="M 0 0 L 4 3 L 0 7 Z" HorizontalAlignment="Left" VerticalAlignment="Center"/>

                    <Popup Name="Popup" Placement="Right" IsOpen="{TemplateBinding IsSubmenuOpen}"
                       AllowsTransparency="True" Focusable="False"
                       PopupAnimation="None">
                        <Border BorderBrush="{StaticResource BackgroundLight}" Background="{StaticResource BackgroundDark}"
                                BorderThickness="1" Margin="0,0,11,11">
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="8" Opacity="0.4" ShadowDepth="4"
                                                  Direction="-45" RenderingBias="Quality"/>
                            </Border.Effect>
                            <StackPanel IsItemsHost="True" Margin="2"
                                    KeyboardNavigation.DirectionalNavigation="Cycle"/>
                        </Border>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter TargetName="Border" Property="Background" Value="{StaticResource BackgroundLight}"/>
                    <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource ActiveAccent}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="TextBlock.Foreground" Value="{StaticResource ForegroundDisabled}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" TargetType="MenuItem">
            <Border Name="Border" Background="Transparent" BorderBrush="{StaticResource BackgroundLight}" MinHeight="16">
                <Grid>
                    <ContentPresenter Name="HeaderPresenter" RecognizesAccessKey="True" ContentSource="Header"
                                  Margin="10,1,10,1"/>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter TargetName="Border" Property="Background" Value="{StaticResource BackgroundLight}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="MenuItem">
            <Border Name="Border" Background="Transparent" BorderBrush="{StaticResource BackgroundLight}" MinHeight="16">
                <Grid>
                    <Grid Name="MenuItemGrid">
                        <ContentPresenter Name="HeaderPresenter" RecognizesAccessKey="True" ContentSource="Header"
                                      Margin="10,1,10,1"/>
                    </Grid>
                    <Popup Name="Popup" AllowsTransparency="True" Focusable="False"
                       IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                       PopupAnimation="None" Placement="Bottom" VerticalOffset="-1" HorizontalOffset="-1">
                        <Border BorderBrush="{StaticResource BackgroundLight}" Background="{StaticResource BackgroundDark}"
                                BorderThickness="1,0,1,1" Margin="0,0,11,11">
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="8" Opacity="0.4" ShadowDepth="4"
                                              Direction="-45" RenderingBias="Quality"/>
                            </Border.Effect>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="{Binding ActualWidth, Mode=OneWay, ElementName=MenuItemGrid}"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Border Grid.Row="0" Grid.Column="0" BorderBrush="{StaticResource BackgroundDark}" BorderThickness="0,1,0,0"/>
                                <Border Grid.Row="0" Grid.Column="1" BorderBrush="{StaticResource BackgroundLight}" BorderThickness="0,1,0,0"/>
                                <StackPanel Grid.Row="1" Grid.ColumnSpan="2" IsItemsHost="True" Margin="2"
                                        KeyboardNavigation.DirectionalNavigation="Cycle"/>
                            </Grid>
                        </Border>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter TargetName="Border" Property="Background" Value="{StaticResource BackgroundLight}"/>
                </Trigger>
                <Trigger Property="IsSubmenuOpen" Value="True">
                    <Setter TargetName="Border" Property="Background" Value="{StaticResource BackgroundDark}"/>
                    <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0"/>
                    <Setter TargetName="HeaderPresenter" Property="Margin" Value="9,0,9,0"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="{x:Type Menu}" TargetType="Menu">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Background" Value="{StaticResource Background}"/>
            <Setter Property="Foreground" Value="{StaticResource Foreground}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Menu">
                        <Border Background="{StaticResource Background}" Margin="1,3,1,3">
                            <StackPanel ClipToBounds="False" Orientation="Horizontal" IsItemsHost="True"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="{x:Type TabControl}" TargetType="TabControl">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabControl">
                        <Grid KeyboardNavigation.TabNavigation="Local">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Border x:Name="HeaderBorder" Grid.Row="0" BorderThickness="0,0,0,2" BorderBrush="{DynamicResource ActiveAccent}">
                                <TabPanel x:Name="HeaderPanel" Panel.ZIndex="1" Margin="0,0,4,-1" IsItemsHost="True"
                                          KeyboardNavigation.TabIndex="1" Background="Transparent"/>
                            </Border>
                            <Border x:Name="Border" Grid.Row="1" BorderThickness="1,0,1,1" BorderBrush="{DynamicResource BackgroundLight}"
                                    KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.DirectionalNavigation="Contained"
                                    KeyboardNavigation.TabIndex="2">
                                <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent"/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="TabItem">
            <Setter Property="Foreground" Value="{DynamicResource Foreground}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <Grid x:Name="Root">
                            <Border x:Name="Border" Background="Transparent">
                                <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center"
                                                  ContentSource="Header" Margin="4,2,4,2" RecognizesAccessKey="True"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource ActiveAccentHighlight}"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource ActiveAccent}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>
