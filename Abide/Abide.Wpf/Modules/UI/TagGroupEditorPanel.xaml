<UserControl x:Name="userControl" x:Class="Abide.Wpf.Modules.UI.TagGroupEditorPanel"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Abide.Wpf.Modules.UI"
             xmlns:tag="clr-namespace:Abide.Wpf.Modules.Tag"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibility"/>
        <local:StringToVisibilityConverter x:Key="StringToVisibility"/>

        <DataTemplate x:Key="StringFieldTemplate" DataType="{x:Type tag:StringValueField}">
            <Grid Margin="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0" MinWidth="250" Margin="8,2,4,4" Text="{Binding Name}" VerticalAlignment="Top" HorizontalAlignment="Left"/>
                <TextBox Grid.Column="1" MinWidth="300" Text="{Binding StringValue, Mode=TwoWay}"/>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="BoundsFieldTemplate" DataType="{x:Type tag:StringBoundsValueField}">
            <Grid Margin="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0" MinWidth="250" Margin="8,2,4,4" Text="{Binding Name}" VerticalAlignment="Top" HorizontalAlignment="Left"/>
                <Grid Grid.Column="1" MinWidth="300">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <TextBox Grid.Column="0" Text="{Binding LowerValue, Mode=TwoWay}"/>
                    <TextBlock Grid.Column="1" Margin="6,0,6,0" Text="to" VerticalAlignment="Center"/>
                    <TextBox Grid.Column="2" Text="{Binding UpperValue, Mode=TwoWay}"/>
                </Grid>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="EnumFieldTemplate" DataType="{x:Type tag:EnumValueField}">
            <Grid Margin="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0" Margin="8,2,4,4" Text="{Binding Name}" VerticalAlignment="Top" HorizontalAlignment="Left" MinWidth="250"/>
                <ComboBox Grid.Column="1" MinWidth="300" SelectedIndex="{Binding SelectedIndex, Mode=TwoWay}" ItemsSource="{Binding Options}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Name}"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="BlockIndexFieldTemplate" DataType="{x:Type tag:BlockIndexValueField}">
            <Grid Margin="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0" Margin="8,2,4,4" Text="{Binding Name}" VerticalAlignment="Top" HorizontalAlignment="Left" MinWidth="250"/>
                <ComboBox Grid.Column="1" MinWidth="300" SelectedItem="{Binding SelectedOption, Mode=TwoWay}" ItemsSource="{Binding Options}"
                          IsReadOnly="{Binding IsReadOnly}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Name}"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
            </Grid>
        </DataTemplate>
        
        <DataTemplate x:Key="FlagsFieldTemplate" DataType="{x:Type tag:FlagsValueField}">
            <Grid Margin="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <TextBlock Grid.Column="0" Grid.Row="0" Margin="8,2,4,4" Text="{Binding Name}" VerticalAlignment="Top" HorizontalAlignment="Left" MinWidth="250"/>
                <Border Grid.Column="1" Grid.RowSpan="2" MinHeight="50" MaxHeight="200" MinWidth="300" BorderThickness="1"
                        Background="{StaticResource Background}" BorderBrush="{StaticResource BackgroundLight}">
                    <ScrollViewer VerticalScrollBarVisibility="Auto">
                        <ItemsControl ItemsSource="{Binding Options}" Margin="2">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal" Background="Transparent">
                                        <CheckBox IsChecked="{Binding IsChecked, Mode=TwoWay}" VerticalAlignment="Center"
                                                  VerticalContentAlignment="Center" HorizontalAlignment="Stretch">
                                            <TextBlock Text="{Binding Name}"/>
                                        </CheckBox>
                                    </StackPanel>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </ScrollViewer>
                </Border>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="StructFieldTemplate" DataType="{x:Type tag:StructValueField}">
            <ContentPresenter Content="{Binding Structure}" ContentTemplate="{DynamicResource TagBlockTemplate}"/>
        </DataTemplate>

        <DataTemplate x:Key="TagBlockFieldTemplate" DataType="{x:Type tag:TagBlockValueField}">
            <Border Margin="2" BorderThickness="1" Background="{StaticResource Background}" 
                    BorderBrush="{StaticResource BackgroundLight}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="80"/>
                            <ColumnDefinition Width="180"/>
                            <ColumnDefinition Width="Auto" MinWidth="300"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <ToggleButton Grid.Column="0" Margin="4" VerticalAlignment="Center" x:Name="ExpandCollapseButton"
                                      IsChecked="{Binding IsExpanded, Mode=TwoWay}" IsEnabled="{Binding Enabled}">
                            <ToggleButton.Style>
                                <Style TargetType="ToggleButton">
                                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ToggleButton">
                                                <Border x:Name="Border" Height="30" Background="Transparent">
                                                    <Path x:Name="ArrowPath" Fill="{StaticResource Foreground}"
                                                      VerticalAlignment="Center" HorizontalAlignment="Center"
                                                      Data="M 0 0 L 4 4 L 0 8 Z"/>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter TargetName="ArrowPath" Property="Fill" Value="{StaticResource ActiveAccent}"/>
                                                    </Trigger>
                                                    <Trigger Property="IsPressed" Value="True">
                                                        <Setter TargetName="ArrowPath" Property="Fill" Value="{StaticResource ActiveAccentPressed}"/>
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter TargetName="ArrowPath" Property="Fill" Value="{StaticResource ForegroundDisabled}"/>
                                                    </Trigger>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter TargetName="ArrowPath" Property="Data" Value="M 0 0 L 4 4 L 8 0 Z"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                        <TextBlock Grid.Column="1" Margin="4" Text="{Binding Name}" VerticalAlignment="Center"/>
                        <ComboBox Grid.Column="2" Margin="4" VerticalAlignment="Center" ItemsSource="{Binding TagBlockList}" 
                                  SelectedItem="{Binding SelectedTagBlock, Mode=TwoWay}" IsEnabled="{Binding Enabled}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding DisplayName}"/>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>

                        <StackPanel Grid.Column="3" Margin="4" Orientation="Horizontal">
                            <Button Margin="4,0,0,0" Command="{Binding AddBlockCommand}" Content="Add"/>
                            <Button Margin="4,0,0,0" Command="{Binding RemoveBlockCommand}" Content="Delete"/>
                            <Button Margin="4,0,0,0" Command="{Binding ClearCommand}" Content="Clear"/>
                            <Button Margin="4,0,0,0" Command="{Binding CopyCommand}" Content="Copy"/>
                            <Button Margin="4,0,0,0" Command="{Binding CopyAllCommand}" Content="Copy All"/>
                            <Button Margin="4,0,0,0" Command="{Binding PasteCommand}" Content="Paste"/>
                        </StackPanel>
                    </Grid>
                    <Border Grid.Row="1" BorderThickness="1" Background="{StaticResource BackgroundDark}"
                            BorderBrush="{StaticResource BackgroundLight}" Margin="30,0,6,6"
                            Visibility="{Binding ElementName=ExpandCollapseButton, Path=IsChecked, Converter={StaticResource BooleanToVisibility}}">
                        <ContentPresenter ContentTemplate="{DynamicResource TagBlockTemplate}" Content="{Binding SelectedTagBlock}"/>
                    </Border>
                </Grid>
            </Border>
        </DataTemplate>

        <local:FieldEditorTemplateSelector x:Key="FieldTemplateSelector"
                                           BlockEditor="{StaticResource TagBlockFieldTemplate}"
                                           StructEditor="{StaticResource StructFieldTemplate}"
                                           StringEditor="{StaticResource StringFieldTemplate}"
                                           BoundsEditor="{StaticResource BoundsFieldTemplate}"
                                           EnumEditor="{StaticResource EnumFieldTemplate}"
                                           BlockIndexEditor="{StaticResource BlockIndexFieldTemplate}"
                                           FlagsEditor="{StaticResource FlagsFieldTemplate}"/>

        <DataTemplate x:Key="TagBlockTemplate" DataType="{x:Type tag:AbideTagBlock}">
            <ItemsControl ItemsSource="{Binding Fields}" ItemTemplateSelector="{DynamicResource FieldTemplateSelector}"/>
        </DataTemplate>
    </UserControl.Resources>

    <ScrollViewer>
        <ItemsControl ItemsSource="{Binding ElementName=userControl, Path=TagGroup.TagBlocks}"
                      ItemTemplate="{DynamicResource ResourceKey=TagBlockTemplate}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Vertical"/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
        </ItemsControl>
    </ScrollViewer>
</UserControl>
